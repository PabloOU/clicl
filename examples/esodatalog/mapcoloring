; map coloring: assign each REGION a HUE so that no two ADJacent regions
;   are colored the same.  ESODB predicate is just COLOR.

; types for COLOR
(=> (color ?x ?y) (and (region ?x) (hue ?y)))

; if two regions are assigned the same color, they cannot be adjacent
(=> (color ?x ?y) (color ?z ?y) (not (adj ?x ?z))) 

; every region needs a color
; (forall ?x (=> (region ?x) (exists ?y (color ?x ?y)))) 
(<= (hascolor ?x) (color ?x ?y))
(=> (region ?x) (hascolor ?x))

; data 
(region r1) 
(region r2) 
(region r3) 
(hue red) 
(hue blue) 
(adj r1 r2) 
(adj r2 r3) 

