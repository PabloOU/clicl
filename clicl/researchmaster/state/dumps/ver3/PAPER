;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; paper;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;    (paper.instance    abadi2003)    (paper.bibtex      abadi2003 inproceedings)    (paper.author      abadi2003 martin.abadi)    (paper.title       abadi2003 "Logic in Access Control")    (paper.publisher   abadi2003 ieeecomputersciencepress)    (paper.publication abadi2003 lics)    (paper.startpage   abadi2003 228)    (paper.endpage     abadi2003 233)    (paper.url         abadi2003 "http://citeseer.ist.psu.edu/673738.html")    (paper.year        abadi2003 2003)    (paper.description abadi2003 "Survey of various authorization logics and languages.")    (paper.topic       abadi2003 authorizationlogic)    (paper.instance    abadi93)    (paper.bibtex      abadi93 article)    (paper.author      abadi93 martin.abadi)    (paper.author      abadi93 michael.burrows)    (paper.author      abadi93 butler.lampson)    (paper.title       abadi93 "A Calculus for Access Control in Distributed Systems")    (paper.publication abadi93 toplas)    (paper.volume      abadi93 15)    (paper.number      abadi93 4)    (paper.startpage   abadi93 706)    (paper.endpage     abadi93 734)    (paper.url         abadi93 "http://portal.acm.org/citation.cfm?id=155225")    (paper.year        abadi93 1993)    (paper.description abadi93 "Abadi introduces a logic for reasoning about the implications of various issues in network security: groups, roles, delegation, principals.  The paper is dense mathematically, with little motivation preceding the mathematics.  Semantically, they use Kripke structures, though why that is appropriate epistemologically I don't know.  If one takes the time to penetrate the paper, the math might be useful.  Halpbern's work attempts to solidify what I believe the authors call the calculus of principals.")    (paper.topic       abadi93 authorizationlogic)    (paper.related     abadi93 halpbern2001)    (paper.instance    abiteboul)    (paper.bibtex      abiteboul book)    (paper.author      abiteboul sergeabiteboul)    (paper.author      abiteboul richardhull)    (paper.author      abiteboul victorvianu)    (paper.title       abiteboul "Foundations of Databases")    (paper.publisher   abiteboul addisonwesley)    (paper.url         abiteboul "http://www.amazon.com/Foundations-Databases-Logical-Serge-Abiteboul/dp/0201537710")    (paper.year        abiteboul 1995)    (paper.description abiteboul "
The definitive guide for comparing various database query languages.
")    (paper.instance    agrawal2000)    (paper.bibtex      agrawal2000 inproceedings)    (paper.author      agrawal2000 sanjayagrawal)    (paper.author      agrawal2000 surajitchaudhuri)    (paper.author      agrawal2000 viveknarasayya)    (paper.title       agrawal2000 "Automated selection of materialized views and indexes in {M}icrosoft {SQL} {S}erver")    (paper.publication agrawal2000 vldb)    (paper.startpage   agrawal2000 496)    (paper.endpage     agrawal2000 505)    (paper.year        agrawal2000 2000)    (paper.description agrawal2000 "
Another paper on view selection problem in databases.
")    (paper.topic       agrawal2000 databases)    (paper.instance    aiello80)    (paper.bibtex      aiello80 inproceedings)    (paper.author      aiello80 luigiaaiello)    (paper.title       aiello80 "Automatic Generation of Semantic Attachments in FOL")    (paper.publication aiello80 aaai)    (paper.year        aiello80 1980)    (paper.rank        aiello80 2)    (paper.description aiello80 "
Aiello describes a process of generating new semantic attachments from old
ones by compiling FOL into Lisp.
")    (paper.topic       aiello80 theoremprovingwithattachments)    (paper.instance    alferes94)    (paper.author      alferes94 jjalferes)    (paper.author      alferes94 rli)    (paper.author      alferes94 lmpereira)    (paper.title       alferes94 "Concurrent Actions and Changes in the Situation Calculus")    (paper.publication alferes94 iberamia)    (paper.startpage   alferes94 93)    (paper.endpage     alferes94 104)    (paper.url         alferes94 "http://centria.fct.unl.pt/~lmp/publications/Biblio.html")    (paper.year        alferes94 1994)    (paper.description alferes94 "
Alferes shows that Situation Calculus extended with concurrent actions (e.g. buytoothpaste||buyshampoo) is no more expressive than standard Situation Calculus.  Intuitively, give names to every subset of actions since there are only 2^n such subsets of n actions.  Use those names as the actions in situation calculus.  The trouble here is how do we produce the effect axioms of a concurrent action set given the effect axioms of the individual actions?  Some of these axioms simply must be given by the user, e.g. buying toothpaste and shampoo at the same time might result in a free bar of soap, though neither effect axiom for buying toothpaste or shampoo would mention soap.  For those actions whose composition (in Alferes terms) can be determined automatically, the authors offer a solution using nonmonotonic logic: if Holds(p, Result(a, Result(b,s))) and Holds(p, Result(b, Result(a,s))) and there is no definition for Holds(p, Result(a||b),s), then conclude Holds(p, Result(a||b,s)).  Alferes elaborates the rule to include preconditions and subsets of size other than 2 (though some technical details arise in doing the latter).
")    (paper.topic       alferes94 fundamentals)    (paper.instance    allen90)    (paper.bibtex      allen90 book)    (paper.author      allen90 jallen)    (paper.author      allen90 jhendler)    (paper.author      allen90 atate)    (paper.title       allen90 "Readings in Planning")    (paper.publisher   allen90 morgankaufmann)    (paper.url         allen90 "http://www.amazon.com/exec/obidos/ASIN/1558601309/qid%3D954347291/sr%3D1-13/002-1714614-2412067")    (paper.year        allen90 1990)    (paper.description allen90 "
Survey book on planning through 1990.
")    (paper.topic       allen90 historical)    (paper.instance    allwein96)    (paper.bibtex      allwein96 book)    (paper.author      allwein96 gerardallwein)    (paper.author      allwein96 jonbarwise)    (paper.title       allwein96 "Logical Reasoning with Diagrams")    (paper.publisher   allwein96 oxforduniversitypress)    (paper.url         allwein96 "http://www.amazon.com/exec/obidos/tg/detail/-/0195104277/104-6992918-7685512?vi=glance")    (paper.year        allwein96 1996)    (paper.rank        allwein96 3)    (paper.description allwein96 "
This book advocates the appropriate use of diagrams in formal, rigorous
proofs.  It formalizes the notions of entailment from a diagram and 
adjustments to a diagram.  The formalization is pretty complex, but
it is not obvious how to simplify it.  The book also looks at various
logics that can incorporate diagramatic methods.  The last two sections
are non-theoretical: a series of case studies and a series of heterogeneous
systems.  The bibiliography looks helpful.
")    (paper.topic       allwein96 graphicalreasoningtechniques)    (paper.instance    alsac2002)    (paper.bibtex      alsac2002 techreport)    (paper.author      alsac2002 gurayalsac)    (paper.author      alsac2002 chittabaral)    (paper.title       alsac2002 "Reasoning in description logics using declarative logic programming")    (paper.publisher   alsac2002 arizonastateuniversity)    (paper.url         alsac2002 "http://citeseer.ist.psu.edu/context/2398354/0")    (paper.year        alsac2002 2002)    (paper.description alsac2002 "The authors discuss a nontrivial translation of a particular 
description logic into logic programming.
")    (paper.topic       alsac2002 logicprogramming)    (paper.instance    amir2001)    (paper.bibtex      amir2001 phdthesis)    (paper.author      amir2001 eyalamir)    (paper.title       amir2001 "Dividing and Conquering Logic")    (paper.publisher   amir2001 stanforduniversity)    (paper.year        amir2001 2001)    (paper.description amir2001 "
Amir's thesis considers several problems related to the construction and
reasoning about large knowledge bases.  First he discusses object-oriented
first-order logic, a synthesis of the object oriented paradigm and
FOL.  Second he applies this logic to theories of action, most notably
situation calculus.  Third he shows how to parallelize automated
theorem proving where a theory has been partitioned into pieces.  Fourth
he gives algorithms for automatically decomposing theories, based on
the syntactic character of the axioms.  Last he describes a logic-based
subsumption architecture for automated robot control, similar in spirit
to Golog.  An appendix on logic, one on reactive control systems, and
30 pages of references round out the thesis.  It should be noted
that while he does augment various resolution procedures to work
in this parallel setting, the rest of the results are independent of
a particular calculus.
")    (paper.topic       amir2001 logicalknowledgerepresentation)    (paper.instance    arenas98)    (paper.author      arenas98 marceloarenas)    (paper.author      arenas98 leopoldobertossi)    (paper.title       arenas98 "Hypothetical Temporal Reasoning with History Encoding")    (paper.publication arenas98 knowledgerepresentationmeetsdatabase)    (paper.volume      arenas98 4.1-4.8)    (paper.url         arenas98 "http://citeseer.ist.psu.edu/529093.html")    (paper.year        arenas98 1998)    (paper.rank        arenas98 3)    (paper.description arenas98 "
Arenas and Bertossi build on J. Chomicki's work of progressing a history of a database transaction's effects through the execution of a transaction to save on the costs of doing temporal constraint checking.  They also use Reiter's work on evaluating a query in the state that results after executing a sequence of actions.  The authors meld these two approaches to answer queries about the evolution of a database that contain quantification over states (for two specific types of queries).  This work also leads to a process for transforming dynamic integrity constraints into static ones and transforming history dependent action preconditions into local preconditions. 
")    (paper.topic       arenas98 hypotheticaltemporaldbqueries)    (paper.related     arenas98 chomicki95)    (paper.instance    arenas98b)    (paper.bibtex      arenas98b misc)    (paper.author      arenas98b marceloarenas)    (paper.author      arenas98b leopoldobertossi)    (paper.author      arenas98b javierpinto)    (paper.title       arenas98b "Representation of Temporal Knowledge in the Situation Calculus")    (paper.url         arenas98b "http://citeseer.ist.psu.edu/527517.html")    (paper.year        arenas98b 1998)    (paper.rank        arenas98b 3)    (paper.description arenas98b "
This incomplete paper describes translating a first-order modal temporal logic, Metric Time Temporal Logic, into situation calculus in the context of database updates.  The key insight is the creation of new relations that summarize information about the past.  Doing this gives us the power to write non-Markovian axioms (those that depend on a history of states instead of a just the last state).  
")    (paper.topic       arenas98b hypotheticaltemporaldbqueries)    (paper.instance    armando93)    (paper.bibtex      armando93 article)    (paper.author      armando93 aarmando)    (paper.author      armando93 egiunchiglia)    (paper.title       armando93 "Embedding complex decision procedures inside an interactive theorem prover")    (paper.publication armando93 amai)    (paper.volume      armando93 8)    (paper.number      armando93 3-4)    (paper.startpage   armando93 475)    (paper.endpage     armando93 502)    (paper.url         armando93 "http://citeseer.ist.psu.edu/context/552111/0")    (paper.year        armando93 1993)    (paper.description armando93 "
Building a Non-CNF SAT solver out of a CNF SAT-solver.  
")    (paper.topic       armando93 satsolving)    (paper.instance    armando97)    (paper.bibtex      armando97 techreport)    (paper.author      armando97 aarmando)    (paper.author      armando97 sranise)    (paper.title       armando97 "From Integrated Reasoning Specialists to Plug-and-Play Reasoning Components")    (paper.url         armando97 "http://citeseer.ist.psu.edu/armando98from.html")    (paper.year        armando97 1997)    (paper.rank        armando97 3)    (paper.description armando97 "
Armando and Ranise investigate breaking apart a reasoner into its
constituent pieces.  This investigation aims at learning how to
describe reasoners in an effort to promote the heterogeneous integration
of reasoners.  Their case study is NQTHM, Boyer and Moore's linear
arithmetic decision procedure.
")    (paper.topic       armando97 architectures)    (paper.instance    ashley2003epal)    (paper.bibtex      ashley2003epal misc)    (paper.author      ashley2003epal paul.ashley)    (paper.author      ashley2003epal satoshi.hada)    (paper.author      ashley2003epal gunter.karjoth)    (paper.author      ashley2003epal calvin.powers)    (paper.author      ashley2003epal matthias.schunter)    (paper.title       ashley2003epal "Enterprise Privacy Authorization Language (EPAL 1.2)")    (paper.url         ashley2003epal "http://www.w3.org/Submission/2003/SUBM-EPAL-20031110/")    (paper.year        ashley2003epal "2003")    (paper.description ashley2003epal "A W3C recommendation for a standard language for expressing authorization policies.  Order matters.  Access can be granted conditionally (obligations), where the conditions are not machine enforceable, e.g. this info must be thrown away in 6 months.  XML-based.  Hierarchy of actions and obligations allowed.")    (paper.topic       ashley2003epal authorizationlogic)    (paper.instance    astrachan92)    (paper.bibtex      astrachan92 inproceedings)    (paper.author      astrachan92 owenastrachan)    (paper.author      astrachan92 markstickel)    (paper.title       astrachan92 "Caching and Lemmaizing in Model Elimination Theorem Provers")    (paper.publication astrachan92 cade)    (paper.url         astrachan92 "http://citeseer.ist.psu.edu/astrachan92caching.html")    (paper.year        astrachan92 1992)    (paper.rank        astrachan92 3)    (paper.description astrachan92 "
Caching essentially saves intermediate results of a proof in a lookup table and
checks that table to avoid repeating the search for a result already computed.
It keeps track of the depth at which solutions are found to ensure
the same solutions are found given the appropriate depth cutoff using
iterative deepening.  Lemmaizing adds a derived result to the set of input 
clauses, which hopefully will decrease the depth of the proof by more 
than it increases the branching factor. This seminal paper deals with the 
Horn case.
")    (paper.topic       astrachan92 theoremprovingwithattachments)    (paper.instance    audemard2000)    (paper.bibtex      audemard2000 inproceedings)    (paper.author      audemard2000 gillesaudemard)    (paper.author      audemard2000 belaidbenhamou)    (paper.author      audemard2000 laurenthenocque)    (paper.title       audemard2000 "Two techniques to improve Finite Model Search")    (paper.publication audemard2000 cade)    (paper.url         audemard2000 "http://citeseer.ist.psu.edu/386981.html")    (paper.year        audemard2000 2000)    (paper.description audemard2000 "
Two techniques are introduced to speed up SEM-style model finding.
")    (paper.topic       audemard2000 modelbuilding)    (paper.instance    bachmair97)    (paper.author      bachmair97 leobachmair)    (paper.author      bachmair97 haraldganzinger)    (paper.author      bachmair97 andreivoronkov)    (paper.title       bachmair97 "Elimination of Equality via Transformation with Ordering Constraints")    (paper.publication bachmair97 cade)    (paper.url         bachmair97 "http://portal.acm.org/citation.cfm?id=648234.753446")    (paper.year        bachmair97 1997)    (paper.description bachmair97 "
This paper  builds on Brand's method for eliminating the substitution,
reflexivity, symmetry, and transitivity axioms of equality by rewriting
the rules.  It adds ordering constraints in the process of transformation,
which seems to be one of the big benefits.
")    (paper.topic       bachmair97 transformations)    (paper.instance    baralis97)    (paper.bibtex      baralis97 inproceedings)    (paper.author      baralis97 elenabaralis)    (paper.author      baralis97 stefanoparaboschi)    (paper.author      baralis97 ernestteniente)    (paper.title       baralis97 "Materialized view selection in a multidimensional database")    (paper.publication baralis97 vldb)    (paper.startpage   baralis97 155)    (paper.endpage     baralis97 165)    (paper.year        baralis97 1997)    (paper.description baralis97 "
Paper on view selection problem in databases
")    (paper.topic       baralis97 databases)    (paper.instance    barrett2000)    (paper.bibtex      barrett2000 inproceedings)    (paper.author      barrett2000 clarkbarrett)    (paper.author      barrett2000 daviddill)    (paper.author      barrett2000 aaronstump)    (paper.title       barrett2000 "A Framework for Cooperating Decision Procedures")    (paper.publication barrett2000 cade)    (paper.url         barrett2000 "http://citeseer.ist.psu.edu/barrett00framework.html")    (paper.year        barrett2000 2000)    (paper.rank        barrett2000 2)    (paper.description barrett2000 "
Barrett et. al. describe a framework approach for building reasoners
that combine decision procedures.  This work is a precurser to janicic2002.
They introduce half a dozen operations that can be used to interrelate
these decision procedures; they further show how Nelson Oppen and
Shostak procedures can be built in their framework.
")    (paper.topic       barrett2000 architectures)    (paper.related     barrett2000 janicic2002)    (paper.instance    barth2004conflict)    (paper.bibtex      barth2004conflict inproceedings)    (paper.author      barth2004conflict adam.barth)    (paper.author      barth2004conflict john.c.mitchell)    (paper.author      barth2004conflict justin.rosenstein)    (paper.title       barth2004conflict "Conflict and Combination in Privacy Policy Languages")    (paper.publication barth2004conflict wpes)    (paper.url         barth2004conflict "http://portal.acm.org/citation.cfm?id=1029179.1029195")    (paper.year        barth2004conflict "2004")    (paper.description barth2004conflict "The authors enumerate various shortcomings of the Enterprise Privacy Authorization Language (EPAL): sequential semantics, nonclosure under policy combination, and the existence of techniques for circumventing the policy.  The authors then summarize another language, DPAL, that addresses these issues.  Every EPAL policy can be translated into a DPAL policy.")    (paper.topic       barth2004conflict authorizationlogic)    (paper.instance    bauer2003)    (paper.bibtex      bauer2003 phdthesis)    (paper.author      bauer2003 lujo.bauer)    (paper.title       bauer2003 "Access Control for the Web via Proof-Carrying Authorization")    (paper.publisher   bauer2003 princeton)    (paper.url         bauer2003 "http://www.ece.cmu.edu/~lbauer/")    (paper.year        bauer2003 2003)    (paper.rank        bauer2003 3)    (paper.description bauer2003 "Bauer introduces an authorization logic and defines its semantics in a higher-order logic, taking the proof-carrying approach to authorization.  The logic includes says, signs, delegates, goal, after, and speaksfor primitives, each of whose semantics is defined in the higher-order logic.  Implementation and extensions to the logic are also addressed.")    (paper.topic       bauer2003 authorizationlogic)    (paper.instance    baumgartner2003)    (paper.bibtex      baumgartner2003 inproceedings)    (paper.author      baumgartner2003 peterbaumgartner)    (paper.author      baumgartner2003 cesaretinelli)    (paper.title       baumgartner2003 "The Model Evolution Calculus")    (paper.publication baumgartner2003 cade)    (paper.startpage   baumgartner2003 350)    (paper.endpage     baumgartner2003 364)    (paper.url         baumgartner2003 "http://sherry.ifi.unizh.ch/577584.html")    (paper.year        baumgartner2003 2003)    (paper.rank        baumgartner2003 4)    (paper.description baumgartner2003 "
Baumgartner and Tinelli describe a first-order version of the DPLL 
(Davis-Putnam-Logemann-Loveland) SAT solver.  In the case of
propositional logic, ME reduces to DPLL.  It differs in the first-order
case because of additional inference rules and skolemization.  The procedure
works by exaustively trying to build a first-order model.  If the search 
fails, the sentences are unsatisfiable.  But if the sentences are satisfiable,
the procedure may run forever trying to construct one.  (Obviously if there
are only infinite models this technique may have issues.) 
")    (paper.topic       baumgartner2003 themodelevolutioncalculus)    (paper.instance    baumgartner2007)    (paper.bibtex      baumgartner2007 article)    (paper.author      baumgartner2007 peterbaumgartner)    (paper.author      baumgartner2007 alexanderfuchs)    (paper.author      baumgartner2007 hansnivelle)    (paper.author      baumgartner2007 cesaretinelli)    (paper.title       baumgartner2007 "Computing Finite Models by Reduction to Function-Free Clause Logic")    (paper.publication baumgartner2007 appliedlogic)    (paper.url         baumgartner2007 "http://goedel.cs.uiowa.edu/Darwin/")    (paper.year        baumgartner2007 2007)    (paper.description baumgartner2007 "
Paper on FMDarwin for building finite models of clause sets.  Unlike
techniques for finding a model directly and techniques that ground out
sentences and invoke a SAT solver, FMDarwin reduces a set of clauses
to function-free clause logic in a way that preserves satisfiability
for a particular size domain.  Then it uses Darwin, an implementation
of the model evolution calculus, to check the satisfiability of
the function-free clauses, iterating through domain sizes.  
")    (paper.topic       baumgartner2007 modelbuilding)    (paper.instance    baumgartner94)    (paper.author      baumgartner94 peterbaumgartner)    (paper.author      baumgartner94 ulrichfurbach)    (paper.title       baumgartner94 "Model Elimination Without Contrapositives")    (paper.publication baumgartner94 cade)    (paper.volume      baumgartner94 814)    (paper.startpage   baumgartner94 87)    (paper.endpage     baumgartner94 101)    (paper.url         baumgartner94 "http://portal.acm.org/citation.cfm?id=752966")    (paper.year        baumgartner94 1994)    (paper.description baumgartner94 "
Baumgartner and Furbach introduce Restart Model Elimination and a couple of refinements.
RME obviates the need for contrapositives; all the rules are written in the form
A1 | ... | An <= B1 ^ ... ^ Bm, i.e. the only extension steps that can be performed
are on one of the Ai.  The price we pay is that whenever the literal on the top of the 
stack is positive, we put the goal literal onto the top of the stack (forcibly in
strict RME), hence the name Restart ME.  Also, this means that ancestry pruning cannot
be used with RME if completeness is to be preserved.  Soundness and refutational 
completeness results.  Some experimental results and fairly lengthy comparison
to other calculi.
")    (paper.topic       baumgartner94 calculi)    (paper.instance    baumgartner95)    (paper.bibtex      baumgartner95 techreport)    (paper.author      baumgartner95 peterbaumgartner)    (paper.author      baumgartner95 ulrichfurbach)    (paper.author      baumgartner95 friederstolzenburg)    (paper.title       baumgartner95 "Model Elimination, Logic Programming and Computing Answers")    (paper.url         baumgartner95 "http://citeseer.ist.psu.edu/144755.html")    (paper.year        baumgartner95 1995)    (paper.description baumgartner95 "
The authors demonstrate that restart model elimination can be used as a complete
interpreter for positive disjunctive logic programming.  That is, they show how
to adjust RME so that it is complete for (definite) answer extraction.  With proofs.
Also, they introduce a limited form of ancestry pruning.  More experiments.
")    (paper.topic       baumgartner95 calculi)    (paper.instance    bell95)    (paper.bibtex      bell95 article)    (paper.author      bell95 johnbell)    (paper.title       bell95 "Pragmatic Reasoning: A model-based theory")    (paper.publisher   bell95 kluweracademicpublishers)    (paper.publication bell95 appliedlogichowwhatandwhy)    (paper.url         bell95 "http://citeseer.ist.psu.edu/bell92pragmatic.html")    (paper.year        bell95 1995)    (paper.rank        bell95 4)    (paper.description bell95 "
Bell defines pragmatic reasoning as context-dependent reasoning, in
contrast to deduction which is context-free.  He mathematizes
the two model-theoretically and discusses different versions
of pragmatic entailment.  He compares it to mental models, and
looks at different techniques that have been developed for
expressing pragmatic reasoning tasks.
")    (paper.topic       bell95 logicalknowledgerepresentation)    (paper.instance    berezin2002)    (paper.bibtex      berezin2002 phdthesis)    (paper.author      berezin2002 sergeyberezin)    (paper.title       berezin2002 "Model Checking and Theorem Proving: A Unified Framework")    (paper.publisher   berezin2002 cmu)    (paper.url         berezin2002 "http://chicory.stanford.edu/~berezin/thesis/")    (paper.year        berezin2002 2002)    (paper.rank        berezin2002 2)    (paper.description berezin2002 "
This thesis builds a framework for integrating model checking and 
theorem proving, focusing on formal verification applications.  
The basic framework proves first-order branching time mu-calculus
properties of Kripke models, but the inference rules can be easily
changed to facilitate the fast development of new proof systems
(called model provers).  Related work is not so thorough. 
")    (paper.topic       berezin2002 modelchecking)    (paper.instance    bertino2003)    (paper.bibtex      bertino2003 article)    (paper.author      bertino2003 elisa.bertino)    (paper.author      bertino2003 barbara.catania)    (paper.author      bertino2003 elena.ferrari)    (paper.author      bertino2003 paolo.perlasca)    (paper.title       bertino2003 "A Logical Framework for Reasoning about Access Control Models")    (paper.publication bertino2003 tiss)    (paper.volume      bertino2003 6)    (paper.number      bertino2003 1)    (paper.startpage   bertino2003 71)    (paper.endpage     bertino2003 127)    (paper.url         bertino2003 "http://portal.acm.org/citation.cfm?id=605437")    (paper.year        bertino2003 2003)    (paper.rank        bertino2003 3)    (paper.description bertino2003 "The paper presents a datalog (technically C-Datalog, an object oriented version of datalog) framework using stable-model semantics for representing various access control models.  It includes ontological commitments for representing certain features of models, gives examples of how standard models can be handled by their framework, and enumerates a series of properties for comparing models with some decidability results for determining whether one of those properties can be decided.")    (paper.topic       bertino2003 authorizationlogic)    (paper.instance    blackburn)    (paper.bibtex      blackburn book)    (paper.author      blackburn patrickblackburn)    (paper.author      blackburn johanvanbenthem)    (paper.author      blackburn frankwolter)    (paper.title       blackburn "Handbook of Modal Logic")    (paper.publisher   blackburn elsevierscience)    (paper.url         blackburn "http://www.elsevier.com/wps/find/bookdescription.cws_home/708884/description#description")    (paper.year        blackburn 2006)    (paper.rank        blackburn 5)    (paper.description blackburn "
A handbook for modal logic, covering basic and advanced theory, variations and extensions, and applications.
")    (paper.instance    bodirsky2004)    (paper.bibtex      bodirsky2004 phdthesis)    (paper.author      bodirsky2004 manuelbodirsky)    (paper.title       bodirsky2004 "Constraint Satisfaction with Infinite Domains")    (paper.url         bodirsky2004 "http://www.informatik.hu-berlin.de/~bodirsky/publications/diss.html")    (paper.year        bodirsky2004 2004)    (paper.description bodirsky2004 "
Bodirsky examines the problem of the homomorphic CSP: given one structure,
is it homomorphic to the target structure?  He for the first time
considers target structures that are countably large; more precisely,
those that are countably large but are omega categorical, i.e. 
all countable models of the first-order theory of that model are isomorphic.
In this work, he produces an algorithm for constructing a tree that
satisfies a given set of constraints, where those constraints require
the existence of nodes that meet certain conditions.  Three possible conditions:
x is an ancestor of y, x and y are equal, and x occurs in a subtree to
the left of the subtree that includes y.  While these constraints force
nodes to exist that satisfy particular relationships, OOCSPs force 
particular nodes to have a particular relationship.
")    (paper.topic       bodirsky2004 miscellaneous)    (paper.instance    bonacina97)    (paper.bibtex      bonacina97 inproceedings)    (paper.author      bonacina97 mariabonacina)    (paper.title       bonacina97 "Machine-independent evaluation of theorem-proving strategies")    (paper.publication bonacina97 workshopontheoremprovingstrategies)    (paper.startpage   bonacina97 37)    (paper.endpage     bonacina97 39)    (paper.url         bonacina97 "http://citeseer.ist.psu.edu/bonacina97machineindependent.html")    (paper.year        bonacina97 1997)    (paper.rank        bonacina97 3)    (paper.description bonacina97 "
Bonacina's position piece explains the need for 'strategy analysis' of
theorem proving techniques.  'Strategy analysis' focuses on theorem-proving
complexity as in plaisted94, but also incorporates indexing, data-structures,
unification complexity, etc.   Bonacina gives a summary of another paper 
that confronts the problem representing deletion strategies in a search
space.  Cites kowalski69 as handling the case where results are never
deleted.  She also explains how a sizable body of related work 
concentrates on the complexity of a logical formalism without reference
to any automated proof-finding system, e.g. goubault94.  
")    (paper.topic       bonacina97 comparativeanalysis)    (paper.related     bonacina97 kowalski69)    (paper.related     bonacina97 goubault94)    (paper.instance    bonacina98)    (paper.bibtex      bonacina98 misc)    (paper.author      bonacina98 mariabonacina)    (paper.title       bonacina98 "Strategy analysis: from Sequential to parallel strategies")    (paper.startpage   bonacina98 21)    (paper.endpage     bonacina98 23)    (paper.url         bonacina98 "http://citeseer.ist.psu.edu/36838.html")    (paper.year        bonacina98 1998)    (paper.rank        bonacina98 1)    (paper.description bonacina98 "
Bonacina's position paper describes the formalization of the
search space for parallelized theorem proving with contraction
operations.  This paper covers the main ideas, but the meat looks
to be cited in two technical reports.
")    (paper.topic       bonacina98 comparativeanalysis)    (paper.instance    borger)    (paper.bibtex      borger book)    (paper.author      borger egonborger)    (paper.author      borger erichgradel)    (paper.author      borger yurigurevich)    (paper.title       borger "The Classical Decision Problem")    (paper.publisher   borger springerverlag)    (paper.url         borger "http://books.google.com/books?id=3po2Tv_UVcMC&dq=&pg=PP1&ots=FMOqyLGt4N&sig=7pB4XtFUSbGbiUuF4XlKGattRts&prev=http://www.google.com/search%3Fclient%3Dsafari%26rls%3Den%26q%3Dthe%2Bclassical%2Bdecision%2Bproblem%26ie%3DUTF-8%26oe%3DUTF-8&sa=X&oi=print&ct=title#PPP1,M1")    (paper.year        borger 1997)    (paper.description borger "
The book detailing decidability results for entailment in various prefix
classes of first-order logic, along with complexity results for the 
decidable classes.
")    (paper.instance    borning92)    (paper.bibtex      borning92 article)    (paper.author      borning92 aborning)    (paper.author      borning92 bnfreeman-benson)    (paper.author      borning92 mwilson)    (paper.title       borning92 "Constraint hierarchies")    (paper.publication borning92 lisp)    (paper.volume      borning92 5)    (paper.startpage   borning92 223)    (paper.endpage     borning92 270)    (paper.url         borning92 "http://citeseer.ist.psu.edu/borning92constraint.html")    (paper.year        borning92 1992)    (paper.rank        borning92 1)    (paper.description borning92 "
Constraint hierarchies, aka Hierarchical Constraint Satisfaction Problems,
impose a precedence hierarchy on constraints.  Only the highest 
precedence constraints must be satisfied; the others constraints
form an ordered set of preferences on the solutions.
")    (paper.topic       borning92 objectorientedconstraintsatisfaction)    (paper.instance    borrett2001)    (paper.author      borrett2001 jamesborrett)    (paper.author      borrett2001 edwardtsang)    (paper.title       borrett2001 "A Context for Constraint Satisfaction Problem Formulation Selection")    (paper.publication borrett2001 constraints)    (paper.volume      borrett2001 6)    (paper.startpage   borrett2001 299)    (paper.endpage     borrett2001 327)    (paper.url         borrett2001 "http://citeseer.ist.psu.edu/borret99context.html")    (paper.year        borrett2001 2001)    (paper.rank        borrett2001 3)    (paper.description borrett2001 "
Borrett and Tsang construct a framework for searching through various constraint satisfaction problem formulations and selecting one.  They only consider
formulations of the form <V,D,C>, i.e. typical CSP formulations.  They break the problem into 4 parts: generating an initial formulation, constructing operators to change that formulation, constructing heuristics for choosing which operator to apply, and constructing an evaluation function to that determines the cost of a given formulation.  They go on to demonstrate a particular type of operator: the introduction of redundant constraints and show how searching through CSP formulations with this type of operator works in their framework.
")    (paper.topic       borrett2001 reformulation)    (paper.instance    bowen91)    (paper.bibtex      bowen91 article)    (paper.author      bowen91 jbowen)    (paper.author      bowen91 dbahler)    (paper.title       bowen91 "Conditional Existence of Variables in Generalized Constraint Networks
")    (paper.publication bowen91 aaai)    (paper.url         bowen91 "http://www.csc.ncsu.edu/faculty/bahler/aaai91/aaai91.pdf")    (paper.year        bowen91 1991)    (paper.description bowen91 "
Bowen and Bahler employ Free Logic to construct a constraint network
where not all variables must be assigned values.  A constraint network
is defined as a set of logical sentences with a DCA; 
a solution is an interpretation
of the vocabulary in a model so that the sentences are satisfied.  
Free logic differs from FOL in that not every element in the vocabulary
needs to be mapped into the model.
")    (paper.topic       bowen91 miscellaneous)    (paper.instance    bowers2007)    (paper.bibtex      bowers2007 inproceedings)    (paper.author      bowers2007 kevin.d.bowers)    (paper.author      bowers2007 lujo.bauer)    (paper.author      bowers2007 deepak.garg)    (paper.author      bowers2007 frank.pfenning)    (paper.author      bowers2007 michael.k.reiter)    (paper.title       bowers2007 "Consumable Credentials in Logic-Based Access-Control Systems")    (paper.publication bowers2007 ndss)    (paper.startpage   bowers2007 143)    (paper.endpage     bowers2007 157)    (paper.url         bowers2007 "http://www.ece.cmu.edu/~lbauer/")    (paper.year        bowers2007 2007)    (paper.rank        bowers2007 4)    (paper.description bowers2007 "Well-written paper with good related work on dealing with consumable resources in a distributed system that uses logic to reason about access-control.  In this sytem, access to a resource is granted by the requestor producing a proof that access should be granted and then the guardian of the resource checks the proof.  The problem addressed here is how one should model and enforce the consumption of resources in this scheme, such as money.  The approach introduced here uses linear logic to model the consumption of resources so that the proofs reflect the consumption of resources and a third party (the ratifier) for enforcing the consumption of resources.")    (paper.topic       bowers2007 authorizationlogic)    (paper.instance    bry2007)    (paper.bibtex      bry2007 article)    (paper.author      bry2007 francoisbry)    (paper.author      bry2007 norberteisinger)    (paper.author      bry2007 thomaseiter)    (paper.author      bry2007 timfurche)    (paper.author      bry2007 georggottlob)    (paper.author      bry2007 clemensley)    (paper.author      bry2007 benediktlinse)    (paper.author      bry2007 reinhardpichler)    (paper.author      bry2007 fangwei)    (paper.title       bry2007 "Foundations of Rule-Based Query Answering")    (paper.publication bry2007 lncs)    (paper.volume      bry2007 4636)    (paper.url         bry2007 "http://www.pms.ifi.lmu.de/publikationen/index.html#PMS-FB-2007-7")    (paper.year        bry2007 2007)    (paper.description bry2007 "
The mathematical foundations of logical query languages.
")    (paper.topic       bry2007 logicalknowledgerepresentation)    (paper.instance    bundy73)    (paper.bibtex      bundy73 inproceedings)    (paper.author      bundy73 alanbundy)    (paper.title       bundy73 "Doing Arithmetic With Diagrams")    (paper.publication bundy73 ijcai)    (paper.year        bundy73 1973)    (paper.rank        bundy73 2)    (paper.description bundy73 "
Bundy describes SUMS (System which Understands Mathematical
Symbols), a theorem prover for theorems over natural numbers.
The SUMS proof process represents the natural numbers in
a diagram, and by manipulating the diagram, determines the
truth of a conjecture.  Bundy makes an interesting point at the 
end of the paper: mathematicians do not usually manipulate
logic to prove theorems.  Rather, they convince themselves
of the correctness of a conjecture through diagrams or other
semantic insights and then use logic as a language for
communicating to others the proof of the theorem.  SUMS
is an attempt at building a machine that simply 
convinces itself of the truth of a conjecture.
")    (paper.topic       bundy73 graphicalreasoningtechniques)    (paper.instance    bundy99)    (paper.bibtex      bundy99 misc)    (paper.author      bundy99 alanbundy)    (paper.title       bundy99 "A Survey of Automated Deduction")    (paper.url         bundy99 "http://citeseer.ist.psu.edu/bundy99survey.html")    (paper.year        bundy99 1999)    (paper.rank        bundy99 2)    (paper.description bundy99 "
Bundy surveys research in automated deduction.  He focuses on resolution,
term rewriting, built-in unification, higher-order logics and type-theory,
induction, interactive theorem-proving, meta-reasoning, common sense
reasoning, and logic programming.
")    (paper.topic       bundy99 theoremproving)    (paper.instance    burckert90)    (paper.bibtex      burckert90 inproceedings)    (paper.author      burckert90 hans-jurgenburckert)    (paper.title       burckert90 "A resolution principle for clauses with constraints")    (paper.publication burckert90 cade)    (paper.startpage   burckert90 178)    (paper.endpage     burckert90 192)    (paper.year        burckert90 1990)    (paper.description burckert90 "
Paper on constraint resolution.
")    (paper.topic       burckert90 calculi)    (paper.instance    bylander94)    (paper.title       bylander94 "The Computational Complexity of Propositional STRIPS Planning")    (paper.publication bylander94 artificialintelligence)    (paper.volume      bylander94 69)    (paper.number      bylander94 1)    (paper.number      bylander94 2)    (paper.startpage   bylander94 165)    (paper.endpage     bylander94 204)    (paper.url         bylander94 "http://citeseer.ist.psu.edu/bylander94computational.html")    (paper.year        bylander94 1994)    (paper.description bylander94 "
Bylander discusses complexity results for propositional STRIPS; he also mentions that a class of first-order STRIPS can be reduced in polynomial time to propositional STRIPS, making these results widely applicable.  PLANSAT (decision problem for determining whether an instance of prop STRIPS planning is satisfiable) is PSPACE-complete.  PLANSAT[2+,2] (PLANSAT where all operators have at least 2 positive preconditions and 2 postconditions) is also PSPACE-complete.  Results are shown for a variety of restrictions, concluding that without severe restrictions, PLANSAT is NP-complete or PSPACE-complete.
These results carry over to PLANMIN (the decision problem of determining whether an instance has a solution of k or fewer operators.  The new results here show a variety of PLANMIN are NP-complete, and a couple, very restricted versions are polynomial.  He also shows results for Propositional Strips with formulas (Extended Propositional STRIPS).  EPLANSAT, EPLANSAT[0,1+] restricted to define Horn clauses are PSPACE-complete.  More results are shown for EPLANSAT and EPLANSATMIN.  See paper for details.
")    (paper.topic       bylander94 historical)    (paper.instance    byrne2000)    (paper.bibtex      byrne2000 misc)    (paper.author      byrne2000 ruthbyrne)    (paper.author      byrne2000 lisagilroy)    (paper.title       byrne2000 "Mental Models Website")    (paper.url         byrne2000 "http://www.tcd.ie/Psychology/Ruth_Byrne/mental_models/index.html")    (paper.year        byrne2000 2000)    (paper.description byrne2000 "
Mental Models website--the Psychology version of model-based reasoning.
")    (paper.topic       byrne2000 model-basedreasoning)    (paper.instance    cadoli2000)    (paper.bibtex      cadoli2000 article)    (paper.author      cadoli2000 marcocadoli)    (paper.author      cadoli2000 francescomdonini)    (paper.author      cadoli2000 paololiberatore)    (paper.author      cadoli2000 marcoschaerf)    (paper.title       cadoli2000 "Preprocessing of Intractable Problems")    (paper.publication cadoli2000 informationandcomputation)    (paper.volume      cadoli2000 176)    (paper.number      cadoli2000 2)    (paper.startpage   cadoli2000 89)    (paper.endpage     cadoli2000 120)    (paper.url         cadoli2000 "http://citeseer.ist.psu.edu/cadoli00preprocessing.html")    (paper.year        cadoli2000 2000)    (paper.rank        cadoli2000 2)    (paper.description cadoli2000 "
This paper describes complexity classes for algorithms after they
have been preprocessed, or compiled.  The problems targeted have two
parts, one that is fixed, and one that changes frequently.  For
example, determining whether Delta entails a sentence phi has a
fixed part (Delta) and a changing part (phi).  If we could compile
Delta into a more vivid representation, computing entailment might
be easier.  This paper formalizes that idea, gives a complexity class
hierarchy, and a method for reductions.  Cool ideas, but very
theoretical (and only with propositional KB examples).
")    (paper.topic       cadoli2000 knowledgebasecompilation)    (paper.instance    cadoli2000b)    (paper.bibtex      cadoli2000b misc)    (paper.author      cadoli2000b marcocadoli)    (paper.author      cadoli2000b francescodonini)    (paper.author      cadoli2000b paololiberatore)    (paper.author      cadoli2000b marcoschaerf)    (paper.title       cadoli2000b "Space Efficiency of Propositional Knowledge Representation Formalisms")    (paper.publication cadoli2000b airesearch)    (paper.volume      cadoli2000b 13)    (paper.startpage   cadoli2000b 1)    (paper.endpage     cadoli2000b 31)    (paper.url         cadoli2000b "http://citeseer.ist.psu.edu/cadoli00space.html")    (paper.year        cadoli2000b 2000)    (paper.rank        cadoli2000b 5)    (paper.description cadoli2000b "
The authors leverage previous work on compilation complexity classes to compare
various propositional knowledge formalisms.  They introduce two axes for comparing
such formalisms under translation: theorem-preservation and model-preservation.
That is, given a set of sentences in one formalism, translate those sentences
into another formalism so that (1) the theorems are preserved across the translation
after a translation of their own or (2) the models are preserved across the
translation after a translation of their own.  The translation of premise sets
is assumed to be polynomial in size; the requirement on the translation of
theorems/models is that the representation of the translation process itself
must be polynomial in size.  

The authors then introduce the notion of 
model-C and thm-C classes.  A formalism belongs to the model-C class iff 
model checking in that formalism is in the compilability class C, where the KB is 
the fixed part and the model is the varying part.  A formalism belongs to
the thm-C class iff inference in that formalism is in the compilability class C,
where the KB is the fixed part and the query is the varying part.

Next the authors prove that two formalisms in the same model-C/thm-C class then
there must be a poly-size reduction between the two formalisms that 
preserves models/theorems.  They also show that if two problems are in different
classes there is no polynomial size reduction satisfying models/theorems.

Finally, the propositional formalisms stable model semantics, circumscription, 
generalized closed world, skeptical default logic, credulous default logic, 
WIDTIO belief revision, and skeptical belief revision are analyzed in this 
framework, giving fairly complete coverage of inference/model space complexity.
")    (paper.topic       cadoli2000b knowledgebasecompilation)    (paper.instance    cadoli2001)    (paper.author      cadoli2001 marcocadoli)    (paper.author      cadoli2001 andreaschaerf)    (paper.title       cadoli2001 "Compiling Problem Specifications into SAT")    (paper.publication cadoli2001 lncs)    (paper.volume      cadoli2001 2028)    (paper.url         cadoli2001 "http://citeseer.ist.psu.edu/cadoli01compiling.html")    (paper.rank        cadoli2001 3)    (paper.description cadoli2001 "
Cadoli and Schaerf describe a language, NP-Spec, for specifying problems
in NP, and a technique for translating that language into SAT.  They
mention a previous translation into Prolog.  With SAT, results were
far better than with Prolog; that is, they could solve what they called
medium-sized problems instead of just small problems.  NP-Spec is based
on Prolog without negation (except on some predefined predicates) with
a fixed database. It includes a mix of metalevel constraints and object-level
constraints.
")    (paper.topic       cadoli2001 knowledgebasecompilation)    (paper.instance    cadoli2002)    (paper.author      cadoli2002 marcocadoli)    (paper.author      cadoli2002 tonimancini)    (paper.title       cadoli2002 "Knowledge compilation = Query rewriting + View synthesis")    (paper.publication cadoli2002 pods)    (paper.startpage   cadoli2002 199)    (paper.endpage     cadoli2002 208)    (paper.url         cadoli2002 "http://citeseer.ist.psu.edu/641562.html")    (paper.rank        cadoli2002 3)    (paper.description cadoli2002 "
Cadoli describes a class of propositional knowledge compilation  where
the problem is transformed into a database and a second-order
query over that database.  The database is a straight-forward representation
of the clausal form of the input.  The authors give syntactic conditions
under which the problem can be compiled into P using this technique.
")    (paper.topic       cadoli2002 knowledgebasecompilation)    (paper.instance    cadoli97)    (paper.bibtex      cadoli97 article)    (paper.author      cadoli97 marcocadoli)    (paper.author      cadoli97 francescomdonini)    (paper.title       cadoli97 "A Survey on Knowledge Compilation")    (paper.publication cadoli97 aicommunications)    (paper.volume      cadoli97 10)    (paper.number      cadoli97 3)    (paper.number      cadoli97 4)    (paper.startpage   cadoli97 137)    (paper.endpage     cadoli97 150)    (paper.url         cadoli97 "http://citeseer.ist.psu.edu/cadoli98survey.html")    (paper.year        cadoli97 1997)    (paper.rank        cadoli97 3)    (paper.description cadoli97 "
Cadoli and Donini review techniques for propositional knowledge base compilation.  
The goal
is to rewrite a KB in a form that will answer queries more quickly.  They survey
exact compilation: prime implicates and implicants, unit-resolution-complete 
methods, and theory prime implicates.  They look at approximate compilation:
anytime versions of exact methods, horn approximations (can result in unsound
inference).  They consider compiling non-monotonic knowledge bases with
circumscription, default logic, and belief revision.  All those techniques aim
to reduce intractable query answering to tractable query answering.  Lastly,
Cadoli and Donini mention compilations of _polynomial-time_ query answering,
compilations into something other than a KB, and compare compilation to 
fixed-parameter tractability.
")    (paper.topic       cadoli97 knowledgebasecompilation)    (paper.instance    caseau94)    (paper.author      caseau94 yvescaseau)    (paper.title       caseau94 "Constraint Satisfaction with an Object-Oriented Knowledge
Representation Language")    (paper.publication caseau94 appliedintelligence)    (paper.volume      caseau94 4)    (paper.number      caseau94 2)    (paper.startpage   caseau94 157)    (paper.endpage     caseau94 184)    (paper.url         caseau94 "http://citeseer.ist.psu.edu/caseau94constraint.html")    (paper.year        caseau94 1994)    (paper.rank        caseau94 3)    (paper.description caseau94 "
Caseau describes how one might solve constraint satisfaction problems
using Laure, an object-oriented language that combines declarative
and procedural knowledge.  In Laure, a Database is used to model
the world; solving a problem amounts to finding objects to fill
goals and satisfy constraints.  Those objects are completions of
the database.  CSPs can be represented by attaching constraints
to objects; a finite number of these objects allows standard 
CSP techniques, e.g. arc consistency, to find solutions.
")    (paper.topic       caseau94 oolanguageswithnativeconstraintsatisfaction)    (paper.instance    caseau96)    (paper.bibtex      caseau96 article)    (paper.author      caseau96 yvescaseau)    (paper.author      caseau96 francoislaburthe)    (paper.title       caseau96 "CLAIRE: a brief overview")    (paper.url         caseau96 "http://citeseer.ist.psu.edu/caseau96claire.html")    (paper.year        caseau96 1996)    (paper.rank        caseau96 2)    (paper.description caseau96 "
CLAIRE is a programming language designed to be C++ compliant that  
can compute using constraints natively.
")    (paper.topic       caseau96 oolanguageswithnativeconstraintsatisfaction)    (paper.instance    changlee)    (paper.bibtex      changlee book)    (paper.author      changlee chin-liangchang)    (paper.author      changlee richardlee)    (paper.title       changlee "Symbolic Logic and Mechanical Theorem Proving")    (paper.publisher   changlee academicpress)    (paper.url         changlee "http://www.amazon.com/exec/obidos/ASIN/0121703509/qid%3D965533387/sr%3D1-1/102-6107129-2481765")    (paper.year        changlee 1973)    (paper.rank        changlee 2)    (paper.description changlee "
A classic text for automated reasoning.  Chang and Lee cover propositional and
first-order logic, Herbrand's theorem, resolution (standard, semantic, lock,
and linear) and equality.  They discuss an alternative to resolution, 
Prawitz's procedure and V-resolution.  A chapter on program analysis
leads to query answering and program synthesis in the final chapter.
")    (paper.instance    chen2000)    (paper.author      chen2000 hubiechen)    (paper.title       chen2000 "A Theory of Average-Case Compilability in Knowledge Representation")    (paper.url         chen2000 "http://citeseer.ist.psu.edu/590465.html")    (paper.rank        chen2000 3)    (paper.description chen2000 "Chen gives an overview of the Compilability hierarchy given
by Cadoli2000.  Then Chen gives theorems concerning average-case
compilability, i.e. analogs of the Cadoli hierarchy when there is a 
distribution over the space of knowledge representations within a class.
The results are pretty densely presented.  
")    (paper.topic       chen2000 knowledgebasecompilation)    (paper.instance    chirkova2002)    (paper.bibtex      chirkova2002 phdthesis)    (paper.author      chirkova2002 radachirkova)    (paper.title       chirkova2002 "Automated Database Restructuring")    (paper.publisher   chirkova2002 stanforduniversity)    (paper.url         chirkova2002 "")    (paper.year        chirkova2002 2002)    (paper.rank        chirkova2002 4)    (paper.description chirkova2002 "
Chirkova's thesis presents algorithms for computing the set of views
that if materialized would allow queries to be answered optimally.  That is
there is no set of views that if materialized would answer those queries
any more efficiently.  Three results: the problem is decidable, it
has a triply exponential upper bound in the queries, and it has an
exponential lower bound.  Only conjunctions, i.e. SPJ,
are considered, both for view definitions and the queries.
")    (paper.topic       chirkova2002 databases)    (paper.instance    choi2000)    (paper.bibtex      choi2000 misc)    (paper.author      choi2000 seungyeobchoi)    (paper.title       choi2000 "Semantically Guided Proof Planning")    (paper.url         choi2000 "http://citeseer.ist.psu.edu/464153.html")    (paper.year        choi2000 2000)    (paper.rank        choi2000 3)    (paper.description choi2000 "
This thesis proposal focuses on adding semantic guidance to
automated theorem proving in two ways: 1) by incorporating
the use of models with a clause graph procedure and 2) by
incorporating the use of models with a proof planning
procedure.  This gives a good overview of various theorem
proving techniques and semantic techniques.
")    (paper.topic       choi2000 model-guidedprooftechniques)    (paper.instance    chomicki95)    (paper.author      chomicki95 janchomicki)    (paper.title       chomicki95 "Efficient Checking of Temporal Integrity Constraints Using Bounded History Encoding")    (paper.publication chomicki95 tods)    (paper.volume      chomicki95 20)    (paper.number      chomicki95 2)    (paper.startpage   chomicki95 149)    (paper.endpage     chomicki95 186)    (paper.url         chomicki95 "http://citeseer.ist.psu.edu/chomicki95efficient.html")    (paper.year        chomicki95 1995)    (paper.rank        chomicki95 2)    (paper.description chomicki95 "
Chomicki describes an algorithm for maintaining temporal constraints on a database, which are written in past first order temporal logic.  Instead of storing the entire history of the database, Chomicki describes a way to roll up the history (in a lossy way) into auxiliary relations in the database.  She assumes the set of constraints is fixed, which means a single auxiliary relation can be stored for each sentence in the constraints.  She proves this encoding to be polynomially-bounded in the number of domain values that appear in the database over time.  Chomicki extends this work to include real-time constraints, which refer to a clock.
")    (paper.topic       chomicki95 hypotheticaltemporaldbqueries)    (paper.instance    christian93)    (paper.bibtex      christian93 article)    (paper.author      christian93 jimchristian)    (paper.title       christian93 "Flatterms, Discrimination Nets, and Fast Term Rewriting")    (paper.publication christian93 jar)    (paper.volume      christian93 10)    (paper.startpage   christian93 95)    (paper.endpage     christian93 113)    (paper.year        christian93 1993)    (paper.rank        christian93 2)    (paper.description christian93 "
One of the early papers on Discrimination Nets, which is argued as
a reason for representing terms as flat terms.
")    (paper.topic       christian93 indexing)    (paper.instance    claessen2003)    (paper.bibtex      claessen2003 inproceedings)    (paper.author      claessen2003 kclaessen)    (paper.author      claessen2003 nsorensson)    (paper.title       claessen2003 "New Techniues that Improve {MACE}-style Finite Model Finding")    (paper.publication claessen2003 cade-modelcomputation)    (paper.url         claessen2003 "http://citeseer.ist.psu.edu/claessen03new.html")    (paper.year        claessen2003 2003)    (paper.description claessen2003 "
A serieis of techniques are introduced for constructing a finite model
by conversion to SAT, aka the MACE-style model building.  A/the paradox paper.
")    (paper.topic       claessen2003 modelbuilding)    (paper.instance    clarke)    (paper.bibtex      clarke book)    (paper.author      clarke edmundmclarkejr)    (paper.author      clarke ornagrumberg)    (paper.author      clarke doronpeled)    (paper.title       clarke "Model Checking")    (paper.publisher   clarke mitpress)    (paper.url         clarke "http://mitpress.mit.edu/catalog/item/default.asp?ttype=2&tid=3730")    (paper.year        clarke 1999)    (paper.rank        clarke 5)    (paper.description clarke "
An introduction to model checking as performed by the formal methods community.
")    (paper.instance    cohen90)    (paper.author      cohen90 prcohen)    (paper.author      cohen90 hectorjlevesque)    (paper.title       cohen90 "Intention is choice with commitment")    (paper.publication cohen90 artificialintelligence)    (paper.volume      cohen90 42)    (paper.number      cohen90 3)    (paper.year        cohen90 1990)    (paper.rank        cohen90 1)    (paper.description cohen90 "
Cohen and Levesque use modal operators without explicit mention of time to describe an agent's persistent goals.  These goals will be worked upon until 1) they are achieved or 2) they are deemed impossible.  No work was done here on planning to achieve these goals. 
")    (paper.topic       cohen90 behavioralgoals)    (paper.instance    comon99)    (paper.bibtex      comon99 article)    (paper.author      comon99 hubertcomon)    (paper.author      comon99 mehmetdincbas)    (paper.author      comon99 jean-pierrejouannaud)    (paper.author      comon99 claudekirchner)    (paper.title       comon99 "A Methodological View of Constraint Solving")    (paper.publication comon99 constraints)    (paper.volume      comon99 4)    (paper.startpage   comon99 337)    (paper.endpage     comon99 361)    (paper.url         comon99 "http://citeseer.ist.psu.edu/13836.html")    (paper.year        comon99 1999)    (paper.description comon99 "
The authors motivate why sets are described using constraints and go on to survey the various techniques that have been used for processing those constraints, i.e. (1) determining whether an element belongs to a set or (2) determining whether one set is included entirely in another set (entailment).  They discuss 3 types of techniques: syntactic, semantic, and hybrid.  Syntactic techniques translate a formula into another formula.  Semantic techniques translate formulas into automata or another such formalism.  Hybrid techniques use both.  For more info on automata, try http://www.grappa.univ-lille3.fr/tata/.
")    (paper.topic       comon99 general)    (paper.instance    cook71)    (paper.bibtex      cook71 article)    (paper.author      cook71 stephencook)    (paper.title       cook71 "The Complexity of Theorem-Proving Procedures")    (paper.publication cook71 stoc)    (paper.startpage   cook71 151)    (paper.endpage     cook71 158)    (paper.url         cook71 "http://citeseer.ist.psu.edu/context/5446/0")    (paper.year        cook71 1971)    (paper.rank        cook71 1)    (paper.description cook71 "
This is Cook's paper which introduces the theory of NP completeness
and polynomial reductions.  He gives complexity bounds on theorem-
proving procedures relative to the minimum number of copies of 
axioms required for propositional unsatisfiability.
")    (paper.topic       cook71 comparativeanalysis)    (paper.instance    craig2004)    (paper.bibtex      craig2004 article)    (paper.author      craig2004 scraig)    (paper.author      craig2004 jgallagher)    (paper.author      craig2004 mleuschel)    (paper.author      craig2004 khenriksen)    (paper.title       craig2004 "Fully Automatic Binding-Time Analysis for {P}rolog")    (paper.publication craig2004 lopstr)    (paper.startpage   craig2004 53)    (paper.endpage     craig2004 68)    (paper.url         craig2004 "http://wotan.liu.edu/docis/dbl/lopstr/index.html")    (paper.year        craig2004 2004)    (paper.description craig2004 "
The authors consider the problem of computing modes, i.e. binding
patterns, for prolog relations, and whether to unroll or inline
such relations.  The first computes a set of disjoint types 
from regular types and then propagates them.  The second 
uses binary clause semantics and convex hull abstraction
to determine which relations will not terminate.  Apparently,
very similar work was done in 2001 by Vanhoof and Bruynooghe
in 2001.
")    (paper.topic       craig2004 reformulation)    (paper.instance    crampton2001)    (paper.bibtex      crampton2001 article)    (paper.author      crampton2001 jason.crampton)    (paper.author      crampton2001 george.loizou)    (paper.author      crampton2001 greg.oshea)    (paper.title       crampton2001 "A Logic of Access Control")    (paper.publication crampton2001 computer)    (paper.volume      crampton2001 44)    (paper.number      crampton2001 1)    (paper.startpage   crampton2001 137)    (paper.endpage     crampton2001 149)    (paper.url         crampton2001 "http://comjnl.oxfordjournals.org/cgi/content/abstract/44/1/54")    (paper.year        crampton2001 2001)    (paper.rank        crampton2001 3)    (paper.description crampton2001 "A logic for modeling access control.  Uses a finite state machine as a model: the state of a computer system is comprised of the rights given to each principals for each object in the system.  An action is either (1) the invocation of a right, (2) the deinvocation of a right, (3) the granting of a new right, or (4) the revocation of a right.  Each transition results in a new state and one of two outputs: (1) accept or (2) reject.  This model is a good one, in my opinion.  The logic chosen for describing this model is S5, a modal logic that is semantically captured (so they say) by Kripke structures where the accessibility relation represents equivalence classes.  Additionally, there are certain ontological commitments made for the vocabulary of the logic.  Finally, this logic is translated into prolog for processing.  Experiments are performed on a Unix and a Winnt system.  While I very much like the structure of the paper, I get the sense that there are some subtle (and at least one not-so-subtle) errors mathematically.  Too much math relative to the intuition makes following difficult.")    (paper.topic       crampton2001 authorizationlogic)    (paper.instance    cyrluk96shostaks)    (paper.bibtex      cyrluk96shostaks inproceedings)    (paper.author      cyrluk96shostaks davidcyrluk)    (paper.author      cyrluk96shostaks patricklincoln)    (paper.author      cyrluk96shostaks natarajanshankar)    (paper.title       cyrluk96shostaks "On Shostak's Decision Procedure for Combinations of Theories")    (paper.publication cyrluk96shostaks cade)    (paper.url         cyrluk96shostaks "http://citeseer.ist.psu.edu/cyrluk96shostaks.html")    (paper.year        cyrluk96shostaks 1996)    (paper.rank        cyrluk96shostaks 4)    (paper.description cyrluk96shostaks "
Cyrluk, Lincoln, and Shankar give a crisp description of the Shostak
procedure and sketch proofs of its properties.  It breaks the algorithm
down into 1) a congruence closure computation and 2) the interpretation
of functions through canonization.  This version of Shostak and all its
counterparts were later shown incomplete.
")    (paper.topic       cyrluk96shostaks nelson-oppenandshostak)    (paper.related     cyrluk96shostaks shostak84)    (paper.related     cyrluk96shostaks rueb2000deconstructing)    (paper.instance    dantsin2001)    (paper.author      dantsin2001 evgenydantsin)    (paper.author      dantsin2001 thomaseiter)    (paper.author      dantsin2001 georggottlob)    (paper.author      dantsin2001 andreivoronkov)    (paper.title       dantsin2001 "Complexity and Expressive Power of Logic Programming")    (paper.publication dantsin2001 acmcomputingsurveys)    (paper.volume      dantsin2001 33)    (paper.number      dantsin2001 3)    (paper.startpage   dantsin2001 374)    (paper.endpage     dantsin2001 425)    (paper.url         dantsin2001 "http://portal.acm.org/citation.cfm?id=502810&dl=ACM&coll=GUIDE")    (paper.year        dantsin2001 2001)    (paper.description dantsin2001 "
Complexity results for logic programming.
")    (paper.topic       dantsin2001 logicprogramming)    (paper.instance    darwiche2002)    (paper.bibtex      darwiche2002 article)    (paper.author      darwiche2002 adnandarwiche)    (paper.author      darwiche2002 pierremarquis)    (paper.title       darwiche2002 "A Knowledge Compilation Map")    (paper.publication darwiche2002 airesearch)    (paper.volume      darwiche2002 17)    (paper.startpage   darwiche2002 229)    (paper.endpage     darwiche2002 264)    (paper.url         darwiche2002 "http://citeseer.ist.psu.edu/497263.html")    (paper.year        darwiche2002 2002)    (paper.description darwiche2002 "
The authors analyze knowledge compilation on two axes: the succinctness of
the target language and the class of queries and transformations that the
language supports in polytime.  They analyze a large number of existing
approaches.
")    (paper.topic       darwiche2002 knowledgebasecompilation)    (paper.instance    davis60)    (paper.bibtex      davis60 article)    (paper.author      davis60 mdavis)    (paper.author      davis60 hputnam)    (paper.title       davis60 "A Machine Program for Theorem Proving")    (paper.publication davis60 jacm)    (paper.volume      davis60 7)    (paper.startpage   davis60 201)    (paper.endpage     davis60 215)    (paper.year        davis60 1960)    (paper.description davis60 "
One of the DPLL papers.
")    (paper.topic       davis60 calculi)    (paper.instance    davis62)    (paper.bibtex      davis62 article)    (paper.author      davis62 mdavis)    (paper.author      davis62 glogemann)    (paper.author      davis62 donaldloveland)    (paper.title       davis62 "A Computing Procedure for Quantification Theory")    (paper.publication davis62 cacm)    (paper.volume      davis62 5)    (paper.startpage   davis62 394)    (paper.endpage     davis62 397)    (paper.year        davis62 1962)    (paper.description davis62 "
One of the DPLL papers.
")    (paper.topic       davis62 calculi)    (paper.instance    davis94)    (paper.bibtex      davis94 techreport)    (paper.author      davis94 ernestdavis)    (paper.title       davis94 "Lucid Representations")    (paper.publisher   davis94 newyorkuniversity)    (paper.url         davis94 "http://citeseer.ist.psu.edu/davis94lucid.html")    (paper.year        davis94 1994)    (paper.rank        davis94 4)    (paper.description davis94 "
Davis writes Lucid Representations in part to argue Levesque's
Making Believers Out of Computers paper.  Davis claims Levesque argues
that the only representations one should allow are complete ones,
in the database sense to ensure reasoning is fast.  Davis argues
that no AI system could get by with only complete information.
Incomplete information is imperative.  Davis attempts to propose
a technique for achieving the benefits of complete information
from starting from incomplete information by first instantiating
to complete the theory, then reasoning quickly, and finally 
ignoring those results which were artificially  introduced by
the process of instantiation.  This is a position piece trying to
refute Levesque's vision of the future and replacing
it with a vision of its own.
")    (paper.topic       davis94 logicalknowledgerepresentation)    (paper.instance    debray93)    (paper.bibtex      debray93 article)    (paper.author      debray93 saumyadebray)    (paper.author      debray93 nai-weilin)    (paper.title       debray93 "Cost Analysis of Logic Programs")    (paper.publication debray93 toplas)    (paper.volume      debray93 15)    (paper.number      debray93 5)    (paper.startpage   debray93 826)    (paper.endpage     debray93 875)    (paper.year        debray93 1993)    (paper.description debray93 "
Debray and Lin outline techniques for computing upper bounds on the cost
of a logic program, taking in account multiple solutions and nondeterminism.
Based on relationship between argument size, moded relations, and typed 
relations.
")    (paper.topic       debray93 logicprogramming)    (paper.instance    dechter92)    (paper.bibtex      dechter92 article)    (paper.author      dechter92 rinadechter)    (paper.author      dechter92 judeapearl)    (paper.title       dechter92 "Structure Identificatioin in Relational Data")    (paper.publication dechter92 artificialintelligence)    (paper.volume      dechter92 58)    (paper.number      dechter92 1-3)    (paper.startpage   dechter92 237)    (paper.endpage     dechter92 270)    (paper.url         dechter92 "http://citeseer.ist.psu.edu/dechter97structure.html")    (paper.year        dechter92 1992)    (paper.rank        dechter92 2)    (paper.description dechter92 "
Dechter and Pearl describe building a propositional Horn representation
of a given set of models.  Identifying whether such a representation 
exists turns out to be polynomial in the size of the models.  Building
such a representation is polynomial in the size of the models and
the number of variables.  For k-Horn theories, a tightest approximation
can also be calculated in polynomial time.  
")    (paper.topic       dechter92 knowledgebasecompilation)    (paper.instance    delval96)    (paper.bibtex      delval96 inproceedings)    (paper.author      delval96 alvarodelval)    (paper.title       delval96 "Approximate Knowledge Compilation: The First Order Case")    (paper.publication delval96 aaai)    (paper.startpage   delval96 498)    (paper.endpage     delval96 503)    (paper.url         delval96 "http://citeseer.ist.psu.edu/delval96approximate.html")    (paper.year        delval96 1996)    (paper.rank        delval96 4)    (paper.description delval96 "
This seems to be the seminal work on Knowledge Compilation for FOL.  
del Val introduces a new algorithm for computing the Least Upper
Bound approximation for a propositional knowledge base, at times
exponentially better than the previously known algorithm.  He then
lifts both algorithms to first order logic under some restrictions.
")    (paper.topic       delval96 knowledgebasecompilation)    (paper.related     delval96 selman91)    (paper.instance    dershowitz82)    (paper.author      dershowitz82 nachumdershowitz)    (paper.title       dershowitz82 "Orderings for Term-rewriting Systems")    (paper.publication dershowitz82 tcs)    (paper.volume      dershowitz82 17)    (paper.startpage   dershowitz82 279)    (paper.endpage     dershowitz82 301)    (paper.url         dershowitz82 "http://citeseer.ist.psu.edu/context/20249/0")    (paper.year        dershowitz82 1982)    (paper.description dershowitz82 "
This paper confronts termination in term-rewriting systems.  
Dershowitz first defines the notion of a non-terminating rewrite system,
i.e. one with an infinite homeomorphic self-embedding derivation.  Then
he defines a simplification ordering as a partial ordering with
the replacement (monotonicity), subterm, and deletion properties.  If there
is a simplification ordering for a term rewriting system such that l > r for
every rewrite rule l -> r then the rewrite system terminates.  Dershowitz
goes on to define a quasi-simplification ordering, which is weaker than
a simplification ordering, making it easier to prove rewrite systems
terminate.  The reason this paper is located in this section is that
the notion of a recursive path ordering is then defined.  RPO and
variants thereof are used in modern theorem provers when ordering
is necessary.  The last section goes through a series of examples
that demonstrate how to prove rewrite systems terminate.
")    (paper.topic       dershowitz82 orderings)    (paper.instance    dershowitz93)    (paper.bibtex      dershowitz93 inbook)    (paper.author      dershowitz93 nachumdershowitz)    (paper.title       dershowitz93 "A Taste of Rewrite Systems")    (paper.booktitle   dershowitz93 "Functional Programming, Concurrency, Simulation and Automated Reasoning")    (paper.startpage   dershowitz93 199)    (paper.endpage     dershowitz93 228)    (paper.url         dershowitz93 "http://citeseer.ist.psu.edu/dershowitz93taste.html")    (paper.year        dershowitz93 1993)    (paper.rank        dershowitz93 2)    (paper.description dershowitz93 "
Dershowitz gives a whirlwind tour of rewrite systems, covering the
basic properties termination (existence of normal forms), 
confluence (the uniqueness of those forms), completion (how to construct 
confluent systems), checking entailment and solving equations via 
basically abduction.  He also discusses special techniques for dealing
with associative and commutative systems and conditional rewriting rules.
Applications include theorem proving and programming
")    (paper.topic       dershowitz93 theoremproving)    (paper.instance    digricoli79)    (paper.bibtex      digricoli79 inproceedings)    (paper.author      digricoli79 vjdigricoli)    (paper.title       digricoli79 "Resolution by Unification and Equality")    (paper.publication digricoli79 workshoponad)    (paper.startpage   digricoli79 43)    (paper.endpage     digricoli79 52)    (paper.year        digricoli79 1979)    (paper.rank        digricoli79 -2)    (paper.description digricoli79 "
Another implementation of resolution that builds in equality.  It was later shown to be incomplete without the functional reflexivity axiom, I believe.
")    (paper.topic       digricoli79 theoremproving)    (paper.instance    doyle91)    (paper.bibtex      doyle91 article)    (paper.author      doyle91 jondoyle)    (paper.author      doyle91 rameshpatil)    (paper.title       doyle91 "Two Theses of Knowledge Representation: Language Restrictions, Taxonomic Classification, and the Utility of Representation Services")    (paper.publication doyle91 artificialintelligence)    (paper.volume      doyle91 48)    (paper.number      doyle91 3)    (paper.startpage   doyle91 261)    (paper.endpage     doyle91 298)    (paper.url         doyle91 "http://citeseer.ist.psu.edu/doyle91two.html")    (paper.year        doyle91 1991)    (paper.rank        doyle91 4)    (paper.description doyle91 "
Doyle and Patil argue against Levesque and Brachman's position that a
general purpose KB system must be able to answer all questions 
in a bounded amount of time.  In particular, they examine KL-ONE
and its variants, enumerating classes of problems that a restricted
language cannot express but that would be natural for use in a KB
system.  They argue that worst-case complexity is the right measure for
just a small fraction of all potential applications of a Knowledge-based
system.  
")    (paper.topic       doyle91 logicalknowledgerepresentation)    (paper.instance    dymetman91)    (paper.bibtex      dymetman91 article)    (paper.author      dymetman91 mdymetman)    (paper.title       dymetman91 "Inherently Reversible Grammars, Logic Programming and Computability")    (paper.url         dymetman91 "http://acl.ldc.upenn.edu/W/W91/W91-0104.pdf")    (paper.year        dymetman91 1991)    (paper.rank        dymetman91 3)    (paper.description dymetman91 "
Dymetman offers a decoupling of the term reversible grammar into (1)
uniformity of implementation for parsers and generators and (2) 
reversibility as an inherent property of a grammar.  He formalizes
the second idea, which includes various notions about the completeness
and termination of answer extraction for logic programming.
")    (paper.topic       dymetman91 naturallanguageprocessing)    (paper.instance    ebbinghaus)    (paper.bibtex      ebbinghaus book)    (paper.author      ebbinghaus heinz-dieterebbinghaus)    (paper.author      ebbinghaus jorgflum)    (paper.title       ebbinghaus "Finite Model Theory")    (paper.publisher   ebbinghaus springerverlag)    (paper.url         ebbinghaus "http://www.amazon.com/Finite-Theory-Springer-Monographs-Mathematics/dp/3540287876")    (paper.year        ebbinghaus 1999)    (paper.rank        ebbinghaus 5)    (paper.description ebbinghaus "
The authors introduce Finite Model Theory, a logic that is identical to first-order
logic but where a model is defined as having a finite universe.  Topics covered
include Ehrenfeucht-Fraisse Method, 01 laws, finite automata, descriptive
complexity theory, fixed-point operators, logic programs, logics for PTIME, 
and logical reductions.
")    (paper.instance    eiter2001)    (paper.bibtex      eiter2001 inproceedings)    (paper.author      eiter2001 thomaseiter)    (paper.author      eiter2001 toshihideibaraki)    (paper.author      eiter2001 kazuhisamakino)    (paper.title       eiter2001 "Disjunctions of Horn Theories and their Cores")    (paper.publication eiter2001 isaac)    (paper.url         eiter2001 "http://citeseer.ist.psu.edu/eiter01disjunctions.html")    (paper.year        eiter2001 2001)    (paper.rank        eiter2001 1)    (paper.description eiter2001 "
This paper studies the problem of determining whether a disjunction of 
Horn theories is Horn and if not computing a Horn core and envelope.
Eiter et. al. investigate both the characteristic model representation
of Horn theories and the CNF representation.  For both representations 
the problem is intractable.
")    (paper.topic       eiter2001 characteristicmodels)    (paper.instance    eiter2004)    (paper.bibtex      eiter2004 inproceedings)    (paper.author      eiter2004 thomaseiter)    (paper.author      eiter2004 thomaslukasiewicz)    (paper.author      eiter2004 romanschindlauer)    (paper.author      eiter2004 hanstompits)    (paper.title       eiter2004 "Combining Answer Set Programming with Description Logics for the Semantic Web")    (paper.publication eiter2004 kr)    (paper.url         eiter2004 "http://citeseer.ist.psu.edu/727609.html")    (paper.year        eiter2004 2004)    (paper.description eiter2004 "
A language that integrates SHIF(D) and SHOIN(D) with answer set programming
")    (paper.topic       eiter2004 semanticweb)    (paper.instance    eiter98)    (paper.bibtex      eiter98 inproceedings)    (paper.author      eiter98 thomaseiter)    (paper.author      eiter98 thoshihideibaraki)    (paper.author      eiter98 kazuhisamakino)    (paper.title       eiter98 "Computing Intersections of Horn Theories for Reasoning with Models")    (paper.publication eiter98 aaai)    (paper.url         eiter98 "http://citeseer.ist.psu.edu/537461.html")    (paper.year        eiter98 1998)    (paper.rank        eiter98 4)    (paper.description eiter98 "
The authors examine complexity issues that arise when intersecting several
propositional horn knowledge bases, which are represented with 
characteristic models.  Finding
the unique minimal model (which is a characteristic model) can be done
in linear time in the number of KBs.  Finding all-models can be solved
with polynomial delay (a polynomial amount of time between outputting
models).  In a sense, that means the procedure is polynomial, but the 
number of outputs could be exponential.  Finding all characteristic
models of the intersection has no polynomial time algorithm (even if
P = NP).  Answering deductive queries can still be accomplished in
polynomial time by looking at each KB independently.  Finally, abduction
is shown to be intractable, which differs from the result of a single
KB (where it is polynomial).
")    (paper.topic       eiter98 characteristicmodels)    (paper.instance    enderton)    (paper.bibtex      enderton book)    (paper.author      enderton herbertenderton)    (paper.title       enderton "A Mathematical Introduction to Logic")    (paper.publisher   enderton academicpress)    (paper.url         enderton "http://www.amazon.com/exec/obidos/tg/detail/-/0122384520/qid=1062605496/sr=1-6/ref=sr_1_6/102-6107129-2481765?v=glance&s=books")    (paper.year        enderton 2000)    (paper.rank        enderton 5)    (paper.description enderton "
The definitive text on introductory mathematical logic.  Enderton covers both 
propositional (sentential),  and first-order logic including compactness, completeness,
and soundness proofs.  The third chapter covers undecidability, Godel's 
incompleteness proof, and Church's and Tarski's theorems.  The last chapter
covers second-order logic. 
")    (paper.instance    etherington89)    (paper.bibtex      etherington89 inproceedings)    (paper.author      etherington89 davidetherington)    (paper.author      etherington89 alexborgida)    (paper.author      etherington89 ronaldjbrachman)    (paper.author      etherington89 henrykautz)    (paper.title       etherington89 "Vivid Knowledge and Tractable Reasoning")    (paper.publication etherington89 ijcai)    (paper.startpage   etherington89 1146)    (paper.endpage     etherington89 1152)    (paper.url         etherington89 "http://citeseer.ist.psu.edu/etherington89vivid.html")    (paper.year        etherington89 1989)    (paper.rank        etherington89 4)    (paper.description etherington89 "
Etherington, et.al. give a preliminary description of representing a KB with a set of atoms.  They try to motivate the work by appealing to the speed of humans' commonsense reasoning facilities as evidence that much such reasoning is done via lookup.   A set of atoms is not very expressive, so the first extension is to allow definite clauses: a(x)=>b(x).  To deal with this they use a closed world assumption.  Second extension tries to deal with disjunction: age(joe,53) | age(joe,55) is replaced by age(joe,x)^in50s(x).  Third extension uses skolems to remove disjunction: p(a) | p(b) becomes p(k). 
")    (paper.topic       etherington89 logicalknowledgerepresentation)    (paper.instance    fagin82)    (paper.bibtex      fagin82 article)    (paper.author      fagin82 ronaldfagin)    (paper.title       fagin82 "Horn Clauses and Database Dependencies")    (paper.publication fagin82 jacm)    (paper.volume      fagin82 29)    (paper.number      fagin82 4)    (paper.startpage   fagin82 952)    (paper.endpage     fagin82 985)    (paper.url         fagin82 "http://citeseer.ist.psu.edu/context/62052/0")    (paper.year        fagin82 1982)    (paper.rank        fagin82 4)    (paper.description fagin82 "
Fagin generalizes dependencies in the database literature and
shows the following are all equivalent for a given set of sentences
S.  1) There is an operator O that maps nonempty families of models
into models such that if sigma is a sentence in S and R_i is a
nonempty family of models, then sigma holds for O(R_i) iff sigma
holds for each R_i.  2) Whenever Sigma is a consistent subset of S
and Sigma* is the set of sentences in S that are logical consequences
of Sigma, there is an Armstrong model--it obeys Sigma* and no other
sentences in S.  3) Whenever Sigma is a subset of S and phi_i is a 
nonempty subset of S then Sigma |= V phi_i iff there is some i for
which Sigma |= phi_i.  For FOL in general, there is no Armstrong relation for 
first-order axiom sets.  Take the empty set of axioms, and assume
there is an Armstrong relation R.  R will either entail or not
entail any non-tautology sigma, which means R is not an Armstrong
relation for the axiom set.  A corollary to this theorem shows
that any axiom set Delta in a Horn-related subset of FOL can be
represented with a single, infinite model.
")    (paper.topic       fagin82 characteristicmodels)    (paper.instance    ferraiolo1995)    (paper.bibtex      ferraiolo1995 inproceedings)    (paper.author      ferraiolo1995 david.f.ferrailo)    (paper.author      ferraiolo1995 janet.a.cugini)    (paper.author      ferraiolo1995 d.richard.kuhn)    (paper.title       ferraiolo1995 "Role-Based Access Control (RBAC): Features and Motivations")    (paper.publication ferraiolo1995 acsac)    (paper.url         ferraiolo1995 "http://csrc.nist.gov/rbac/")    (paper.year        ferraiolo1995 1995)    (paper.rank        ferraiolo1995 4)    (paper.description ferraiolo1995 "The authors illustrate the features and motivations of role-based access control (RBAC), a form of authorization that assigns users to roles and gives roles permissions to perform various operations.  This framework lessens the overhead of authorization management because as users change positions within the company, they need only be assigned different roles, instead of all the permissions that are necessary for performing those roles.  Several good examples in this well-written paper.  What is interesting here is that to perform a given operation, being assigned a role with permission to execute that operation is necessary but not sufficient.  There are also conditions that must hold at the time that operation is to be executed; this gives us both static and dynamic permissions checks to perform.  Moreover, the objects being given permission to execute various operations on are both atomic, e.g. read/write on a file, and entire systems, e.g. one user cannot initiate a purchase order, authorize it, record its arrival, and authorize payment.  These four steps can only occur if at least two people were involved. ")    (paper.topic       ferraiolo1995 authorizationlogic)    (paper.instance    fikes71)    (paper.author      fikes71 refikes)    (paper.author      fikes71 njnilsson)    (paper.title       fikes71 "STRIPS: a new approach to the application of theorem proving to problem solving")    (paper.publication fikes71 artificialintelligence)    (paper.volume      fikes71 2)    (paper.number      fikes71 3-4)    (paper.startpage   fikes71 189)    (paper.endpage     fikes71 208)    (paper.year        fikes71 1971)    (paper.description fikes71 "
The STRIPS paper.  Fikes and Nilsson allow first-order formulas to describe the action preconditions and effects (add/delete lists) but maintain that each operator instanatiation must be ground.  They note that the case of non-ground instantiations needs more study.  Interestingly, they generate successor states in the search tree using a form of residue from a proof that a given world state achieves a given subgoal.  They implement a world state as being a set of changes from the initial state.
")    (paper.topic       fikes71 historical)    (paper.instance    fikes72)    (paper.author      fikes72 richardfikes)    (paper.author      fikes72 peterhart)    (paper.author      fikes72 nilsnilsson)    (paper.title       fikes72 "Learning and Executing Generalized Robot Plans")    (paper.publication fikes72 artificialintelligence)    (paper.volume      fikes72 3)    (paper.number      fikes72 4)    (paper.startpage   fikes72 251)    (paper.endpage     fikes72 288)    (paper.year        fikes72 1972)    (paper.description fikes72 "
Fikes, Hart, and Nillson take a STRIPS planner, 1) describe a concise
representation for plans (triangle tables), 2) develop a method for
generalizing plans to make new primitive actions (MACROPs), 3) describe
an execution engine (PLANEX) that uses these Macrops that does replanning and
handles coincidental goal achievement.  They go on to describe needed future
improvements: 1) creating a set of abstractions for the new primitives actions
to avoid dealing with large numbers of preconditions and 2) discarding
subsumed or otherwise unused primitive operators to avoid an ever-growing
operator set.
")    (paper.topic       fikes72 historical)    (paper.instance    fikes93)    (paper.author      fikes93 refikes)    (paper.author      fikes93 njnilsson)    (paper.title       fikes93 "STRIPS, a retrospective")    (paper.publication fikes93 artificialintelligence)    (paper.volume      fikes93 59)    (paper.number      fikes93 1-2)    (paper.startpage   fikes93 227)    (paper.endpage     fikes93 232)    (paper.year        fikes93 1993)    (paper.description fikes93 "
This short paper puts the STRIPS work in a historical context, examining both the plan generator and execution monitor.  Green's work on deductive plan synthesis was the first real planner, but most researchers didn't explore monitoring execution (they were assuming computational environments).  Fikes and Nilsson used 'kernels' to represent the sentences that must be true at each stage of the plan for the rest of the plan to succeed.  They also used the notion of a 'triangle table' to represent plans so that serendipitous acts and action-failure-but-that's-all-you-can-do-so-just-try-again events would not require replanning.
")    (paper.topic       fikes93 historical)    (paper.instance    fitting2007)    (paper.bibtex      fitting2007 article)    (paper.author      fitting2007 melvinfitting)    (paper.title       fitting2007 "Intensional Logic")    (paper.publication fitting2007 stanfordencyclopediaofphilosophy)    (paper.url         fitting2007 "http://plato.stanford.edu/archives/spr2007/entries/logic-intensional/")    (paper.year        fitting2007 2007)    (paper.description fitting2007 "
The mathematical foundations of logical query languages.
")    (paper.topic       fitting2007 logicalknowledgerepresentation)    (paper.instance    follett80)    (paper.bibtex      follett80 article)    (paper.author      follett80 riafollett)    (paper.title       follett80 "Synthesising Recursive Functions with Side Effects")    (paper.publication follett80 artificialintelligence)    (paper.volume      follett80 13)    (paper.number      follett80 3)    (paper.startpage   follett80 175)    (paper.endpage     follett80 200)    (paper.year        follett80 1980)    (paper.rank        follett80 1)    (paper.description follett80 "
")    (paper.topic       follett80 theoremprovingwithattachments)    (paper.instance    franconi2004)    (paper.bibtex      franconi2004 inproceedings)    (paper.author      franconi2004 enricofranconi)    (paper.author      franconi2004 sergiotessaris)    (paper.title       franconi2004 "Rules and Queries with Ontologies: A Unified Logical Framework")    (paper.publication franconi2004 ppswr)    (paper.url         franconi2004 "http://www.springerlink.com/content/1hnwcggw510elp4y/")    (paper.year        franconi2004 2004)    (paper.description franconi2004 "
A comparison of various techniques for integrating logic programming with 
description logics.
")    (paper.topic       franconi2004 semanticweb)    (paper.instance    gammer2007)    (paper.bibtex      gammer2007 inproceedings)    (paper.author      gammer2007 igorgammer)    (paper.author      gammer2007 eyalamir)    (paper.title       gammer2007 "Solving Satisfiability in Ground Logic with Equality by Efficient Conversion to Propositional Logic")    (paper.publication gammer2007 sara)    (paper.url         gammer2007 "http://reason.cs.uiuc.edu/eyal/paper.html")    (paper.year        gammer2007 2007)    (paper.description gammer2007 "
The authors consider ground first-order logic with equality and show
how one can employ Craig's Interpolation theorem to reduce the cost
of grounding out the usual axiomatization of equality.
")    (paper.topic       gammer2007 reformulation)    (paper.instance    garg2006)    (paper.bibtex      garg2006 inproceedings)    (paper.author      garg2006 deepak.garg)    (paper.author      garg2006 lujo.bauer)    (paper.author      garg2006 kevin.d.bowers)    (paper.author      garg2006 frank.pfenning)    (paper.author      garg2006 michael.k.reiter)    (paper.title       garg2006 "A Linear Logic of Authorization and Knowledge")    (paper.publisher   garg2006 lncs)    (paper.publication garg2006 esorics)    (paper.volume      garg2006 4189)    (paper.startpage   garg2006 297)    (paper.endpage     garg2006 312)    (paper.url         garg2006 "http://citeseer.ist.psu.edu/garg06linear.html")    (paper.year        garg2006 2006)    (paper.rank        garg2006 3)    (paper.description garg2006 "Authorization logic that allows one to talk about knowledge, intent, and of course authorization.  Combination of modal and linear logic, whose semantics is defined (entirely?) by a sequent calculus.  Allows quantification, but no negation (?).  Quite complex and relies on earlier work.")    (paper.topic       garg2006 authorizationlogic)    (paper.instance    garg2006noninterference)    (paper.bibtex      garg2006noninterference inproceedings)    (paper.author      garg2006noninterference deepak.garg)    (paper.author      garg2006noninterference frank.pfenning)    (paper.title       garg2006noninterference "Non-Interference in Constructive Authorization Logic")    (paper.publisher   garg2006noninterference ieeepress)    (paper.publication garg2006noninterference csfw)    (paper.url         garg2006noninterference "http://citeseer.ist.psu.edu/garg06noninterference.html")    (paper.year        garg2006noninterference 2006)    (paper.rank        garg2006noninterference 3)    (paper.description garg2006noninterference "The authors present a sequent-style proof system for authorization.  Includes says, affirms, and true.  Also includes quantification, but no negation (at least it appears there is no negation.)  Additionally, the authors prove some noninterference properties: statements that give conditions under which certain propositions are independent of other propositions, leveraging the semantics of the built-ins.  No model-theoretic semantics.")    (paper.topic       garg2006noninterference authorizationlogic)    (paper.related     garg2006noninterference garg2006)    (paper.instance    geddis95)    (paper.bibtex      geddis95 phdthesis)    (paper.author      geddis95 dongeddis)    (paper.title       geddis95 "Caching and Non-Horn Inference in Model Elimination Theorem Provers")    (paper.publisher   geddis95 stanforduniversity)    (paper.url         geddis95 "http://library.stanford.edu/depts/mathcs/mathcscoll/techreports.html")    (paper.year        geddis95 1995)    (paper.rank        geddis95 3)    (paper.description geddis95 "
Geddis investigates Nonhorn caching for model elimination.  Astrachan and
Stickel did the seminal work on caching for the Horn case.  Nonhorn
caching is made difficult by the reduction operation, i.e. proofs of
subgoals are context dependent.  Previous work stored the context and
the proven subgoal.  Geddis shows that if a literal has a completion in
one context, it has a completion in every context.  Thus, if a subgoal
cannot be completed, it can be added to a failure cache.  A completion is
not the same as a proof, however, and there are no results for success
caching.  If a depth-limited search-strategy is used, incompleteness can
result; Geddis found no solution for this problem.  Also discussed is an
extension to David Smith's work: postponement caching.  It basically avoids
infinite recursions if possible by 'enslaving' a subgoal to an ancestor
if the two unify.  It is complete for Horn and incomplete for nonHorn.
")    (paper.topic       geddis95 theoremprovingwithattachments)    (paper.instance    gelernter63)    (paper.bibtex      gelernter63 article)    (paper.author      gelernter63 hgelernter)    (paper.title       gelernter63 "Realization of a Geometry-Theorem Proving Machine")    (paper.publisher   gelernter63 mitpress)    (paper.publication gelernter63 computersandthought)    (paper.startpage   gelernter63 134)    (paper.endpage     gelernter63 152)    (paper.year        gelernter63 1963)    (paper.rank        gelernter63 1)    (paper.description gelernter63 "
Gelernter describes the Geometry Machine, an ad hoc theorem prover
for Euclidian geometry.  It uses a diagram as a heuristic to guide
the theorem prover's search, eliminating subgoals when not 
satisfied by the diagram.  Sometimes that diagram prunes too much,
in which case multiple diagrams need to be generated to achieve
completeness.  The system is also unique in the fact that it does
not give the theorem prover a complete axiomitization of geometry,
but rather allows it to add axioms that are 'obvious' from the 
diagram, much as a human might do.
")    (paper.topic       gelernter63 graphicalreasoningtechniques)    (paper.instance    gelfond88)    (paper.bibtex      gelfond88 inproceedings)    (paper.author      gelfond88 michaelgelfond)    (paper.author      gelfond88 vladimirlifschitz)    (paper.title       gelfond88 "The Stable Model Semantics for Logic Programming")    (paper.publication gelfond88 iclp)    (paper.startpage   gelfond88 1070)    (paper.endpage     gelfond88 1080)    (paper.url         gelfond88 "http://citeseer.ist.psu.edu/gelfond88stable.html")    (paper.year        gelfond88 1988)    (paper.description gelfond88 "
Stable model semantics for logic programming.
")    (paper.topic       gelfond88 logicprogramming)    (paper.instance    genesereth87)    (paper.bibtex      genesereth87 book)    (paper.author      genesereth87 michaelrgenesereth)    (paper.author      genesereth87 nilsnilsson)    (paper.title       genesereth87 "Logical Foundations of Artificial Intelligence")    (paper.publisher   genesereth87 morgankaufmann)    (paper.url         genesereth87 "http://www.amazon.com/Foundations-Artificial-Intelligence-Michael-Genesereth/dp/0934613311")    (paper.year        genesereth87 1987)    (paper.rank        genesereth87 5)    (paper.description genesereth87 "
Genesereth and Nilsson construct the foundations of AI using logic.  Covers logic, resolution and various strategies, nonmonotonic reasoning, induction, uncertainty, belief,
metaknowledge and metareasoning, a changing environment, and agent architectures.
")    (paper.instance    giacomo2000)    (paper.author      giacomo2000 gdegiacomo)    (paper.author      giacomo2000 yveslesperance)    (paper.author      giacomo2000 hectorjlevesque)    (paper.title       giacomo2000 "ConGolog, a concurrent prrogramming language based on the situation calculus")    (paper.publication giacomo2000 artificialintelligence)    (paper.volume      giacomo2000 121)    (paper.startpage   giacomo2000 109)    (paper.endpage     giacomo2000 169)    (paper.url         giacomo2000 "http://www.cs.yorku.ca/~lesperan/publications.html")    (paper.year        giacomo2000 2000)    (paper.description giacomo2000 "
ConGolog extends Golog (both implementations being in Prolog) to include concurrent actions (conceptualized as interleaving actions of different processes that can block, in the OS sense).  The constructs introduced here include synchronized conditionals (test-and-set), synchronized loops, concurrent execution, concurrency with different priorities (the lower priority process can only execute if the higher priority one is blocked or finished), concurrent iteration, and interrupts.  Nondeterminstic iteration can be useful when an unspecified number of programs need to be run concurrently, e.g. an FTP server.  Some more work is required to handle procedures.  The semantics given in the original Golog paper were evaluation semantics.  Here the authors switch to transition semantics and require all the macros of Golog to become embedded in the language.
Exogenous events are handled by allowing the user to specify which primitive actions may occurs outside the control of the program.  A predefined program for choosing a possible exogenous action, checking its preconditions, and executing it if possible is run concurrently with the user-defined program. To handle truly overlapping actions such as filling-bath-tub and singing-do-re-mi, the authors suggest thinking of filling-bath-tub as not an action, but rather as a state, which requires the start-filling action to enter the state and the stop-filling action to exit the state.  This way, interleaving filling-bath-tub and singing-do-re-mi can happen at the same time.
")    (paper.topic       giacomo2000 logicprogramming)    (paper.instance    giunchiglia92)    (paper.bibtex      giunchiglia92 article)    (paper.author      giunchiglia92 faustogiunchiglia)    (paper.author      giunchiglia92 tobywalsh)    (paper.title       giunchiglia92 "A theory of abstraction")    (paper.publication giunchiglia92 artificialintelligence)    (paper.volume      giunchiglia92 57)    (paper.startpage   giunchiglia92 323)    (paper.endpage     giunchiglia92 389)    (paper.url         giunchiglia92 "http://citeseer.ist.psu.edu/27696.html")    (paper.year        giunchiglia92 1992)    (paper.rank        giunchiglia92 4)    (paper.description giunchiglia92 "
Giunchiglia and Walsh describe a theory of abstraction in very general terms,
which is intended to be independent of proof system.  Most generally,
an abstraction is a mapping between a pair of formal systems, where a
formal system consists of a language and a subset of that language defining
the axioms.  Axiomatic formal systems include an extra element: the
proof system.  Abstractions are categorized by whether they increase, decrease, or
leave constant the set of consequences of the theory: TI, TD, TC.  The authors
claim the TI abstractions is the true meaning of abstraction.  TD abstractions
can be used to prove entailment, i.e. if TD(Delta) |= phi then Delta |= phi.
TI abstractions can be used to prove negative entailment, i.e. if
TI(Delta) |/= phi then Delta |/= phi.  Refutation systems are concerned
not with provability but with inconsistency.  Abstractions in this setting
are characterized as NTI, NTD, and NTC.  If the formal system includes
negation and the abstraction f is negation preserving, i.e. f(-phi) = -f(phi)
then NT* and T* are equivalent.  Further classifications are made of abstractions,
depending on how independently an abstraction translates axioms, inference rules, etc.
A large section explaining how various peoples' work fits into this framework follows.
Then sections follow on inconsistent abstract spaces, operations performed
on abstractions, ordering abstractions, hierarchies of abstraction spaces, and building
abstractions.
")    (paper.topic       giunchiglia92 abstraction)    (paper.instance    giunchiglia96reasoning)    (paper.bibtex      giunchiglia96reasoning inproceedings)    (paper.author      giunchiglia96reasoning faustogiunchiglia)    (paper.author      giunchiglia96reasoning paolopecchiari)    (paper.author      giunchiglia96reasoning carolyntalcott)    (paper.title       giunchiglia96reasoning "Reasoning Theories - Towards an Architecture for Open Mechanized Reasoning Systems")    (paper.publication giunchiglia96reasoning frocos)    (paper.startpage   giunchiglia96reasoning 157)    (paper.endpage     giunchiglia96reasoning 174)    (paper.url         giunchiglia96reasoning "http://citeseer.ist.psu.edu/354680.html")    (paper.year        giunchiglia96reasoning 1996)    (paper.rank        giunchiglia96reasoning 3)    (paper.description giunchiglia96reasoning "Giunchiglia et al. describe a formalization of logical reasoners.  Such
reasoners (quoting) might be based on different logics; have different domain models;
use different vocabularies and data structures; use different reasoning
strategies; and have different interaction capabilities.  The authors
put forth a general architecture called Open Mechanized Reasoning Systems
(OMRS) for integrating reasoners described by what they call a
Reasoning Theory.  They use NQTHM as an example to illustrate the construction
of a Reasoning Theory.
")    (paper.topic       giunchiglia96reasoning architectures)    (paper.instance    giunchiglia99applying)    (paper.bibtex      giunchiglia99applying inproceedings)    (paper.author      giunchiglia99applying enricogiunchiglia)    (paper.author      giunchiglia99applying robertosebastiani)    (paper.title       giunchiglia99applying "Applying the {D}avis-{P}utnam Procedure to Non-clausal Formulas")    (paper.publication giunchiglia99applying aiia)    (paper.startpage   giunchiglia99applying 84)    (paper.endpage     giunchiglia99applying 94)    (paper.url         giunchiglia99applying "http://citeseer.ist.psu.edu/giunchiglia99applying.html")    (paper.year        giunchiglia99applying 1999)    (paper.description giunchiglia99applying "
Continuation of their earlier work on building a SAT solver that handles
non-clausal form by translating the problem into CNF in such a way that 
the search space of the non-CNF problem is preserved in some way.
")    (paper.topic       giunchiglia99applying satsolving)    (paper.instance    giunchiglia99planning)    (paper.bibtex      giunchiglia99planning inproceedings)    (paper.author      giunchiglia99planning faustogiunchiglia)    (paper.author      giunchiglia99planning paolotraverso)    (paper.title       giunchiglia99planning "Planning as Model Checking")    (paper.url         giunchiglia99planning "http://citeseer.ist.psu.edu/giunchiglia99planning.html")    (paper.year        giunchiglia99planning 1999)    (paper.rank        giunchiglia99planning 1)    (paper.description giunchiglia99planning "
This paper gives an introduction to Planning as Model Checking for
both deterministic and nondeterministic domains.  It explains
the model checking problem, planning as model checking, 
planning in nondeterministic domains, an implementation, and
related work.  They look at problems formalized in Computation
Tree Logic (CTL).
")    (paper.topic       giunchiglia99planning modelchecking)    (paper.instance    gramlich2005)    (paper.bibtex      gramlich2005 article)    (paper.author      gramlich2005 bernhardgramlich)    (paper.title       gramlich2005 "Strategic issues, Problems and Challenges in Inductive Theorem Proving")    (paper.url         gramlich2005 "http://www.logic.at/staff/gramlich/ papers/strategies04-entcs05.pdf.gz")    (paper.year        gramlich2005 2005)    (paper.rank        gramlich2005 3)    (paper.description gramlich2005 "
Gramlich outlines the inductive theorem proving, how it differs from
first-order theorem proving, and some of the obstacles that must be
overcome to make automated inductive theorem proving a reality.
")    (paper.topic       gramlich2005 herbrandlogic)    (paper.instance    green69)    (paper.bibtex      green69 inbook)    (paper.author      green69 cgreen)    (paper.title       green69 "Theorem-proving by resolution as a basis for question-answering systems.")    (paper.booktitle   green69 "Machine Intelligence 4")    (paper.startpage   green69 183)    (paper.endpage     green69 205)    (paper.year        green69 1969)    (paper.description green69 "
Green describes using a theorem prover, QA3, to build a question-answering system.  Both statements and questions are written in FOL.  Questions can be True/False or Constructive (i.e. ask for an x such that ...).  Constructive answers are produced by adding the rule question-of-user(x) => Answer(x).  Green goes on to describe what we now call deductive plan synthesis, i.e. answer extraction of situation calculus axioms.  QA3 uses subsumption, duplicate literal elimination, unit preference, a variant on set of support, and no equality (yet).
")    (paper.topic       green69 fundamentals)    (paper.instance    greiner91)    (paper.bibtex      greiner91 article)    (paper.author      greiner91 russellgreiner)    (paper.author      greiner91 charleselkan)    (paper.title       greiner91 "Measuring and Improving the Effectiveness of Representations")    (paper.publication greiner91 ijcai)    (paper.startpage   greiner91 518)    (paper.endpage     greiner91 524)    (paper.url         greiner91 "http://citeseer.ist.psu.edu/114212.html")    (paper.year        greiner91 1991)    (paper.rank        greiner91 4)    (paper.description greiner91 "
Greiner and Elkan give axes upon which a representation, i.e. black box
for answering questions, can be evaluated: accuracy (how often the answer
given is correct), categoricity (how often the answer is I don't know), and
efficiency. A representation is thus evaluated wrt a query stream.  This 
external form of evaluation captures what any system using a representation
system actually cares about -- how well that representation works.  The
internal representation might also be evaluated by, for example, its
conciseness or elegance, but that is not covered here.  They also formalize
all bounded, linearly separable utility measures, i.e. ways of combining
evaluations wrt the 3 axes above.  Finally the authors confront statistical
approaches for performing evaluation, comparing representations, and improving
existing representations.   Well written.
")    (paper.topic       greiner91 logicalknowledgerepresentation)    (paper.instance    greiner98)    (paper.bibtex      greiner98 article)    (paper.author      greiner98 russellgreiner)    (paper.author      greiner98 christiandarken)    (paper.author      greiner98 nsantoso)    (paper.title       greiner98 "Efficient Reasoning")    (paper.publication greiner98 acmcomputingsurveys)    (paper.volume      greiner98 33)    (paper.number      greiner98 1)    (paper.startpage   greiner98 1)    (paper.endpage     greiner98 30)    (paper.url         greiner98 "http://citeseer.ist.psu.edu/greiner98efficient.html")    (paper.year        greiner98 1998)    (paper.rank        greiner98 1)    (paper.description greiner98 "
Greiner gives a survey of techniques for efficient reasoning: both deductive 
and probabilistic.  He talks about the various techniques available for
dealing with exponential run times: unsound inference, incompleteness, etc.
")    (paper.topic       greiner98 logicalknowledgerepresentation)    (paper.instance    grohe2001)    (paper.bibtex      grohe2001 inproceedings)    (paper.author      grohe2001 martingrohe)    (paper.title       grohe2001 "Generalized Model-Checking Problems for First-Order Logic")    (paper.publication grohe2001 stacs)    (paper.startpage   grohe2001 12)    (paper.endpage     grohe2001 26)    (paper.url         grohe2001 "http://www.dcs.ed.ac.uk/home/grohe/pub.html")    (paper.year        grohe2001 2001)    (paper.rank        grohe2001 4)    (paper.description grohe2001 "
Grohe investigates the parameterized complexity of various model-checking
problems in first-order logic.  In general, the problem is PSPACE-complete
for the combined size of the query and the model.  Under the assumption
of a small query, the parameterized complexity is still AW[*].  However,
some types of formulas and models lend themselves to tractable algorithms:
those with an underlying tree structure.  This paper gives a survey
of various model-checking complexity results for first-order logic.
")    (paper.topic       grohe2001 modelchecking)    (paper.related     grohe2001 grohe2002)    (paper.instance    grohe2002)    (paper.bibtex      grohe2002 article)    (paper.author      grohe2002 martingrohe)    (paper.title       grohe2002 "Parameterized Complexity for the Database Theorist")    (paper.publication grohe2002 sigmod)    (paper.volume      grohe2002 31)    (paper.number      grohe2002 4)    (paper.url         grohe2002 "http://www.dcs.ed.ac.uk/home/grohe/pub.html")    (paper.year        grohe2002 2002)    (paper.rank        grohe2002 1)    (paper.description grohe2002 "
Grohe gives a gentle introduction to Parameterized Complexity Theory for
database theorists.  The theory defines a complexity hierarchy for
problems with nonstandard constraints and reductions for proofs
of problem locations within the hierarchy.
These parameterized problems include more information than their standard
counterparts, and thus, can have better solutions.
")    (paper.topic       grohe2002 knowledgebasecompilation)    (paper.instance    grosof2003)    (paper.bibtex      grosof2003 inproceedings)    (paper.author      grosof2003 benjamingrosof)    (paper.author      grosof2003 ianhorrocks)    (paper.author      grosof2003 raphaelvolz)    (paper.author      grosof2003 stefandecker)    (paper.title       grosof2003 "Description Logic Programs: Combining Logic Programs with Description Logic")    (paper.publication grosof2003 www)    (paper.url         grosof2003 "http://citeseer.ist.psu.edu/grosof03description.html")    (paper.year        grosof2003 2003)    (paper.description grosof2003 "
Description Logic Programs are introduced, which lie in the intersection 
of logic programming and OWL DL.  In addition, mechanisms for reasoning
about this fragment with either description logic or logic programming
tools are introduced.
")    (paper.topic       grosof2003 semanticweb)    (paper.instance    gurevich90)    (paper.bibtex      gurevich90 article)    (paper.author      gurevich90 yurigurevich)    (paper.title       gurevich90 "On the Classical Decision Problem")    (paper.publication gurevich90 eatcs)    (paper.volume      gurevich90 42)    (paper.startpage   gurevich90 140)    (paper.endpage     gurevich90 150)    (paper.url         gurevich90 "http://citeseer.ist.psu.edu/gurevich93classical.html")    (paper.year        gurevich90 1990)    (paper.rank        gurevich90 1)    (paper.description gurevich90 "
This paper takes the form of a dialogue between the Author and Quisani.
It gives an introduction to the problem of determining whether a first-
order formula is satisfiable (or valid).  The classic decision problem
is whether this problem is decidable.  Church and Turing showed
it to be undecidable.  Then the question becomes, for which
formulas is this decidable?  Classes are given based on the 
quantifier prefixes that are decidable.  More interestingly, 
a certain set of 4 prefixes are enough to completely solve the
decision problem for prefix classes.
")    (paper.topic       gurevich90 decidablefragmentsoffirst-orderlogic)    (paper.instance    haas86)    (paper.author      haas86 andrewrhaas)    (paper.title       haas86 "A Syntactic Theory of Belief and Action")    (paper.publication haas86 artificialintelligence)    (paper.volume      haas86 28)    (paper.number      haas86 3)    (paper.startpage   haas86 245)    (paper.endpage     haas86 292)    (paper.url         haas86 "http://www.reviews.com/Review/Review_review.cfm?media_id=778843&reviewer=110938&pos=3&page=4")    (paper.year        haas86 1986)    (paper.description haas86 "
Haas describes an approach for reasoning about belief, both an agent's own
beliefs and another agent's belief's.  First, we represent an agent's belief's
with Believes(agent, sentence), where sentence names a sentence of FOL.  Haas
names sentences of FOL by quoting each component, i.e. p(a) is named 'p('a)
(it looks cleaner in prefix notation).  He also gives names for intervals of
time so he can state how long it will take for an agent to believe a certain
sentence; afterall inference is not instantaneous.   In order to give an agent
the ability to determine what another agent will infer, Haas borrows
Konolige's suggestion of implanting an agent's inference rules into the
Believes statements.  Then, Haas introduces The Reflection Schema to do
inference.  Specifically,
Ax1,..,xn. (ClosedTerm x1)^...^(ClosedTerm xn) => IsProof(s)
s is a proof quoted appropriately.  He shows this schema sound and complete.
Haas goes on to define 'Knowing What' in terms of the context of what was asked.
'Knowing How' means a robot has a program to execute.  Finally, Haas connnects
belief and truth using the truth predicate: 'true(quote p) 'iff 'p.  The
Liar's paradox shows up here, but Haas avoids it by proving if p is ground,
true produces no contradictions.
")    (paper.topic       haas86 metalevelreasoning)    (paper.instance    hahnle2002)    (paper.author      hahnle2002 reinerhahnle)    (paper.author      hahnle2002 neilmurray)    (paper.author      hahnle2002 erikrosenthal)    (paper.title       hahnle2002 "Ordered Resolution vs. Connection Graph Resolution")    (paper.url         hahnle2002 "http://citeseer.ist.psu.edu/446349.html")    (paper.year        hahnle2002 2002)    (paper.description hahnle2002 "
Hahnle et. al. first describe connection graph resolution for
propositional logic, introduced by Kowalski in 1975.  
CGR begins with a graph of clauses with
edges between complementary literals.  Activating an edge
means performing a step of resolution, producing a new 
clause graph.  Then they show that ordered resolution
is a special case of cg-resolution (for prop logic) and then
that ordered cg-resolution will always terminate.  Ordered
cg-resolution enforces a total ordering on literals so
that resolution is applied only to the maximally ordered
literal in a clause.  It is a little unclear to what extent
the results are new, but apparently
the proofs are simpler than those given in the past.  At the end,
the authors discuss issues for lifting this to first-order and
give Eisinger's example that shows unrestricted cg-resolution
is non-terminal.  
")    (paper.topic       hahnle2002 calculi)    (paper.instance    halevy2001)    (paper.bibtex      halevy2001 article)    (paper.author      halevy2001 alonhalevy)    (paper.title       halevy2001 "Answering Queries Using Views: A Survey")    (paper.publication halevy2001 vldb)    (paper.volume      halevy2001 10)    (paper.number      halevy2001 4)    (paper.startpage   halevy2001 270)    (paper.endpage     halevy2001 294)    (paper.url         halevy2001 "http://citeseer.ist.psu.edu/halevy00answering.html")    (paper.year        halevy2001 2001)    (paper.rank        halevy2001 4)    (paper.description halevy2001 "
Halevy's survey splits the work that answers queries using views into two
cateogires: using materialized views to speed up query answering and
data integration.  In the former setting, materialized views have the potential
to speed up query answering because some portion of the query may have already
been computed and stored in the db as a materialized view.  The goal here is
to produce an efficient execution plan that uses base tables and materialized views.
In the latter setting, data integration techniques provide a schema, sometimes
called the mediated schema, for a user to query a large number of separate
databases.  To define how each individual schema relates to the mediated schema,
the tables in the individual schemas are expressed as views of the mediated schema.
Here the work focuses on rewriting the query in terms of the views of the mediated
schema, i.e. in terms of the database schema that actually exist.  This case is
particularly interesting because it requires the views to be treated as
incomplete, e.g. both the database of american cars and the database of foreign
cars contribute to the car table.
")    (paper.topic       halevy2001 databases)    (paper.instance    halmos)    (paper.bibtex      halmos book)    (paper.author      halmos paulhalmos)    (paper.title       halmos "Naive Set Theory")    (paper.publisher   halmos vannostrandreinholdcompany)    (paper.url         halmos "http://www.amazon.com/Naive-Theory-Undergraduate-Texts-Mathematics/dp/0387900926")    (paper.year        halmos 1960)    (paper.rank        halmos -2)    (paper.description halmos "
A 100-page book on naive set theory.
")    (paper.instance    halpern2001)    (paper.bibtex      halpern2001 article)    (paper.author      halpern2001 joseph.y.halpern)    (paper.author      halpern2001 ron.vandermeyden)    (paper.title       halpern2001 "A Logic for SDSI's Linked Local Name Spaces")    (paper.publication halpern2001 computersecurity)    (paper.volume      halpern2001 9)    (paper.number      halpern2001 1)    (paper.number      halpern2001 2)    (paper.startpage   halpern2001 47)    (paper.endpage     halpern2001 74)    (paper.url         halpern2001 "http://citeseer.ist.psu.edu/halpern00logic.html")    (paper.year        halpern2001 2001)    (paper.rank        halpern2001 3)    (paper.description halpern2001 "The authors introduce a logic for representing SDSI's (Simple Distributed Security Infrastructure's) local names.  The question at hand (name resolution query): given a local naming term, e.g. (((a's b)'s c)'s d), what set of entities does it refer to?  They give a provably optimal NP algorithm for determining satisfiability of the logic.  The authors show how name resolution queries can be answered by transforming into Prolog.  Well-written.")    (paper.topic       halpern2001 authorizationlogic)    (paper.instance    halpern91)    (paper.bibtex      halpern91 inbook)    (paper.author      halpern91 josephhalpern)    (paper.author      halpern91 moshevardi)    (paper.title       halpern91 "Model Checking vs. Theorem Proving: A Manifesto")    (paper.booktitle   halpern91 "Artificial Intelligence and the Mathematical Theory of Computation")    (paper.url         halpern91 "http://www.cs.cornell.edu/home/halpern/abstract.html#bookart4")    (paper.year        halpern91 1991)    (paper.rank        halpern91 4)    (paper.description halpern91 "
Halpern and Vardi prescribe using a semantic model to represent an agent's
knowledge and use model checking to determine logical entailment.  This differs
greatly from the standard approach of using logical sentences to represent
knowledge and then doing theorem proving to check entailment.  The authors
outline constructing such models in a few contexts and consider problems with
the model checking.
")    (paper.topic       halpern91 modelchecking)    (paper.instance    hammer93)    (paper.bibtex      hammer93 article)    (paper.author      hammer93 peterhammer)    (paper.author      hammer93 alexanderkogan)    (paper.title       hammer93 "Optimal Compression of Propositional Horn Knowledge Bases: Complexity and Approximation")    (paper.publication hammer93 artificialintelligence)    (paper.volume      hammer93 64)    (paper.number      hammer93 1)    (paper.startpage   hammer93 131)    (paper.endpage     hammer93 145)    (paper.url         hammer93 "http://citeseer.ist.psu.edu/hammer93optimal.html")    (paper.year        hammer93 1993)    (paper.rank        hammer93 1)    (paper.description hammer93 "
Hammer and Kogan show that finding the minimum propositional Horn
KB of a given Horn KB is NP-Complete.  They also show a previous
O(n^2) approximation algorithm to be a good one since it allows
no more than a linear factor more rules.
")    (paper.topic       hammer93 knowledgebasecompilation)    (paper.instance    hayes75)    (paper.author      hayes75 philipjhayes)    (paper.title       hayes75 "A Representation for Robot Plans")    (paper.publication hayes75 ijcai)    (paper.startpage   hayes75 181)    (paper.endpage     hayes75 188)    (paper.year        hayes75 1975)    (paper.description hayes75 "
Due to the need for replanning, Hayes advocates producing plans that consist
of two data structures: a subgoal tree and a decision graph.  The subgoal tree represents the plan in a hierarchical-type planner, i.e. root is the overall
goal; each internal node is a reduction of its parent; each leaf is a
primitive action.  The decision graph records the decisions made by the planner while producing the plan.  Links exist between the decision graph and the
subgoal tree so that when a failure occurs during plan execution, the
appropriate parts of both data structures can be removed.
")    (paper.topic       hayes75 historical)    (paper.instance    hentenryck89)    (paper.bibtex      hentenryck89 book)    (paper.author      hentenryck89 pascalvanhentenryck)    (paper.title       hentenryck89 "Constraint Satisfaction in Logic Programming")    (paper.publisher   hentenryck89 mitpress)    (paper.year        hentenryck89 1989)    (paper.description hentenryck89 "
This is an extended form of Hentenryck's thesis.  It concerns the integration
of two standard CSP techniques (forward checking and arc consistency) into
Prolog.  First, there is a thorough introduction to Prolog--syntax,
semantics, proof theory.  Then he formally shows how to do the
integration.  Next he explains an implementation of the integration
that allows users the ability to specify when to apply the
new techniques.  
")    (paper.topic       hentenryck89 logicprogramming)    (paper.instance    heymans2003)    (paper.bibtex      heymans2003 inproceedings)    (paper.author      heymans2003 sheymans)    (paper.author      heymans2003 dvermeir)    (paper.title       heymans2003 "Integrating Semantic Web Reasoning and Answer Set Programming")    (paper.publication heymans2003 aspworkshop)    (paper.url         heymans2003 "http://citeseer.ist.psu.edu/727609.html")    (paper.year        heymans2003 2003)    (paper.description heymans2003 "
Translating another description logic into logic programming, this time
using stable model semantics.
")    (paper.topic       heymans2003 semanticweb)    (paper.instance    hinrichs2004)    (paper.bibtex      hinrichs2004 article)    (paper.bibtex      hinrichs2004 proceedings)    (paper.author      hinrichs2004 timothylhinrichs)    (paper.author      hinrichs2004 nathanielclove)    (paper.author      hinrichs2004 charlesjpetrie)    (paper.author      hinrichs2004 lyleramshaw)    (paper.author      hinrichs2004 akhilsahai)    (paper.author      hinrichs2004 sharadsinghal)    (paper.title       hinrichs2004 "Using Object-Oriented Constraint Satisfaction for Automated Configuration Generation")    (paper.publication hinrichs2004 dsom)    (paper.url         hinrichs2004 "http://logic.stanford.edu/~thinrich/publications.htm")    (paper.url         hinrichs2004 "papers/hinrichs2004using.pdf")    (paper.year        hinrichs2004 2004)    (paper.rank        hinrichs2004 -2)    (paper.description hinrichs2004 "
In this paper, we describe an approach for automatically generating configurations for complex applications. Automated generation of system configurations is required to allow large-scale deployment of custom applications within utility computing environments. Our approach models the configuration management problem as an Object-Oriented Constraint Satisfaction Problem (OOCSP) that can be solved efficiently using a resolution-based theorem-prover. We outline the approach and discuss both the benefits of the approach as well as its limitations, and highlight certain unresolved issues that require further work. We demonstrate the viability of this approach using an e-Commerce site as an example, and provide results on the complexity and time required to solve for the configuration of such an application.
")    (paper.topic       hinrichs2004 objectorientedconstraintsatisfaction)    (paper.instance    hinrichs2005axiom)    (paper.bibtex      hinrichs2005axiom inproceedings)    (paper.author      hinrichs2005axiom timothylhinrichs)    (paper.author      hinrichs2005axiom michaelrgenesereth)    (paper.title       hinrichs2005axiom "Axiom Schemata as Metalevel Axioms: Model Theory")    (paper.publication hinrichs2005axiom aaai)    (paper.url         hinrichs2005axiom "http://logic.stanford.edu/~thinrich/papers/hinrichs2005axiom.pdf")    (paper.year        hinrichs2005axiom 2005)    (paper.description hinrichs2005axiom "
Logicians frequently use axiom schemata to encode (potentially infinite) sets of sentences with particular syntactic form. In this paper we examine a first-order language in which it is possible to write expressions that both describe sentences and assert the truth of the sentences so described. The effect of adding such expressions to a knowledge base is the same as directly including the set of described sentences. 
")    (paper.topic       hinrichs2005axiom references)    (paper.instance    hinrichs2006herbrand)    (paper.bibtex      hinrichs2006herbrand techreport)    (paper.author      hinrichs2006herbrand timothylhinrichs)    (paper.author      hinrichs2006herbrand michaelrgenesereth)    (paper.title       hinrichs2006herbrand "Herbrand Logic")    (paper.publisher   hinrichs2006herbrand stanforduniversity)    (paper.url         hinrichs2006herbrand "http://logic.stanford.edu/reports/LG-2006-02.pdf")    (paper.year        hinrichs2006herbrand 2006)    (paper.description hinrichs2006herbrand "
Herbrand logic has the same syntax as first-order logic but has Herbrand semantics. That is, the only models that exist in Herbrand logic are the Herbrand models. This logic is easier to learn than first-order logic and is often better suited for modeling and manipulating today's computer systems, the central concerns of computer science. In Herbrand logic, arithmetic using the natural numbers if finitely axiomatizable; however, neither entailment nor satisfiability are semi-decidable. Nevertheless, four of the most industrially successful applications of logic in computer science have been built within fragments of Herbrand logic: deductive databases, logic programming, constraint satisfaction, and formal verification. In this paper, we define Herbrand logic formally, prove several of its properties, discuss Goedel's incompleteness result with respect to Herbrand logic, and demonstrate how each of the four applications mentioned above can be formalized within Herbrand logic. 
")    (paper.topic       hinrichs2006herbrand references)    (paper.instance    hinrichs2007extensional)    (paper.bibtex      hinrichs2007extensional inproceedings)    (paper.author      hinrichs2007extensional timothylhinrichs)    (paper.author      hinrichs2007extensional michaelrgenesereth)    (paper.title       hinrichs2007extensional "Extensional Reasoning")    (paper.publication hinrichs2007extensional cade-esarlt)    (paper.url         hinrichs2007extensional "http://logic.stanford.edu/~thinrich/papers/hinrichs2007extensional.pdf")    (paper.year        hinrichs2007extensional 2007)    (paper.description hinrichs2007extensional "
Relational databases are one of the most industrially successful applications of logic in computer science, built for handling massive amounts of data. The power of the paradigm is clear both because of its widespread adoption and theoretical analysis. Today, automated theorem provers are not able to take advantage of database query engines and therefore do not routinely leverage that source of power. Extensional Reasoning is an approach to automated theorem proving where the machine automatically translates a logical entailment query into a database, a set of view definitions, and a database query such that the entailment query can be answered by answering the database query. This paper discusses the framework for Extensional Reasoning, describes algorithms that enable a theorem prover to leverage the power of the database in the case of axiomatically complete theories, and discusses theory resolution for handling incomplete theories. 
")    (paper.topic       hinrichs2007extensional references)    (paper.instance    hinrichs2007reformulation)    (paper.bibtex      hinrichs2007reformulation inproceedings)    (paper.author      hinrichs2007reformulation timothylhinrichs)    (paper.author      hinrichs2007reformulation michaelrgenesereth)    (paper.title       hinrichs2007reformulation "Reformulation for Extensional Reasoning")    (paper.publication hinrichs2007reformulation sara)    (paper.url         hinrichs2007reformulation "http://logic.stanford.edu/~thinrich/papers/hinrichs2007reformulation.pdf")    (paper.year        hinrichs2007reformulation 2007)    (paper.description hinrichs2007reformulation "
Relational databases have had great industrial success in computer science. The power of the paradigm is made clear both by its widespread adoption and by theoretical analysis. Today, automated theorem provers are not able to take advantage of database query engines and therefore do not routinely leverage that source of power. Extensional Reasoning (ER) is an approach to automated theorem proving where the machine automatically translates a logical entailment query into a database, a set of view definitions, and a database query such that the entailment query can be answered by answering the database query. The techniques developed for ER to date are applicable only when the logical theory is axiomatically complete. This paper discusses techniques for reformulating an incomplete theory into a complete theory so that Extensional Reasoning techniques can be applied. 

")    (paper.topic       hinrichs2007reformulation references)    (paper.instance    hitzler2005)    (paper.bibtex      hitzler2005 inproceedings)    (paper.author      hitzler2005 pascalhitzler)    (paper.author      hitzler2005 peterhaase)    (paper.author      hitzler2005 markuskrotzsch)    (paper.author      hitzler2005 yorksure)    (paper.author      hitzler2005 rudistuder)    (paper.title       hitzler2005 "{DLP} isn't so bad after all")    (paper.publication hitzler2005 owled)    (paper.url         hitzler2005 "http://citeseer.ist.psu.edu/733286.html")    (paper.year        hitzler2005 2005)    (paper.description hitzler2005 "
The authors try to clarify the controversy surrounding Description Logic
Programs, which is a fragment of OWL DL that can be reasoned about effectively
with logic programming engines.  
")    (paper.topic       hitzler2005 semanticweb)    (paper.instance    hodgson2002)    (paper.bibtex      hodgson2002 article)    (paper.author      hodgson2002 kahlilhodgson)    (paper.author      hodgson2002 johnslaney)    (paper.title       hodgson2002 "TPTP, CASC and the development of a semantically guided 
theorem prover")    (paper.publication hodgson2002 aicommunications)    (paper.volume      hodgson2002 15)    (paper.startpage   hodgson2002 135)    (paper.endpage     hodgson2002 146)    (paper.url         hodgson2002 "http://citeseer.ist.psu.edu/558093.html")    (paper.year        hodgson2002 2002)    (paper.rank        hodgson2002 -2)    (paper.description hodgson2002 "
Hodgson and Slaney describe SCOTT 5, the fifth generation of
semantically constrained otter.  The authors give a quick
description of the differences between the five versions
and explain the algorithm for the newest.  Instead of
maintaining a single model that satisfies some of the
constraints, they maintain several models.  Moreover,
sometimes they use these models to implement the semantic
queue strategy.  Pick the largest set of clauses known
to be satisfiable and if the number of clauses complementary
to a clause in S in the passive list is small, into the
active list. If none of these so called co-NMCSs are small
enough, cycle through them and add clauses to the active
queue.  SCOTT keeps separate the model builder and the theorem
prover from semantic guidance routines to allow, in principle,
a plug and play architecture.
")    (paper.topic       hodgson2002 systemdesigns)    (paper.instance    hohfeld88)    (paper.bibtex      hohfeld88 article)    (paper.author      hohfeld88 mhohfeld)    (paper.author      hohfeld88 gertsmolka)    (paper.title       hohfeld88 "Definite Relations over Constraint Languages")    (paper.url         hohfeld88 "http://citeseer.ist.psu.edu/hohfeld88definite.html")    (paper.year        hohfeld88 1988)    (paper.rank        hohfeld88 4)    (paper.description hohfeld88 "
Hohfeld and Smolka generalize the previous formal foundations of Constraint
Logic Programming by allowing arbitrary constraints placed on definite
logic programming clauses.  Their definition for constraint states  that
it is simply a restriction on variables; predicate logic is simply a special
case.  They give a generalization of SLD resolution that is sound and 
complete for this broader definition of CLP.  The authors go on to give a 'semantic type discipline' for these CLP clause sets.
")    (paper.topic       hohfeld88 constraintlogicprogramming)    (paper.instance    horiyama99)    (paper.bibtex      horiyama99 inproceedings)    (paper.author      horiyama99 takashihoriyama)    (paper.author      horiyama99 toshihideibaraki)    (paper.title       horiyama99 "Ordered Binary Decision Diagrams as Knowledge-Bases")    (paper.publication horiyama99 isaac)    (paper.url         horiyama99 "http://citeseer.ist.psu.edu/horiyama99ordered.html")    (paper.year        horiyama99 1999)    (paper.rank        horiyama99 1)    (paper.description horiyama99 "
Ordered binary decision diagrams can be used to represent propositional 
knowledge bases.  Deduction can be done from such a representation in 
polynomial time; not surprisingly, some knowledge bases require exponential
space while others require only polynomial space.  On the up-side, the
space requirements are not correlated with either characteristic models
(see kautz and khardon) or standard CNF representations.
")    (paper.topic       horiyama99 model-basedreasoning)    (paper.related     horiyama99 kautz93)    (paper.related     horiyama99 khardon94)    (paper.instance    hower96)    (paper.bibtex      hower96 article)    (paper.author      hower96 walterhower)    (paper.author      hower96 winfriedgraf)    (paper.title       hower96 "A bibliographical survey of constraint-based approaches to CAD,
graphics, layout, visualization, and related topics")    (paper.publication hower96 knowledgebasedsystems)    (paper.volume      hower96 9)    (paper.number      hower96 7)    (paper.startpage   hower96 449)    (paper.endpage     hower96 464)    (paper.url         hower96 "http://citeseer.ist.psu.edu/hower96bibliographical.html")    (paper.year        hower96 1996)    (paper.rank        hower96 2)    (paper.description hower96 "
Survey paper on just what the title indicates.  There are a few paragraphs
on object-oriented approaches most of which is orthogonal.
")    (paper.topic       hower96 miscellaneous)    (paper.instance    jackson98)    (paper.bibtex      jackson98 article)    (paper.author      jackson98 danieljackson)    (paper.author      jackson98 someshjha)    (paper.author      jackson98 craigdamon)    (paper.title       jackson98 "Isomorph-free model enumeration: a new method for checking relational specifications")    (paper.publication jackson98 toplas)    (paper.volume      jackson98 20)    (paper.number      jackson98 2)    (paper.startpage   jackson98 302)    (paper.endpage     jackson98 343)    (paper.url         jackson98 "http://portal.acm.org/citation.cfm?id=276396&dl=ACM&coll=portal")    (paper.year        jackson98 1998)    (paper.description jackson98 "
Methods for building models while avoiding the enumeration of isomorphic candidates for the language Nitpick.
")    (paper.topic       jackson98 modelbuilding)    (paper.instance    jaffar87)    (paper.bibtex      jaffar87 inproceedings)    (paper.author      jaffar87 jjaffar)    (paper.author      jaffar87 jllassez)    (paper.title       jaffar87 "Constraint Logic Programming")    (paper.publication jaffar87 popl)    (paper.startpage   jaffar87 111)    (paper.endpage     jaffar87 119)    (paper.url         jaffar87 "http://portal.acm.org/citation.cfm?id=41635&dl=GUIDE&coll=GUIDE")    (paper.year        jaffar87 1987)    (paper.rank        jaffar87 4)    (paper.description jaffar87 "
Jaffar and Lassez introduce constraint logic programming as a class
of logic programming languages, one for each domain of discourse.  
Every rule has associated with it a set of constraints 
over that domain.  Hohfeld and Smolka in '88 generalize this 
framework, but this is the seminal paper.  Solution to a CLP problem
is a set of constraints; thus, logic programming is a special form
of CLP where those constraints must be equality constraints.
")    (paper.topic       jaffar87 constraintlogicprogramming)    (paper.instance    jajodia1997)    (paper.bibtex      jajodia1997 inproceedings)    (paper.author      jajodia1997 sushil.jajodia)    (paper.author      jajodia1997 pierangela.samarati)    (paper.author      jajodia1997 v.s.subrahmanian)    (paper.title       jajodia1997 "A Logical Language for Expressing Authorizations")    (paper.publisher   jajodia1997 ieeepress)    (paper.publication jajodia1997 ieeesap)    (paper.startpage   jajodia1997 31)    (paper.endpage     jajodia1997 42)    (paper.url         jajodia1997 "http://citeseer.ist.psu.edu/jajodia97logical.html")    (paper.year        jajodia1997 1997)    (paper.rank        jajodia1997 4)    (paper.description jajodia1997 "The authors propose a language for integrating multiple access control policies: a variant of datalog with stratified semantics.  They consider static objects, users, groups, roles, and actions.  They introduce a vocabulary with intended semantics that can be used to implement various security policies, including conflict resolution schemes and constraints.  The constraints are written so that the system can detect that a constraint has been violated.  Finally, several standard policies are implemented within this framework.  Good overview and well-written.")    (paper.topic       jajodia1997 authorizationlogic)    (paper.instance    jajodia1997unified)    (paper.bibtex      jajodia1997unified inproceedings)    (paper.author      jajodia1997unified sushil.jajodia)    (paper.author      jajodia1997unified pierangela.samarati)    (paper.author      jajodia1997unified v.s.subrahmanian)    (paper.author      jajodia1997unified elisa.bertino)    (paper.title       jajodia1997unified "A Unified Framework for Enforcing Multiple Access Control Policies")    (paper.publication jajodia1997unified sigmod)    (paper.startpage   jajodia1997unified 474)    (paper.endpage     jajodia1997unified 485)    (paper.url         jajodia1997unified "http://citeseer.ist.psu.edu/jajodia97unified.html")    (paper.year        jajodia1997unified 1997)    (paper.rank        jajodia1997unified 2)    (paper.description jajodia1997unified "Precursor to A Logical Language for Expressing Authorizations")    (paper.topic       jajodia1997unified authorizationlogic)    (paper.related     jajodia1997unified jajodia1997)    (paper.instance    janicic2002)    (paper.bibtex      janicic2002 article)    (paper.author      janicic2002 predragjanicic)    (paper.author      janicic2002 alanbundy)    (paper.title       janicic2002 "A General Setting for Flexibly Combining and Augmenting Decision Procedures")    (paper.publication janicic2002 jar)    (paper.volume      janicic2002 28)    (paper.number      janicic2002 3)    (paper.startpage   janicic2002 257)    (paper.endpage     janicic2002 305)    (paper.url         janicic2002 "http://www.inf.ed.ac.uk/publications/report/0095.html")    (paper.year        janicic2002 2002)    (paper.rank        janicic2002 3)    (paper.description janicic2002 "
Janicic and Bundy invent a set of macro rewrite rules that can be used
to build a reasoner out of a set of decision procedures.  They provide
a good overview of the main influences in the field of combining
and augmenting decision procedures.  They build a prototype system
and report comparison results for Nelson-Oppen, Shostak, etc.
")    (paper.topic       janicic2002 architectures)    (paper.instance    jeavons99)    (paper.bibtex      jeavons99 article)    (paper.author      jeavons99 peterjeavons)    (paper.author      jeavons99 davidcohen)    (paper.author      jeavons99 marcgyssens)    (paper.title       jeavons99 "How to Determine the Expressive Power of Constraints")    (paper.publication jeavons99 constraints)    (paper.volume      jeavons99 4)    (paper.startpage   jeavons99 113)    (paper.endpage     jeavons99 131)    (paper.url         jeavons99 "http://citeseer.ist.psu.edu/jeavons98how.html")    (paper.year        jeavons99 1999)    (paper.description jeavons99 "
The authors define expresssive power as the set of relations definable
from another set of relations.  They show how to compute which algebraic 
operators are closed for a given set of relations by solving a particular
kind of CSP for the given relations.  Then they show that the set of
relations definable from a given set is equal to the set of relations
that are closed under the same operations as that given set.  If some set
R is closed under the set of operations O and every operation in O is 
what they call essentially unary, the problem is NP-complete.  Moreover,
if O includes an operation that is not essentially unary, it includes
an operation that has arity at most max(3, the size of the domain).
Thus, this paper details sufficient conditions for checking whether
a particular CSP is NP-complete: (1) compute the set of operations
that are closed over the permissible tables in the constraints of the CSP.
(2) If that set includes just essentially-unary operations (which can
be deduced by checking for operations of arity up to max(3, size of domain), 
we are assured the problem is NP-complete.
")    (paper.topic       jeavons99 general)    (paper.instance    kautz91)    (paper.bibtex      kautz91 inproceedings)    (paper.author      kautz91 henrykautz)    (paper.author      kautz91 bartselman)    (paper.title       kautz91 "A General Framework for Knowledge Compilation")    (paper.publication kautz91 pdk)    (paper.url         kautz91 "http://citeseer.ist.psu.edu/kautz91general.html")    (paper.year        kautz91 1991)    (paper.rank        kautz91 4)    (paper.description kautz91 "
This follows up on selman91 and generalizes the Knowledge Compilation 
idea into a framework.  It says that it lifts the algorithms for
Least Upper Bound and Greatest Lower Bound Horn approximations to first-
order, but the proofs of computability are nonexistent.  
")    (paper.topic       kautz91 knowledgebasecompilation)    (paper.related     kautz91 selman91)    (paper.instance    kautz92)    (paper.bibtex      kautz92 inproceedings)    (paper.author      kautz92 henrykautz)    (paper.author      kautz92 bartselman)    (paper.title       kautz92 "Forming Concepts for Fast Inference")    (paper.publication kautz92 ecai-kr)    (paper.startpage   kautz92 200)    (paper.endpage     kautz92 215)    (paper.url         kautz92 "http://citeseer.ist.psu.edu/kautz92forming.html")    (paper.year        kautz92 1992)    (paper.rank        kautz92 2)    (paper.description kautz92 "
Kautz and Selman show the Least Upper Bound Horn approximation to a 
propositional knowledge base can be exponential in size.  In general,
there do exist knowledge bases (quoting) whose LUBs cannot be represented 
in a form that is both small and tractable.  This paper mainly
considers the utility of learning new concepts to reduce the size
of the LUB.  
")    (paper.topic       kautz92 knowledgebasecompilation)    (paper.related     kautz92 selman91)    (paper.instance    kautz93)    (paper.bibtex      kautz93 inproceedings)    (paper.author      kautz93 henrykautz)    (paper.author      kautz93 michaelkearns)    (paper.author      kautz93 bartselman)    (paper.title       kautz93 "Reasoning with Characteristic Models")    (paper.publication kautz93 aaai)    (paper.url         kautz93 "http://citeseer.ist.psu.edu/kautz93reasoning.html")    (paper.year        kautz93 1993)    (paper.rank        kautz93 5)    (paper.description kautz93 "
This is the seminal work on characteristic models.  The authors
define the characteristic models of a set M of models as those that cannot 
be derived by intersecting other models of M.  For propositional Horn
theories, these characteristic models are sufficient for computing 
entailment in time linear in the size of the characteristic models and
the conjecture.  In some cases the clausal representation requires 
exponentially more space than the characteristic representation, but
in others just the reverse is true.  Abduction using characteristic
models can be done in time polynomial in the size of the assumption set 
and the size of the characteristic set.  Very clean paper overall.
")    (paper.topic       kautz93 characteristicmodels)    (paper.instance    kautz95)    (paper.bibtex      kautz95 article)    (paper.author      kautz95 henrykautz)    (paper.author      kautz95 michaelkearns)    (paper.author      kautz95 bartselman)    (paper.title       kautz95 "Horn Approximations of Empirical Data")    (paper.publication kautz95 artificialintelligence)    (paper.volume      kautz95 74)    (paper.number      kautz95 1)    (paper.startpage   kautz95 129)    (paper.endpage     kautz95 145)    (paper.url         kautz95 "http://citeseer.ist.psu.edu/kautz95horn.html")    (paper.year        kautz95 1995)    (paper.rank        kautz95 4)    (paper.description kautz95 "
This paper essentially rehashes that of kautz93, except it also looks
at the problem of converting a given set of models into either clausal
form or characteristic model form.  This idea of extracting structure
from 'empirical data' was first addressed in dechter92.
")    (paper.topic       kautz95 characteristicmodels)    (paper.related     kautz95 kautz93)    (paper.related     kautz95 dechter92)    (paper.instance    kavvadias93)    (paper.bibtex      kavvadias93 inproceedings)    (paper.author      kavvadias93 dkavvadias)    (paper.author      kavvadias93 cpapadimitriou)    (paper.author      kavvadias93 msideri)    (paper.title       kavvadias93 "On Horn Envelopes and Hypergraph Transversals")    (paper.publication kavvadias93 isaac)    (paper.url         kavvadias93 "http://www.aueb.gr/Users/sideri/publicat.htm")    (paper.year        kavvadias93 1993)    (paper.rank        kavvadias93 2)    (paper.description kavvadias93 "
This is the seminal work relating hypergraph transversals to
characteristic models.  Kavvadias et. al. look into the complexity
of computing the Horn envelope of a set of boolean models (the minimal
set of clauses that entail all the models) and the Horn core
(the maximal set of clauses that entail a subset of the models).
")    (paper.topic       kavvadias93 characteristicmodels)    (paper.instance    khardon94)    (paper.bibtex      khardon94 inproceedings)    (paper.author      khardon94 ronikhardon)    (paper.author      khardon94 danroth)    (paper.title       khardon94 "Reasoning with Models")    (paper.publication khardon94 aaai)    (paper.url         khardon94 "http://citeseer.ist.psu.edu/khardon96reasoning.html")    (paper.year        khardon94 1994)    (paper.rank        khardon94 4)    (paper.description khardon94 "
This paper describes a method for determining entailment and abduction
through model-
checking for a KB of full propositional logic over a restricted set of 
queries.   It extends the work of Kautz, et. al. who wrote the seminal
work for propositional Horn KBs.  The definition for characteristic
models relies on Monotone Theory, which describes properties of 
Boolean functions.  It is important to note that these characteristic
models are defined with respect to a class of queries; that is, given
a class of queries, one can compute the characteristic models for
a propositional KB.  That set of models is then the optimal set, 
meaning all models are needed for correct entailment and abduction.
This paper does a thorough treatment of the issues it
brings up, but it is hard to penetrate.  Section 4 is a list of definitions
of Monotone theory, with little motivation or intuition as to the
utility of each definition.  Of course, the rest of the paper relies
on these definitions.  Reread! 
")    (paper.topic       khardon94 characteristicmodels)    (paper.related     khardon94 kautz93)    (paper.instance    khardon94a)    (paper.bibtex      khardon94a inproceedings)    (paper.author      khardon94a ronikhardon)    (paper.author      khardon94a danroth)    (paper.title       khardon94a "Exploiting Relevance through Model-Based Reasoning")    (paper.publication khardon94a aaai)    (paper.url         khardon94a "http://citeseer.ist.psu.edu/40071.html")    (paper.year        khardon94a 1994)    (paper.rank        khardon94a 5)    (paper.description khardon94a "
Khardon and Roth outline three cases when the relevance can be exploited
to reason more efficiently.  The first deals with context.  Instead of using
all models for logical entailment, use just those that are relevant to 
the current context.  The second use of relevance is in using the Least
Upper Bound approximation of a theory to determine entailment when all 
queries will be answered correctly by the LUB.  Lastly, machine learning
is used to make reasoning easier as it gains experience in the world.
")    (paper.topic       khardon94a model-basedreasoning)    (paper.instance    khardon95)    (paper.bibtex      khardon95 article)    (paper.author      khardon95 ronikhardon)    (paper.title       khardon95 "Translating between {H}orn Representations and their Characteristic Models")    (paper.publication khardon95 airesearch)    (paper.volume      khardon95 3)    (paper.startpage   khardon95 349)    (paper.endpage     khardon95 372)    (paper.url         khardon95 "http://citeseer.ist.psu.edu/khardon95translating.html")    (paper.year        khardon95 1995)    (paper.rank        khardon95 3)    (paper.description khardon95 "
Khardon builds on the previous work in kautz93 and khardon94 and investigates
the complexity of translating between propositional 
characteristic models and their
horn representations.  He shows that translating either way is polynomial-
reducible to the other, and that both are equivalent to deciding whether
a given set of models is the set of characteristic models of a given
set of horn clauses.  All these problems are at least as hard as converting
a monotone (no negations) CNF formula into a monotone DNF formula.  This
problem has a sub-exponential time solution of n^O(log n).
This paper also gives references to equivalent work in the database 
community under the name Armstrong relations.
")    (paper.topic       khardon95 characteristicmodels)    (paper.related     khardon95 kautz93)    (paper.related     khardon95 khardon95)    (paper.instance    khardon95b)    (paper.bibtex      khardon95b techreport)    (paper.author      khardon95b ronikhardon)    (paper.author      khardon95b heikkimannila)    (paper.author      khardon95b danroth)    (paper.title       khardon95b "Reasoning with Examples: Propositional Formulae and Database Dependencies")    (paper.publisher   khardon95b harvarduniversity)    (paper.url         khardon95b "http://citeseer.ist.psu.edu/170480.html")    (paper.year        khardon95b 1995)    (paper.rank        khardon95b 3)    (paper.description khardon95b "
The authors show the connection between characteristic models and Armstrong
relations, i.e. relations that are sufficient for determining logical
entailment of functional dependencies.  They strengthen some of the
results on Armstrong relations and demonstrate a connection between
finding keys and abduction.
")    (paper.topic       khardon95b characteristicmodels)    (paper.related     khardon95b kautz93)    (paper.related     khardon95b khardon95)    (paper.instance    khardon97)    (paper.bibtex      khardon97 article)    (paper.author      khardon97 ronikhardon)    (paper.author      khardon97 danroth)    (paper.title       khardon97 "Defaults and Relevance in Model Based Reasoning")    (paper.publication khardon97 artificialintelligence)    (paper.volume      khardon97 97)    (paper.number      khardon97 1-2)    (paper.startpage   khardon97 169)    (paper.endpage     khardon97 193)    (paper.url         khardon97 "http://citeseer.ist.psu.edu/khardon97defaults.html")    (paper.year        khardon97 1997)    (paper.rank        khardon97 4)    (paper.description khardon97 "
This paper explains how model-based reasoning can be used to model reasoning
with context.  Suppose the KB is represented by a set of models M.  As the agent's
context changes, new sentences appear that define that context.  Entailment in
the context then means that the sentence holds in the subset of models M that
satisfy those new sentences.  By representing the theory as a set of models,
as context changes, that set can be reduced online.  In this paper, context
change is represented using default logic.  Algorithms are given for both
skeptical and credulous default reasoning where the knowledge base is represented
as a set of models.  Conditions are given under which these algorithms work
correctly.  Finally, the learning to reason paradigm is brought up as a third
argument for representing a KB as the set of models that satisfy it.  All three,
context, defaults, and learning to reason, sometimes produce computational
benefits because models are used to represent knowledge.
")    (paper.topic       khardon97 characteristicmodels)    (paper.instance    khardon98)    (paper.bibtex      khardon98 article)    (paper.author      khardon98 ronikhardon)    (paper.author      khardon98 heikkimannila)    (paper.author      khardon98 danroth)    (paper.title       khardon98 "Reasoning with Examples: Propositional Formulae and Database Dependencies")    (paper.publication khardon98 actainformatica)    (paper.volume      khardon98 36)    (paper.number      khardon98 4)    (paper.startpage   khardon98 267)    (paper.endpage     khardon98 286)    (paper.url         khardon98 "http://citeseer.ist.psu.edu/170480.html")    (paper.year        khardon98 1998)    (paper.rank        khardon98 3)    (paper.description khardon98 "
Reasoning with Examples means reasoning with enough models to correctly
determine entailment.  This technique shows up both in the database
literature under the name 'Armstrong Relations' and in the automated
reasoning literature under the name 'Characteristic Models'.  While
the latter refers to a set of examples, the former refers to a single
example.  The number of models needed in Characteristic Models for
propositional logic is bounded by |B|*|DNF(kb)|, where B is the 
basis for the knowledge base kb.  The bulk of this paper shows how the 
two concepts are closely intertwined; it goes on to show that finding 
the keys of a DB is akin to finding abductive explanations in a propositional
knowledge base. 
")    (paper.topic       khardon98 characteristicmodels)    (paper.related     khardon98 fagin82)    (paper.related     khardon98 khardon95)    (paper.instance    kim87)    (paper.bibtex      kim87 techreport)    (paper.author      kim87 myungwonkim)    (paper.title       kim87 "On Automatically Generating and Using Examples in a Computational Logic System")    (paper.url         kim87 "http://citeseer.ist.psu.edu/342499.html")    (paper.year        kim87 1987)    (paper.rank        kim87 1)    (paper.description kim87 "
Kim's dissertation explores an algorithm for automatically generating 
examples that satisfy a particular constraint given other such examples.
He also explores how such an algorithm can be used to help prune
a theorem-proving search space.  The logic is the Boyer-Moore theory,
and the theorem prover is the Boyer Moore theorem prover.
")    (paper.topic       kim87 reasoningwithexamples)    (paper.instance    kim94)    (paper.bibtex      kim94 inproceedings)    (paper.author      kim94 sunkim)    (paper.author      kim94 hantaozhang)    (paper.title       kim94 "ModGen: Theorem Proving by Model Generation")    (paper.publication kim94 aaai)    (paper.url         kim94 "http://citeseer.ist.psu.edu/kim94modgen.html")    (paper.year        kim94 1994)    (paper.rank        kim94 2)    (paper.description kim94 "
The authors describe a system that propositionalizes Otter sentences and then
applies model-checking.  The limitation here is the requirement of a 
finite Herbrand universe.
")    (paper.topic       kim94 model-basedreasoning)    (paper.instance    kleer84)    (paper.bibtex      kleer84 inproceedings)    (paper.author      kleer84 johandekleer)    (paper.title       kleer84 "Choices without Backtracking")    (paper.publication kleer84 aaai)    (paper.year        kleer84 1984)    (paper.rank        kleer84 2)    (paper.description kleer84 "
Kleer describes a method for increasing the efficiency of problem solving
by storing the assumptions of a derived fact along with that fact.  Doing
this limits the amount of backtracking necessary.  This might be applicable
when backtracking with data structures.  Here it is situated within a truth
maintenance system.
")    (paper.topic       kleer84 theoremprovingwithattachments)    (paper.instance    kowalski69)    (paper.bibtex      kowalski69 inbook)    (paper.author      kowalski69 robertkowalski)    (paper.title       kowalski69 "Search Strategies for Theorem-Proving")    (paper.booktitle   kowalski69 "Machine Intelligence")    (paper.volume      kowalski69 5)    (paper.startpage   kowalski69 181)    (paper.endpage     kowalski69 201)    (paper.year        kowalski69 1969)    (paper.rank        kowalski69 3)    (paper.description kowalski69 "
Kowalski abstractly defines the theorem-proving problem in terms of an 
'abstract theorem-proving graph'.  He defines the search space by giving
a specification for each state, the operators that act on those 
states, and a termination condition.  In this case, the tp graph initially
consists of a set of nodes, one for each input axiom.  Further nodes 
(states) are reached (generated) by applying an inference rule to a set
of already reached (generated) nodes.   A search strategy is a mapping
from sets of nodes to other sets of nodes.  Kowalski gives sufficient
(abstract) conditions under which a search strategy is complete.  The
last few sections cover heuristics, their optimality and their 
admissibility.
")    (paper.topic       kowalski69 comparativeanalysis)    (paper.instance    kowalski79)    (paper.author      kowalski79 robertkowalski)    (paper.title       kowalski79 "Algorithm = Logic + Control")    (paper.publication kowalski79 cacm)    (paper.volume      kowalski79 22)    (paper.number      kowalski79 7)    (paper.startpage   kowalski79 424)    (paper.endpage     kowalski79 436)    (paper.url         kowalski79 "http://portal.acm.org/citation.cfm?id=359136&dl=ACM&coll=portal&CFID=6287538&CFTOKEN=93143078")    (paper.year        kowalski79 1979)    (paper.rank        kowalski79 5)    (paper.description kowalski79 "
Kowalski defines an algorithm as Logic and Control.  Logic specifies what the
algorithm does or the knowledge used in
solving a problem.  Control determines the problem-solving strategies, namely
top-down, bottom -up, a combination of the two, and
orthogonally parallelization.  Ideally, the bulk of efficiency concerns
should fall under Control; however, we can improve the efficiency of an
algorithm by adjusting either the Logic or the Control.  
Quote: Computer programs
will be more often correct, more easily improved, and more readily adapted to
new problems when programming languages separate logic and control.
")    (paper.topic       kowalski79 logicalknowledgerepresentation)    (paper.instance    krotzsch2005)    (paper.bibtex      krotzsch2005 techreport)    (paper.author      krotzsch2005 markuskrotzsch)    (paper.author      krotzsch2005 pascalhitzler)    (paper.author      krotzsch2005 michaelsintek)    (paper.author      krotzsch2005 dennyvrandecic)    (paper.title       krotzsch2005 "Expressive {OWL} Reasoning")    (paper.publisher   krotzsch2005 universityofkalrsruhe)    (paper.url         krotzsch2005 "http://citeseer.ist.psu.edu/733293.html")    (paper.year        krotzsch2005 2005)    (paper.description krotzsch2005 "
The authors enlarge the class of formulas in OWL DL that can be reasoned
about with a logic programming engine; in addition they present
an alternative characterization of Description Logic Programming.
")    (paper.topic       krotzsch2005 semanticweb)    (paper.instance    lenat90)    (paper.bibtex      lenat90 book)    (paper.author      lenat90 dblenat)    (paper.author      lenat90 rvguha)    (paper.title       lenat90 "Building Large Knowledge-Based Systems: Representation and Inference in the CYC Project")    (paper.publisher   lenat90 addisonwesley)    (paper.year        lenat90 1990)    (paper.description lenat90 "
Book on Cyc, the large common-sense knowledge base in Texas.
")    (paper.topic       lenat90 logicalknowledgerepresentation)    (paper.instance    lenz98)    (paper.bibtex      lenz98 book)    (paper.author      lenz98 mariolenz)    (paper.author      lenz98 brigettebartschsporl)    (paper.author      lenz98 hansdieterburkhard)    (paper.title       lenz98 "Case-Based Reasoning Technology: From Foundations to Applications ")    (paper.url         lenz98 "http://www.amazon.com/exec/obidos/tg/detail/-/3540645721/104-6992918-7685512?vi=glance")    (paper.year        lenz98 1998)    (paper.rank        lenz98 3)    (paper.description lenz98 "
Case-based reasoning analogically produces solutions to problems through
the use of a case library.  Chapter 1 tries to situate it in the field of
knowledge representation, explain the fundamental process, and describe
the problems to be solved.
")    (paper.topic       lenz98 case-basedreasoning)    (paper.instance    lesperance95)    (paper.author      lesperance95 yveslesperance)    (paper.author      lesperance95 hectorjlevesque)    (paper.author      lesperance95 fangzhenlin)    (paper.author      lesperance95 richardb)    (paper.title       lesperance95 "Ability and Knowing How in the Situation Calculus")    (paper.url         lesperance95 "http://citeseer.ist.psu.edu/lesperance95ability.html")    (paper.year        lesperance95 1995)    (paper.description lesperance95 "
Lesperance et. al. describe 1) a formalism for showing that a given goal can or cannot be accomplished
without simply producing a plan to accomplish it.  This involves discovering whether there is a path of
actions that will lead to the goal at the metalevel.  2) In the plan space that includes sensing actions, nondeterministic
branching, nondeterministic argument-passing, and nondeterministic primitive action choice, the authors formalize the notion that a dumb execution
engine cannot execute all the same plans as an intelligent execution engine.  Building on (1), they
define DumbKnowHow (DKH) and SmartKnowHow (SKH) predicates.  Cool ideas here.  There is also a nice summary
of a formalization of these sensing actions.
")    (paper.topic       lesperance95 fundamentals)    (paper.instance    leuschel2002)    (paper.bibtex      leuschel2002 article)    (paper.author      leuschel2002 michaelleuschel)    (paper.author      leuschel2002 mauricebruynooghe)    (paper.title       leuschel2002 "Logic Program Specialisation Through Partial Deduction: Control Issues")    (paper.publication leuschel2002 tplp)    (paper.volume      leuschel2002 2)    (paper.number      leuschel2002 4-5)    (paper.startpage   leuschel2002 461)    (paper.endpage     leuschel2002 515)    (paper.url         leuschel2002 "")    (paper.year        leuschel2002 2002)    (paper.description leuschel2002 "
The authors go through some of the work on partial evaluation in the case
of pure logic programming, which is called partial deduction.  (It differs
from partial evaluation in LP because axioms can be partially partially 
evaluated in the case of non-ground static arguments.)  Partial deduction
means constructing a partial SLDNF tree for a query, and using the fringe
to imply the goal as the output.  Interestingly, with negation, most work 
focuses on preserving operational semantics, as the well-founded semantics
are preserved for all groundings of the goal(s).  This paper focuses on
control issues surrounding the constructing of these SLDNF trees: (1)
given a goal atom A, how do we construct a tree, the local control
problem, and (2) what is the set of all goal atoms, the global control. 
The second problem only occurs because of the desire to preserve
procedural semantics.  The process of unfolding, i.e. constructing
the tree, is difficult because applying too many resolutions can 
result in local code explosion, work duplication, and non
termination.  If the unfold function is guaranteed to produce a tree 
with at most one non-failing
branch, it is said to be determinate; determine unfolding will not
produce code explosion or work duplication.  It is undecidable to determine
whether a tree with at most one non-failing branch can be constructed.
Approximations are usually used.   To deal with termination, binding-time
analysis is used (sometimes computed using abstract interpretation), which
creates annotations that have decided whether to unfold or not.  Instead of
handling termination offline, another approach handles it online--during
specialisation.  Well-founded and well-quasi orders are popular here.  
There is also a discussion of global control issues.  Interestingly,
tabling with partial deduction can turn a terminating program into
a nonterminating program.  Long reference list.
")    (paper.topic       leuschel2002 reformulation)    (paper.instance    levesque84)    (paper.bibtex      levesque84 inbook)    (paper.author      levesque84 hectorjlevesque)    (paper.title       levesque84 "The Logic of Incomplete Knowledge Bases")    (paper.publisher   levesque84 springerverlag)    (paper.booktitle   levesque84 "On Conceptual Modeling")    (paper.startpage   levesque84 165)    (paper.endpage     levesque84 189)    (paper.url         levesque84 "")    (paper.year        levesque84 1984)    (paper.rank        levesque84 2)    (paper.description levesque84 "
Levesque attacks the problem of querying an incomplete knowledge base about its
incompleteness.  How else does one know how accurately the KB represents the domain
it is modeling?  If a query is not entailed, without being able to ask whether the
query itself is known to the KB, we do not know if the query is false or whether
the KB simply doesn't know.  Levesque introduces a language, KL, based on the operator
K for dealing with this problem.  In the end, he claims the interaction of a KB
with a user should be done using this  language, but that any such query can be
translated into straight-up FOL without K.
")    (paper.topic       levesque84 logicalknowledgerepresentation)    (paper.instance    levesque85)    (paper.bibtex      levesque85 inbook)    (paper.author      levesque85 hectorjlevesque)    (paper.author      levesque85 ronaldjbrachman)    (paper.title       levesque85 "A Fundamental Tradeoff in Knowledge Representation and Reasoning")    (paper.publisher   levesque85 morgankaufmann)    (paper.booktitle   levesque85 "Readings in Knowledge Representation and Reasoning")    (paper.url         levesque85 "http://citeseer.ist.psu.edu/context/54197/0")    (paper.year        levesque85 1985)    (paper.rank        levesque85 3)    (paper.description levesque85 "
Levesque and Brachman argue that a perfect representation language does not
exist.  Rather, languages vary in expressiveness and tractability, and some
are only more interesting than others for certain uses.  The authors examine
first-order logic, databases, semantic nets, and frame systems as examples.
")    (paper.topic       levesque85 logicalknowledgerepresentation)    (paper.instance    levesque86)    (paper.author      levesque86 hectorjlevesque)    (paper.title       levesque86 "Making Believers Out of Computers")    (paper.publication levesque86 artificialintelligence)    (paper.volume      levesque86 30)    (paper.number      levesque86 1)    (paper.startpage   levesque86 81)    (paper.endpage     levesque86 108)    (paper.year        levesque86 1986)    (paper.rank        levesque86 3)    (paper.description levesque86 "
Levesque argues that the combinatorial explosion of exponential-time
algorithms cannot be tolerated for AI systems, except for a 'puzzle-mode'.  
To that end, he advises building knowledge bases using languages that
only allow complete ('vivid') information and using 
reasoning methods that may at times be unsound and/or incomplete.  His
examples invoke the reader's imagination to invent a pictures that model
the example descriptions.  Such descriptions can then be considered vivid.
")    (paper.topic       levesque86 logicalknowledgerepresentation)    (paper.instance    levesque96)    (paper.author      levesque96 hectorjlevesque)    (paper.title       levesque96 "What is Planning in the presence of sensing?")    (paper.url         levesque96 "http://www.cs.toronto.edu/cogrobo/Papers/sensing.pdf")    (paper.year        levesque96 1996)    (paper.description levesque96 "

Intro: Classical planning doesn't deal with the problem of sensing or looping, e.g. it cannot produce plans that will successfully achieve the Airport or the Omlette examples.  Sensing is necessary iff there are properties of the world that cannot be deduced at plan time but that are required for achieving the goal.

<br><br>Classical Planning: Use sit calc to formally define the classical planning problem.  It is unclear to me whether the sit calc he is using would somehow allow there to be partial order plans, e.g. return something like (do (parallel a b c) (do (parallel e f) (do h s0))).  For now let's say it can't and sitcalc plans must be total orders.  We might argue that because his definition is tied to sitcalc, which produces only totally ordered plans, his 'definition' of the classical planning problem is wrong.  But it doesn't really matter for the rest of what he is going to say.

Incorporating sensing actions: gives an overview of another one of his papers which introduces sensing actions into sitcalc, and reviews some related work.

<br><br>Robot programs: introduces a language for describing plans that is more expressive than the standard sitcalc (do a (do b (do .... s0)))) and partial order languages.  Includes loops and branches.  He defines the semantics of the language in situation calculus, relying on a new second order construct for defining the semantics of a loop.  Finally, he states the first theorem, which amounts to a set of rewrite rules for each of the new constructs in the robot language, where the rewrite rules allow one to construct an interpreter for the language.  That is, the obvious interpreter for the language does the right thing, and the theorem proves that.

The revised planning task: formalize, using the machinery built up above, the planning problem as it includes loops, branches, and sensing.  Remember this is all sitcalc in first-order logic + a couple second-order constructs.  The rest of the section works through the Airport example.

<br><br>Note: Importantly, all the examples thusfar, as well as the definition of the planning task requires a _deductive_ solution.  That is, the airport example includes the axiom AtGate(a) | AtGate(b).  At plan-time we can prove that the plan (seq goto-airport (if check-gate(a) then goto-gate-a else goto-gate-b)) will work.  This is unlike our room reservation example since there may be no room to reserve, but we won't know that until plan execution time.  At plan-time, there is no plan we can prove will work.

<br><br>Are robot programs enough?: They claim the original plan language is not sufficient for expressing plans for every solvable planning problem.  The reason is that there is no memory available for the program to use.  Asking for a plan that returns the number of eggs it is given at runtime cannot be achieved without (infinite) memory.  Levesque adds 5 actions (left, right, mark, erase, read_mark) that can be used to expand the plans expressible by his robot language to include (he claims) everything that is computable.  That is, his planning language with these additional actions would force a planner to construct a Turing Machine that achieves the given goal.  Of course, that problem is undecidable.  

<br><br>A two sentence summary.  Levesque introduces a plan description language that includes branching and loops (with an extension that he claims makes the language Turing complete), for the simple reason that solving some real world planning problems requires sensing and looping.  He formalizes the planning problem as one of deduction, which has the benefit that deductive solutions will always be right but has the drawback that it eliminates plans that we might expect a machine to produce, e.g. room reservation.


")    (paper.topic       levesque96 planningwithsensingactions)    (paper.instance    levesque97)    (paper.author      levesque97 hectorjlevesque)    (paper.title       levesque97 "Golog: A Logic Programming Language for Dynamic Domains")    (paper.url         levesque97 "http://citeseer.ist.psu.edu/27198.html")    (paper.year        levesque97 1997)    (paper.description levesque97 "
Golog does macro-replacement into situation calculus from nondeterministic parameter choice, nondeterministic action choice, nondeterministic iteration, test actions, and procedures.  This macro-replacement means answer extraction cannot be used to extract a complex plan using the above constructs.  Instead, given a complex plan, the Golog interpreter produces an equivalent situation calculus plan(I think--still fuzzy here).
")    (paper.topic       levesque97 logicprogramming)    (paper.instance    levesque98)    (paper.author      levesque98 hectorjlevesque)    (paper.author      levesque98 fiorapirri)    (paper.author      levesque98 rayreiter)    (paper.title       levesque98 "Foundations for the Situation Calculus")    (paper.publication levesque98 eacis)    (paper.volume      levesque98 3)    (paper.url         levesque98 "http://citeseer.ist.psu.edu/levesque98foundations.html")    (paper.year        levesque98 1998)    (paper.rank        levesque98 3)    (paper.description levesque98 "This is a rehash of Pirri99, except they add in a section describing sensing and knowledge in Situation Calculus.  They extend
their definition of a basic action theory to include knowledge-producing
actions.  Namely, a knowledge-action theory D_e = Sigma_e U D_ss U D_ap U D_una
U D_S0 U D_sf U D_k0.  Sigma_e is an expanded set of foundational axioms; D_ss
are the successor state axioms; D_ap are the action precondition axioms;
D_una are the unique name axioms for actions; D_s0 is the initial situation;
D_k0 is an initial knowldge axiom (what the agent knows in S0).  This stuff
gets pretty messy, but eventually they provide a solution to the knowledge
frame problem, i.e. a complete specification of how knowledge changes as the
result of performing any action.
")    (paper.topic       levesque98 fundamentals)    (paper.instance    li2002)    (paper.bibtex      li2002 inproceedings)    (paper.author      li2002 ninghui.li)    (paper.author      li2002 john.c.mitchell)    (paper.author      li2002 william.h.winsborough)    (paper.title       li2002 "Design of a Role-based Trust-management Framework")    (paper.publication li2002 ieeesap)    (paper.url         li2002 "http://citeseer.ist.psu.edu/533810.html")    (paper.year        li2002 2002)    (paper.rank        li2002 5)    (paper.description li2002 "The authors introduce an extension to previous work: a framework of trust-management languages for representing policies and credentials in a distributed system.  Handles principals, roles, localized authority for roles, parameterized roles, role ontologies, logical objects, threshold and separation-of-duty policies, and the delegation of role activation.  Implementation by conversion into datalog.  Well-written.")    (paper.topic       li2002 trustmanagement)    (paper.instance    li2003)    (paper.bibtex      li2003 inproceedings)    (paper.author      li2003 ninghui.li)    (paper.author      li2003 john.c.mitchell)    (paper.title       li2003 "Datalog with Constraints: A Foundation for Trust Management Languages")    (paper.publication li2003 padl)    (paper.url         li2003 "http://citeseer.ist.psu.edu/li03datalog.html")    (paper.year        li2003 "2003")    (paper.rank        li2003 4)    (paper.description li2003 "The authors argue for Datalog with constraints as a foundation for trust management.  Datalog with constraints differs from traditional datalog in that in addition to predicates defined within the datalog program, there are predicates with a semantics fixed from outside the logic.  The algorithm for processing datalog with constraints amalgamates constraints as it goes; an inconsistent set of constraints requires backtracking in a top-down implementation.  The authors may have introduced a very general class of datalog with constraints for the first time here, but that is unclear.  Next the authors give sufficient conditions for classes of constraints that are tractable, i.e. any datalog program using constraints just from the class can be evaluated in time polynomial in the size of the program.  (This is confusing since traditional datalog isn't always polynomial in the size of the program because of recursion, unless I'm mistaken.)  At any rate, unary, linearly decomposable constraints are better behaved than others.  The definition of linearly decomposable escapes me, however.  It is shown that not all unary constraints are linearly decomposable.  The authors go on to show how some of their previous work (RT) can be expressed in datalog with constraints using linearly decomposable constraints, and do some analysis of KeyNote, a TM system that deals with delegation.")    (paper.topic       li2003 trustmanagement)    (paper.related     li2003 li2002)    (paper.instance    lifschitz2002)    (paper.bibtex      lifschitz2002 article)    (paper.author      lifschitz2002 vladimirlifschitz)    (paper.title       lifschitz2002 "Answer set programming and plan generation")    (paper.publication lifschitz2002 artificialintelligence)    (paper.volume      lifschitz2002 138)    (paper.number      lifschitz2002 1-2)    (paper.startpage   lifschitz2002 39)    (paper.endpage     lifschitz2002 54)    (paper.url         lifschitz2002 "http://citeseer.ist.psu.edu/301403.html")    (paper.year        lifschitz2002 2002)    (paper.description lifschitz2002 "
Answer set programming paper by Lifschitz.
")    (paper.topic       lifschitz2002 logicprogramming)    (paper.instance    lifschitz85)    (paper.bibtex      lifschitz85 article)    (paper.author      lifschitz85 vladimirlifschitz)    (paper.title       lifschitz85 "Closed World Databases and Circumscription")    (paper.publication lifschitz85 artificialintelligence)    (paper.volume      lifschitz85 27)    (paper.number      lifschitz85 2)    (paper.startpage   lifschitz85 229)    (paper.endpage     lifschitz85 235)    (paper.year        lifschitz85 1985)    (paper.description lifschitz85 "
Lifschitz proves the following theorem.  If CWA is consistent,
then CWA and Circumscription produce 
equivalent theories when applied to universal, closed sentences in a
function-free, equality-free vocabulary with finitely many relation and
object constants whenever the domain closure assumption and unique
names assumption are in play.
")    (paper.topic       lifschitz85 non-monotonicreasoning)    (paper.instance    lifschitz87)    (paper.author      lifschitz87 vladimirlifschitz)    (paper.title       lifschitz87 "On the semantics of STRIPS")    (paper.publication lifschitz87 reasoningaboutactionsandplans)    (paper.startpage   lifschitz87 1)    (paper.endpage     lifschitz87 9)    (paper.url         lifschitz87 "http://www.cs.utexas.edu/users/vl/papers-old.html")    (paper.year        lifschitz87 1987)    (paper.description lifschitz87 "
Lifschitz gives semantics to Fike's and Nilsson's STRIPS.  He gives one definition of a STRIPS system's soundness that relies on atomic sentences for both the add and delete lists (effectively).  All non-atomic sentences must be true in all worlds.  The preconditions can still be full FOL.  Lifschitz goes on to explain how to deal with peculiarities to improve efficiency, e.g. only including nextTo(a,b) when nextTo(x,y) is symmetric.
")    (paper.topic       lifschitz87 historical)    (paper.instance    lifschitz96)    (paper.bibtex      lifschitz96 chapter)    (paper.author      lifschitz96 vladimirlifschitz)    (paper.title       lifschitz96 "Foundations of Logic Programming")    (paper.publication lifschitz96 kr)    (paper.startpage   lifschitz96 69)    (paper.endpage     lifschitz96 127)    (paper.url         lifschitz96 "http://citeseer.ist.psu.edu/lifschitz96foundations.html")    (paper.year        lifschitz96 1996)    (paper.description lifschitz96 "
Survey of logic programming theory.
")    (paper.topic       lifschitz96 logicprogramming)    (paper.instance    lin94)    (paper.author      lin94 fangzhenlin)    (paper.author      lin94 rayreiter)    (paper.title       lin94 "How to Progress a Database (and Why) I. Logical Foundations")    (paper.publication lin94 kr)    (paper.startpage   lin94 425)    (paper.endpage     lin94 436)    (paper.url         lin94 "http://citeseer.ist.psu.edu/11152.html")    (paper.year        lin94 1994)    (paper.rank        lin94 4)    (paper.description lin94 "
Lin and Reiter argue that STRIPS (planning) can be thought of as progressing an initial database S0 with an action sequence A to a final database SA.  They prove the general problem cannot be solved using only FOL, but in fact properly needs induction.  The special cases of 'relatively complete' initial databases and 'context-free' action theories (with certain restrictions on the initial database) yield first-order theories.
")    (paper.topic       lin94 theoriesofaction)    (paper.instance    lin95a)    (paper.author      lin95a fangzhenlin)    (paper.author      lin95a rayreiter)    (paper.title       lin95a "How to Progress a Database II: The STRIPS Connection")    (paper.publication lin95a ijcai)    (paper.startpage   lin95a 2001)    (paper.endpage     lin95a 2009)    (paper.url         lin95a "http://citeseer.ist.psu.edu/lin94how.html")    (paper.year        lin95a 1995)    (paper.rank        lin95a 1)    (paper.description lin95a "
Lin and Reiter build on the first part of this paper and give certain varieties of STRIPS semantics based on progressing a database.  
")    (paper.topic       lin95a theoriesofaction)    (paper.related     lin95a lin94)    (paper.instance    lin95b)    (paper.author      lin95b fangzhenlin)    (paper.author      lin95b yoavshoham)    (paper.title       lin95b "Provably Correct Theories of Action")    (paper.publication lin95b jacm)    (paper.volume      lin95b 42)    (paper.number      lin95b 2)    (paper.startpage   lin95b 293)    (paper.endpage     lin95b 320)    (paper.url         lin95b "http://citeseer.ist.psu.edu/lin91provably.html")    (paper.year        lin95b 1995)    (paper.rank        lin95b 4)    (paper.description lin95b "
Lin and Shoham give a formal definition for epistemologically complete theories of action.  They explain monotonic and nonmonotonic completions of action theories; the former requires frame axioms and the latter circumscription.   They go on to extend situation calculus to handle concurrent actions by bundling primitive actions together into 'global actions'.  They extend their definition for epistemological completeness to encompass this variation of sitcalc.
")    (paper.topic       lin95b theoriesofaction)    (paper.instance    lincoln92)    (paper.bibtex      lincoln92 inproceedings)    (paper.author      lincoln92 patrick.lincoln)    (paper.title       lincoln92 "Introduction to Linear Logic")    (paper.publication lincoln92 sigact)    (paper.url         lincoln92 "http://www.csl.sri.com/users/lincoln/lincoln-papers.html")    (paper.year        lincoln92 1992)    (paper.rank        lincoln92 3)    (paper.description lincoln92 "Concise overview of linear logic.")    (paper.topic       lincoln92 authorizationlogic)    (paper.instance    lloyd)    (paper.bibtex      lloyd book)    (paper.author      lloyd johnlloyd)    (paper.title       lloyd "Foundations of Logic Programming")    (paper.publisher   lloyd springerverlag)    (paper.url         lloyd "http://www.amazon.com/Foundations-Logic-Programming-Symbolic-Computation/dp/0387181997")    (paper.year        lloyd 1984)    (paper.rank        lloyd 5)    (paper.description lloyd "
Lloyd covers the declarative and procedural semantics of logic programming without
negation and then considers the case of an acyclic logic program with negation,
and proves soundness and completeness via predicate completion.  The classic text.
")    (paper.instance    lloyd84)    (paper.bibtex      lloyd84 article)    (paper.author      lloyd84 jlloyd)    (paper.author      lloyd84 rtopor)    (paper.title       lloyd84 "Making {P}rolog more expressive")    (paper.publication lloyd84 jlp)    (paper.volume      lloyd84 1)    (paper.number      lloyd84 3)    (paper.startpage   lloyd84 225)    (paper.endpage     lloyd84 240)    (paper.year        lloyd84 1984)    (paper.description lloyd84 "
Includes the Lloyd-Topor transformation.
")    (paper.topic       lloyd84 logicprogramming)    (paper.instance    lobo)    (paper.bibtex      lobo book)    (paper.author      lobo jorgelobo)    (paper.author      lobo jackminker)    (paper.author      lobo arcotrajasekar)    (paper.title       lobo "Foundations of Disjunctive Logic Programming")    (paper.publisher   lobo mitpress)    (paper.url         lobo "http://mitpress.mit.edu/catalog/item/default.asp?ttype=2&tid=5834")    (paper.year        lobo 1992)    (paper.description lobo "
Book laying the foundations of disjunctive logic programming.
")    (paper.instance    lochner02)    (paper.bibtex      lochner02 article)    (paper.author      lochner02 berndloechner)    (paper.author      lochner02 thomashillenbr)    (paper.title       lochner02 "A phytography of Waldmeister")    (paper.publication lochner02 aicommunications)    (paper.volume      lochner02 15)    (paper.startpage   lochner02 127)    (paper.endpage     lochner02 133)    (paper.url         lochner02 "http://citeseer.ist.psu.edu/558093.html")    (paper.year        lochner02 2002)    (paper.rank        lochner02 -2)    (paper.description lochner02 "
Waldmeister is a unit equation theorem prover based on
unfailing completion.  Its architecture is the same
Discount algorithm found in Vampire and E.  Written in C,
it uses perfect discrimination trees (a variation on the trie)
to index terms.  It also includes automated tuning of 
its parameters, based on TPTP experience.
")    (paper.topic       lochner02 systemdesigns)    (paper.instance    loechner2004)    (paper.author      loechner2004 berndloechner)    (paper.title       loechner2004 "Things to know when implementing LPO")    (paper.url         loechner2004 "")    (paper.year        loechner2004 2004)    (paper.description loechner2004 "
Loechner explains that the naive implementation of Lexicographic Path
Ordering is exponential but then goes on to show how to make it
multiplicative in the size of the two terms.  
")    (paper.topic       loechner2004 orderings)    (paper.instance    lopezgarcia2004)    (paper.bibtex      lopezgarcia2004 inproceedings)    (paper.author      lopezgarcia2004 plopez-garcia)    (paper.author      lopezgarcia2004 fbueno)    (paper.author      lopezgarcia2004 mhermenegildo)    (paper.title       lopezgarcia2004 "Determinacy Analysis for Logic Programs Using Mode and Type Information")    (paper.publication lopezgarcia2004 lopstr)    (paper.startpage   lopezgarcia2004 19)    (paper.endpage     lopezgarcia2004 35)    (paper.url         lopezgarcia2004 "http://wotan.liu.edu/docis/dbl/lopstr/index.html")    (paper.year        lopezgarcia2004 2004)    (paper.description lopezgarcia2004 "
In the context of Logic programming, the authors consider two problems:
(1) detecting whether a relation will ever return more than one answer
through all control paths, i.e. whether the relation is determinate,
 and (2) determining whether more than one
rule with for a relation will ever be satisfied for
the same query, i.e. whether the rules defining that relation
are mutually exclusive.  Addressing these questions relies on type
information, i.e. all the possible queries asked for a relation, and
mode information, i.e. whether a variable is used for validation or
for generation.  For r to be determinate, it is sufficient
that every relation that is a subgoal of r be mutually exclusive.
Thus an approximation of (1) can be accomplished by computing (2).  The test
for mutual exclusion offered here will return true only when all the 
rules for a relation contain procedural attachments that can be shown
to be mutually exclusive for all the types of the relation.  Experimental
results are shown for the case where the procedural attachments are
equality/distinction/inequality.
")    (paper.topic       lopezgarcia2004 reformulation)    (paper.instance    manna86)    (paper.bibtex      manna86 techreport)    (paper.author      manna86 zoharmanna)    (paper.title       manna86 "How to Clear a Block: A Theory of Plans")    (paper.publisher   manna86 stanforduniversity)    (paper.url         manna86 "http://library.stanford.edu/depts/mathcs/mathcscoll/techreports.html")    (paper.year        manna86 1986)    (paper.description manna86 "
This is the recursive plan paper everyone cites; not surprisingly, it shows up in the context of
program synthesis.  Manna uses Deductive Tableaux to produce programs that contain conditionals
(via a special inference rule) and recursion (using a well-founded mathematical
induction axiom).  The problem with Manna's recursion lies in the need for what he calls
Generalization, i.e. automatically strengthening the stated goal.  Manna also deals
with equality by building it into the unification algorithm.
")    (paper.topic       manna86 recursiveplangeneration)    (paper.instance    manna94)    (paper.bibtex      manna94 inbook)    (paper.author      manna94 zoharmanna)    (paper.title       manna94 "STeP: the Stanford Temporal Prover")    (paper.publication manna94 tapsoft)    (paper.url         manna94 "http://citeseer.ist.psu.edu/manna94step.html")    (paper.year        manna94 1994)    (paper.rank        manna94 1)    (paper.description manna94 "
STeP is a verification system that proves first order temporal 
formulas valid in concurrent, reactive systems described in SPL.  
It combines equational and arithmetic simplification, model 
checking, interactive first-order theorem proving, and automatic
invariant generation.  The model checking is done through 
Streett automaton and behavior automaton.  The first-order
theorem proving is automated with non-clausal resolution
and paramodulation and utilizes lemmas.  The interactive
theorem proving is handled with a Gentzen-style prover:
both first-order and temporal first-order.  Propositional
temporal formulas can be automatically verified.
This paper is well-written and clear, but assumes knowledge
of temporal logic and transition systems.
")    (paper.topic       manna94 modelchecking)    (paper.instance    manthey88)    (paper.bibtex      manthey88 inproceedings)    (paper.author      manthey88 rainermanthey)    (paper.author      manthey88 francoisbry)    (paper.title       manthey88 "{SATCHMO}: A Theorem Prover Implemented in {P}rolog")    (paper.publication manthey88 cade)    (paper.startpage   manthey88 415)    (paper.endpage     manthey88 434)    (paper.year        manthey88 1988)    (paper.description manthey88 "
Tableaux-style prover implemented in Prolog, using assert and retract.
")    (paper.topic       manthey88 calculi)    (paper.instance    marrafa91)    (paper.bibtex      marrafa91 article)    (paper.author      marrafa91 palmiramarrafa)    (paper.author      marrafa91 patricksaint-dizier)    (paper.title       marrafa91 "Reversibility in a Constraint and Type based Logic Grammar")    (paper.url         marrafa91 "http://acl.ldc.upenn.edu/W/W91/W91-0102.pdf")    (paper.year        marrafa91 1991)    (paper.rank        marrafa91 3)    (paper.description marrafa91 "
In the topic of reversible grammars.
Marrafa and Saint-Dizier introduce a mathematical language for 
describing natural languages.  The mathematical language includes certain
object-oriented concepts. In addition, abstract machines for parsing and
generating languages so described are given.
")    (paper.topic       marrafa91 naturallanguageprocessing)    (paper.instance    masters2003)    (paper.bibtex      masters2003 inproceedings)    (paper.author      masters2003 jamesmasters)    (paper.author      masters2003 zelaigungordu)    (paper.title       masters2003 "Semantic Knowledge Source Integration: A Progress Report")    (paper.publication masters2003 kimas)    (paper.year        masters2003 2003)    (paper.rank        masters2003 -2)    (paper.description masters2003 "
Paper on using a database to speed up theorem proving.  Here they want togive a TP access to the information contained in several databases.
")    (paper.topic       masters2003 theoremprovingwithattachments)    (paper.instance    matzinger97)    (paper.bibtex      matzinger97 techreport)    (paper.author      matzinger97 robertmatzinger)    (paper.title       matzinger97 "Comparing Computational Representations of Herbrand Models")    (paper.url         matzinger97 "http://www.kr.tuwien.ac.at/guests/matzi/publications.html")    (paper.year        matzinger97 1997)    (paper.rank        matzinger97 5)    (paper.description matzinger97 "
Matzinger investigates various representations of models and
answers three complexity questions for each representation:
ground atom entailment, clause entailment, model equivalence.
The two representations of finite models examined are
context-free grammers and atom representations.  Both CFGs
and ground atoms plus ground equations are equivalent
to finite models, i.e. both representations have an associated
finite model and every finite model has a submodel that
is equivalent to both representations.
Different subsets of all infinite models can be represented by 
term schematizations and constrained atoms.  They seem to be
incomparable.  This paper is pretty dense, but also very important.
")    (paper.topic       matzinger97 model-basedreasoning)    (paper.instance    mccarthy59)    (paper.author      mccarthy59 johnmccarthy)    (paper.title       mccarthy59 "Programs with Common Sense")    (paper.startpage   mccarthy59 77)    (paper.endpage     mccarthy59 81)    (paper.url         mccarthy59 "http://www-formal.stanford.edu/jmc/mcc59.html")    (paper.year        mccarthy59 1958)    (paper.rank        mccarthy59 5)    (paper.description mccarthy59 "
Most likely the first paper on logical AI, i.e. the advice taker paper.
It describes a system(the advice taker) that can be told sentences in logic
and can draw conclusions about the world from its knowledge base.
")    (paper.topic       mccarthy59 logicalknowledgerepresentation)    (paper.instance    mccarthy80)    (paper.bibtex      mccarthy80 article)    (paper.author      mccarthy80 johnmccarthy)    (paper.title       mccarthy80 "Circumscription -- a form of non-monotonic reasoning")    (paper.publication mccarthy80 artificialintelligence)    (paper.volume      mccarthy80 13)    (paper.startpage   mccarthy80 27)    (paper.endpage     mccarthy80 39)    (paper.year        mccarthy80 1988)    (paper.description mccarthy80 "
Circumscription.
")    (paper.topic       mccarthy80 non-monotonicreasoning)    (paper.instance    mccarthy82)    (paper.bibtex      mccarthy82 techreport)    (paper.author      mccarthy82 johnmccarthy)    (paper.title       mccarthy82 "Coloring Maps and the {K}owalski Doctrine")    (paper.publisher   mccarthy82 stanforduniversity)    (paper.year        mccarthy82 1982)    (paper.description mccarthy82 "
Paper that analyzes various formulations of the map coloring problem
written in Prolog.  Looks at various reorderings of subgoals.
")    (paper.topic       mccarthy82 logicprogramming)    (paper.instance    mcchay69)    (paper.bibtex      mcchay69 inbook)    (paper.author      mcchay69 johnmccarthy)    (paper.author      mcchay69 patrickjhayes)    (paper.title       mcchay69 "Some Philosophical Problems from the Standpoint of Artificial Intelligence")    (paper.booktitle   mcchay69 "Machine Intelligence 4")    (paper.startpage   mcchay69 463)    (paper.endpage     mcchay69 502)    (paper.url         mcchay69 "http://www-formal.stanford.edu/jmc/mcchay69.html")    (paper.year        mcchay69 1969)    (paper.description mcchay69 "
The basic situation calculus paper.  McCarthy and Hayes consider not only the classic planning environment (fully-observable), but also a partially-observable one, introducing what are now referred to as 'sensing actions'.  They attempt a self-proclaimed ad-hoc approach to handling these sensing actions.  They also point out the frame problem, alluding to a state vector as a possible solution.  The qualification problem (though they don't name it that) shows up here, along with the introduction of the modal operators consistent(phi), probably(phi), and normally(phi) as a tentative solution avenue.  Finally, McCarthy and Hayes look into embedding Modal Logic, Logic of Knowledge (Hintikka), Tense Logics, and a couple of others into situation calculus.
")    (paper.topic       mcchay69 historical)    (paper.instance    mccune2001)    (paper.bibtex      mccune2001 misc)    (paper.author      mccune2001 williammccune)    (paper.title       mccune2001 "{MACE} 2.0 Reference Manual and Guide")    (paper.url         mccune2001 "http://citeseer.ist.psu.edu/464179.html")    (paper.year        mccune2001 2001)    (paper.description mccune2001 "
Manual for Mace 2.0, a finite model builder that grounds out formulas
and relies on a SAT solver.
")    (paper.topic       mccune2001 modelbuilding)    (paper.instance    mccune2003)    (paper.bibtex      mccune2003 techreport)    (paper.author      mccune2003 williammccune)    (paper.title       mccune2003 "Mace4 Reference Manual and Guide")    (paper.publisher   mccune2003 argonnenationallaboratory)    (paper.url         mccune2003 "http://www-unix.mcs.anl.gov/AR/mace4/July-2005/doc/mace4.pdf")    (paper.year        mccune2003 2003)    (paper.description mccune2003 "
The reference manual for Mace4.  Unlike its predecessors, which flattened
formulas, ground them, and used a SAT solver, Mace4 incrementally constructs
a model and after each instantiation computes the consequences of the
instantiation wrt the sentences of interest.
")    (paper.topic       mccune2003 modelbuilding)    (paper.instance    mcdonald91)    (paper.bibtex      mcdonald91 article)    (paper.author      mcdonald91 dmcdonald)    (paper.title       mcdonald91 "Reversible NLP by Deriving the Grammars from the Knowledge Base")    (paper.url         mcdonald91 "http://acl.ldc.upenn.edu/W/W91/W91-0106.pdf")    (paper.year        mcdonald91 1991)    (paper.rank        mcdonald91 3)    (paper.description mcdonald91 "
Reversible grammars.
McDonald presents an architecture for constructing a parsing grammar and
an acceptance grammar from a single knowledge base and semantic model.  Thus
the strongest techniques for both parsing and generation can be used without
losing the simplicity of maintenance derived from  using a single, 
reversible grammar.
")    (paper.topic       mcdonald91 naturallanguageprocessing)    (paper.instance    mcilraith98)    (paper.bibtex      mcilraith98 techreport)    (paper.author      mcilraith98 sheilamcilraith)    (paper.title       mcilraith98 "Logic-based Abductive Inference")    (paper.publisher   mcilraith98 stanforduniversity)    (paper.url         mcilraith98 "http://citeseer.ist.psu.edu/mcilraith98logicbased.html")    (paper.year        mcilraith98 1998)    (paper.description mcilraith98 "
McIlraith covers various ways to operationalize abduction, i.e. finding
an augmentation to a logical knowledge base such that a given query
is entailed. 
")    (paper.topic       mcilraith98 abduction)    (paper.instance    mckenzie97)    (paper.bibtex      mckenzie97 techreport)    (paper.author      mckenzie97 brucemckenzie)    (paper.title       mckenzie97 "Generating Strings at Random from a Context Free Grammar")    (paper.url         mckenzie97 "http://coscweb2.cosc.canterbury.ac.nz/research/reports/TechReps/#year1997")    (paper.year        mckenzie97 1997)    (paper.rank        mckenzie97 3)    (paper.description mckenzie97 "
McKenzie gives an algorithm for generating strings of length n from a CFG 
so that all strings of length n are equally likely.  The preprocessing
portion of the algorithm requires O(n^2) time and O(n^2) space.  The
generation portion requires O(n) time and space.
")    (paper.topic       mckenzie97 contextfreegrammars)    (paper.instance    meng20067)    (paper.author      meng20067 jiameng)    (paper.author      meng20067 lcpaulson)    (paper.title       meng20067 "Lightweight Relevance Filtering for Machine-Generated Resolution Problems")    (paper.publication meng20067 escorempiricallysuccessfulcomputerizedreasoning)    (paper.url         meng20067 "http://www.cl.cam.ac.uk/~lp15/papers/frameset.html")    (paper.year        meng20067 2006)    (paper.description meng20067 "
The authors argue for the case that large axiom sets are the norm when
an entailment query is constructed by a machine; moreover, it is often the
case that only a small fraction of those axioms are relevant to the query
at hand, and thus determining which clauses are relevant is a good first
step toward solving the problem.  The criteria for relevance they use
is based on the presence of function symbols in the clauses.
")    (paper.topic       meng20067 transformations)    (paper.instance    merz2001)    (paper.bibtex      merz2001 inbook)    (paper.author      merz2001 stephanmerz)    (paper.title       merz2001 "Model Checking: A Tutorial Overview")    (paper.publisher   merz2001 springerverlag)    (paper.booktitle   merz2001 "Modeling and Verification of Parallel Processes")    (paper.volume      merz2001 2067)    (paper.startpage   merz2001 3)    (paper.endpage     merz2001 38)    (paper.url         merz2001 "http://www.loria.fr/~merz/papers/mc-tutorial.html")    (paper.year        merz2001 2001)    (paper.rank        merz2001 4)    (paper.description merz2001 "
The model checking problem is to determine if a sentence s is entailed
by a model M.  It is mainly used to analyze reactive systems, i.e. systems
that continually interact with their environment.  These systems are usually
modelled with a Kripke structure or an omega(Buchi)-Automaton.  The sentence s 
is usually written in Propositional Temporal Logic (PTL) (which allows only
universal statements), Computation Tree Logic (CTL) (which allows 
universal and existential statements), CTL*, or propositional mu-calculus.
PTL and CTL are not comparable (neither is more expressive than the other).
CTL* is strictly more expressive than CTL and PTL, and propositional
mu-calculus subsumes CTL*.  Model checking algorithms can either be local
(PTL), global (CTL), or symbolic.  Symbolic formulas can be represented
with ordered binary decision diagrams.
")    (paper.topic       merz2001 modelchecking)    (paper.instance    miller94)    (paper.author      miller94 robmiller)    (paper.author      miller94 murayshanahan)    (paper.title       miller94 "Narratives in the Situation Calculus")    (paper.volume      miller94 4)    (paper.number      miller94 5)    (paper.startpage   miller94 513)    (paper.endpage     miller94 530)    (paper.url         miller94 "http://citeseer.ist.psu.edu/miller94narratives.html")    (paper.year        miller94 1994)    (paper.rank        miller94 1)    (paper.description miller94 "
Miller and Shanahan take a first crack at embedding narratives in the Situation calculus.  They use a new sort for times, define Happens(action, time), and define Duration(action).  Using these, they can represent narratives, noninstantaneous actions, and overlapping actions.   Miller and Shanahan rely heavily on circumscription.  
")    (paper.topic       miller94 behavioralgoals)    (paper.instance    mittal90)    (paper.bibtex      mittal90 article)    (paper.author      mittal90 sanjaymittal)    (paper.author      mittal90 brianfalkenhainer)    (paper.title       mittal90 "Dynamic Constraint Satisfaction Problems ")    (paper.publication mittal90 aaai)    (paper.startpage   mittal90 25)    (paper.endpage     mittal90 32)    (paper.year        mittal90 1990)    (paper.rank        mittal90 4)    (paper.description mittal90 "
Mittal and Falkenhainer describe a version of CSPs where the 
number of variables is partially determined by the values of other
variables.  To accomplish this they provide a constraint language that
can express conditions under which variables must be assigned values
and conditions under which variables need not be assigned values.  For 
every variable vi there is a propositional constant active:vi.  If 
active:vi must hold given the values of other variables, vi must
be assigned a value.  If ~active:vi must hold, vi need not be assigned
a value.  It is unclear what happens if neither active:vi nor ~active:vi 
holds.  They use an assumption-based truth maintenance system to build
a Dynamic CSP solver. 
")    (paper.topic       mittal90 variousformsofconstraintsatisfaction)    (paper.instance    moore77)    (paper.author      moore77 robertcmoore)    (paper.title       moore77 "Reasoning about knowledge and action")    (paper.publication moore77 ijcai)    (paper.startpage   moore77 223)    (paper.endpage     moore77 227)    (paper.year        moore77 1977)    (paper.description moore77 "
Moore contributes the following formalization (after a little tweaking):
1. T(p, s): p is true in world s.
2. K(Agent, s, s'): Given what Agent knows in s, s' would be another possible world.
3. As,a,p.(True(Know(a, p), s) =def= As'.(K(a, s, s') => T(p, s')): an agent knows the facts that are true in every world that is possible according to what he knows.
")    (paper.topic       moore77 planningwithsensingactions)    (paper.instance    moore82)    (paper.bibtex      moore82 article)    (paper.author      moore82 robertcmoore)    (paper.title       moore82 "The Role of Logic in Knowledge Representation and Commonsense Reasoning")    (paper.publication moore82 aaai)    (paper.url         moore82 "")    (paper.year        moore82 1982)    (paper.rank        moore82 2)    (paper.description moore82 "
Moore tries to convince AI researchers that logic can be a useful method for reasoning and not just the analysis of systems.  He points out that some of the early experiments that supposedly showed logical reasoning too inefficient only showed that a particular method of inference and control were too inefficient to be used for every reasoning task.
")    (paper.topic       moore82 logicalknowledgerepresentation)    (paper.instance    morris69)    (paper.bibtex      morris69 inproceedings)    (paper.author      morris69 jamesbmorris)    (paper.title       morris69 "E-Resolution: Extension of Resolution to Include the Equality Relation")    (paper.publication morris69 ijcai)    (paper.startpage   morris69 287)    (paper.endpage     morris69 294)    (paper.year        morris69 1969)    (paper.rank        morris69 -2)    (paper.description morris69 "
Paper on implementation of resolution that handles equality with E-interpretations.
")    (paper.topic       morris69 theoremproving)    (paper.instance    moses96)    (paper.bibtex      moses96 article)    (paper.author      moses96 yorammoses)    (paper.author      moses96 moshetennenholtz)    (paper.title       moses96 "Off-line reasoning for on-line efficiency: knowledge bases")    (paper.publication moses96 artificialintelligence)    (paper.volume      moses96 83)    (paper.number      moses96 2)    (paper.startpage   moses96 229)    (paper.endpage     moses96 239)    (paper.url         moses96 "http://citeseer.ist.psu.edu/moses96offline.html")    (paper.year        moses96 1996)    (paper.rank        moses96 3)    (paper.description moses96 "
Moses and Tennenholtz give conditions under which compiling a KB is
worthwhile.  The results given focus almost entirely on propositional
logic.  If a KB has a basis under which all queries
can be computed via conjunctions of the basis, compilation is a good
idea if the basis can be computed in polynomial time.  The process
of compilation essentially stores all the elements of the basis
in a binary tree.  Thus, any query can be answered in (log n)*|query|.
")    (paper.topic       moses96 knowledgebasecompilation)    (paper.instance    moskewicz2001)    (paper.bibtex      moskewicz2001 article)    (paper.author      moskewicz2001 matthewmoskewicz)    (paper.author      moskewicz2001 conormadigan)    (paper.author      moskewicz2001 yingzhao)    (paper.author      moskewicz2001 lintaozhang)    (paper.author      moskewicz2001 sharadmalik)    (paper.title       moskewicz2001 "Chaff: Engineering an Efficient SAT Solver")    (paper.publication moskewicz2001 designautomationconference)    (paper.url         moskewicz2001 "http://citeseer.csail.mit.edu/moskewicz01chaff.html")    (paper.year        moskewicz2001 2001)    (paper.description moskewicz2001 "
The authors give an overview of DPLL and how it is implemented in Chaff.
Nice read.
")    (paper.topic       moskewicz2001 solvers)    (paper.instance    motik2007bridging)    (paper.bibtex      motik2007bridging inproceedings)    (paper.author      motik2007bridging borismotik)    (paper.author      motik2007bridging ianhorrocks)    (paper.author      motik2007bridging ulrikesattler)    (paper.title       motik2007bridging "Bridging the Gap Between OWL and Relational Databases")    (paper.publication motik2007bridging www)    (paper.url         motik2007bridging "")    (paper.year        motik2007bridging 2007)    (paper.description motik2007bridging "
The paper attempts to implement integrity constraints as defined in the 
database literature into OWL.
")    (paper.topic       motik2007bridging semanticweb)    (paper.instance    motik2007faithful)    (paper.bibtex      motik2007faithful inproceedings)    (paper.author      motik2007faithful borismotik)    (paper.author      motik2007faithful riccardorosati)    (paper.title       motik2007faithful "A Faithful Integration of Description Logics with Logic Programming")    (paper.publication motik2007faithful ijcai)    (paper.url         motik2007faithful "")    (paper.year        motik2007faithful 2007)    (paper.description motik2007faithful "
The paper introduces hybrid MKNF knowledge bases, a formalism that integrates
logic programming and description logics, which reduces to LP semantics
when the DL portion is empty and to DL semantics when the LP portion is empty.
Also gives complexity results for certain classes of the logic.
")    (paper.topic       motik2007faithful semanticweb)    (paper.instance    motta91)    (paper.bibtex      motta91 techreport)    (paper.author      motta91 enricomotta)    (paper.author      motta91 arthurstutt)    (paper.title       motta91 "An Architecture for the Integration of Heterogenous Inference Systems")    (paper.publisher   motta91 openuniversity)    (paper.url         motta91 "http://citeseer.ist.psu.edu/motta91architecture.html")    (paper.year        motta91 1991)    (paper.rank        motta91 1)    (paper.description motta91 "
The authors describe an architecture for integrating specialized reasoners
where each reasoner is known to handle a particular vocabulary.
")    (paper.topic       motta91 architectures)    (paper.instance    muhammed2006)    (paper.bibtex      muhammed2006 inproceedings)    (paper.author      muhammed2006 rmuhammed)    (paper.author      muhammed2006 pjstuckey)    (paper.title       muhammed2006 "A stochastic Non-{CNF} {SAT} Solver")    (paper.publication muhammed2006 pricai)    (paper.startpage   muhammed2006 120)    (paper.endpage     muhammed2006 129)    (paper.url         muhammed2006 "http://www.cs.mu.oz.au/~pjs/papers.html")    (paper.year        muhammed2006 2006)    (paper.description muhammed2006 "
Paper on a stochastic SAT solver whose input is allowed to be 
in something other than CNF.
")    (paper.topic       muhammed2006 satsolving)    (paper.instance    myers90)    (paper.bibtex      myers90 inproceedings)    (paper.author      myers90 karenmyers)    (paper.title       myers90 "Automatically Generating Universal Attachments through Compilation")    (paper.publication myers90 aaai)    (paper.url         myers90 "http://www.ai.sri.com/~myers/")    (paper.year        myers90 1990)    (paper.rank        myers90 2)    (paper.description myers90 "
Myers describes a method for generating new universal attachments.
")    (paper.topic       myers90 theoremprovingwithattachments)    (paper.instance    myers90t)    (paper.bibtex      myers90t phdthesis)    (paper.author      myers90t karenmyers)    (paper.title       myers90t "Universal Attachments: A Logical Framework for Hybrid Reasoning")    (paper.publisher   myers90t stanforduniversity)    (paper.url         myers90t "http://library.stanford.edu/depts/mathcs/mathcscoll/techreports.html")    (paper.year        myers90t 1990)    (paper.rank        myers90t 3)    (paper.description myers90t "
")    (paper.topic       myers90t theoremprovingwithattachments)    (paper.instance    nareyek99)    (paper.bibtex      nareyek99 article)    (paper.author      nareyek99 alexandernareyek)    (paper.title       nareyek99 "Structural Constraint Satisfaction")    (paper.publication nareyek99 aaai-configurations)    (paper.startpage   nareyek99 76)    (paper.endpage     nareyek99 82)    (paper.url         nareyek99 "http://citeseer.ist.psu.edu/nareyek99structural.html")    (paper.year        nareyek99 1999)    (paper.rank        nareyek99 3)    (paper.description nareyek99 "
It is a little hard to follow what's happening here.  Nareyek seems
to be introducing generalization of CSPs where in addition to constraints
on tuples of variables, there are constraints on the structure of those
constraints.  These meta constraints are implemented via Graph Grammars.
Narayek states that solving these problems is undecidable, but gives
no proof.
")    (paper.topic       nareyek99 variousformsofconstraintsatisfaction)    (paper.instance    nayak95)    (paper.bibtex      nayak95 proceedings)    (paper.author      nayak95 pnayak)    (paper.author      nayak95 alonlevy)    (paper.title       nayak95 "A Semantic Theory of Abstractions")    (paper.publication nayak95 ijcai)    (paper.url         nayak95 "http://citeseer.ist.psu.edu/nayak94semantic.html")    (paper.year        nayak95 1995)    (paper.rank        nayak95 3)    (paper.description nayak95 "
Nayak and Levy explain a new approach to producing abstractions of
axioms.  Instead of simply mapping axioms to axioms as is done in
previous work, first abstract the axioms to an intended domain
model, and then find sentences that capture that model.  The
theoretical component of this paper, which accounts for the
majority of it, is very clean.  It gives model-theoretic
explainations for good (allowing no 'false proofs') and bad
(allowing 'false proofs') abstractions.
")    (paper.topic       nayak95 abstraction)    (paper.instance    nelson79)    (paper.bibtex      nelson79 inproceedings)    (paper.author      nelson79 gregnelson)    (paper.author      nelson79 derekoppen)    (paper.title       nelson79 "Simplification by Cooperating Decision Procedures")    (paper.publication nelson79 toplas)    (paper.volume      nelson79 1)    (paper.number      nelson79 2)    (paper.startpage   nelson79 245)    (paper.endpage     nelson79 257)    (paper.url         nelson79 "")    (paper.year        nelson79 1979)    (paper.rank        nelson79 4)    (paper.description nelson79 "
Nelson and Oppen describe a method for combining decision procedures
for disjoint equational theories.
To determine the satisfiability of a set of quantifier-free formulas,
partition based on the theory to which the vocabulary belongs.  If 
a term from one theory is embedded in a relation from another theory,
introduce a new variable, replace the term with that variable, and include
the sentence where that variable is set to the term in the appropriate
partition.  If any of the partitions are unsatisfiable, the entire thing
is unsatisfiable.  Otherwise, compute all the strongest equality theorems
including only variables for each of the partitions and pass to all the 
other partitions.  If the theory is nonconvex, case analysis is
necessary.
Check for unsatisfiability and repeat.  Nelson and Oppen prove correctness
and termination.
")    (paper.topic       nelson79 nelson-oppenandshostak)    (paper.instance    newell63)    (paper.bibtex      newell63 inbook)    (paper.author      newell63 allennewell)    (paper.author      newell63 hasimon)    (paper.title       newell63 "GPS, A Program that Simulates Human Thought")    (paper.booktitle   newell63 "Computers and Thought")    (paper.startpage   newell63 279)    (paper.endpage     newell63 293)    (paper.year        newell63 1963)    (paper.description newell63 "
Description of probably the first planner. Newell et. al. compare an inexperienced student doing a logic proof to how GPS solves the same problem.  GPS takes a goal and can perform any of four operations: transform object A into object B (unification?), reduce the difference D between object A and object B (satisfaction of a subgoal of A?), and apply operator Q to object A (reduction of A to subgoals?).
")    (paper.topic       newell63 historical)    (paper.instance    nieuwenhuis2003)    (paper.author      nieuwenhuis2003 robertnieuwenhuis)    (paper.author      nieuwenhuis2003 thomashillenbr)    (paper.author      nieuwenhuis2003 alexandreriazanov)    (paper.author      nieuwenhuis2003 andreivoronkov)    (paper.title       nieuwenhuis2003 "On the Evaluation of Indexing Techniques for Theorem Proving")    (paper.url         nieuwenhuis2003 "http://citeseer.ist.psu.edu/nieuwenhuis03evaluation.html")    (paper.year        nieuwenhuis2003 2003)    (paper.description nieuwenhuis2003 "
Nieuwenhuis, et. al. describe a methodology for comparing indexing schemes.
To demonstrate it, they compare Waldmeister's discrimination trees,
Context trees, and Vampire's code trees for term indexing.  The scenario tested
involved both additions and deletions from the index and queries where
only one answer need be reported (e.g. for forward subsumption).  They
reported both space and time results.
")    (paper.topic       nieuwenhuis2003 indexing)    (paper.instance    niles2001)    (paper.bibtex      niles2001 inproceedings)    (paper.author      niles2001 ianniles)    (paper.author      niles2001 adampease)    (paper.title       niles2001 "Towards a standard upper ontology")    (paper.publication niles2001 formalontologyininformationsystems)    (paper.startpage   niles2001 2)    (paper.endpage     niles2001 9)    (paper.url         niles2001 "http://portal.acm.org/citation.cfm?id=505170")    (paper.year        niles2001 2001)    (paper.description niles2001 "
Primary paper on SUMO, the Suggested Upper Merged Ontology.
")    (paper.topic       niles2001 logicalknowledgerepresentation)    (paper.instance    orman98)    (paper.bibtex      orman98 article)    (paper.author      orman98 leventorman)    (paper.title       orman98 "Differential Relational Calculus for Integrity Maintenance")    (paper.publication orman98 ieeetransactionsofknowledgeanddataengineering)    (paper.volume      orman98 10)    (paper.number      orman98 2)    (paper.startpage   orman98 328)    (paper.endpage     orman98 341)    (paper.url         orman98 "http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=683760&isnumber=15039")    (paper.year        orman98 1998)    (paper.rank        orman98 4)    (paper.description orman98 "
Orman defines differential relational calculus.  Given a 
database constraint V such that V is true if and only if there is an integrity
constraint violation and a transaction T, what are the necessary and
sufficient conditions for computing whether there is would be an integrity
violation after execution T, assuming there was no violation to start with?
")    (paper.topic       orman98 databases)    (paper.instance    owre96)    (paper.bibtex      owre96 inproceedings)    (paper.author      owre96 sowre)    (paper.title       owre96 "PVS: Combining Specification, Proof Checking, and Model Checking")    (paper.publication owre96 computeraidedverification)    (paper.startpage   owre96 411)    (paper.endpage     owre96 414)    (paper.url         owre96 "http://citeseer.ist.psu.edu/246180.html")    (paper.year        owre96 1996)    (paper.rank        owre96 1)    (paper.description owre96 "
PVS (Prototype Verification System) allows a user to construct a
machine-verified proof.  It combines interactive theorem
proving, typechecking, a set of decision procedures including
a model checker, and strategies to avoid tedious proof step 
repetitions for the user.   The strategies can be extended
if necessary.
")    (paper.topic       owre96 modelchecking)    (paper.instance    paltrinieri94)    (paper.bibtex      paltrinieri94 article)    (paper.author      paltrinieri94 massimopaltrinieri)    (paper.title       paltrinieri94 "Some Remarks on the Design of Constraint Satisfaction
Problems")    (paper.publication paltrinieri94 constraints)    (paper.startpage   paltrinieri94 299)    (paper.endpage     paltrinieri94 311)    (paper.url         paltrinieri94 "http://citeseer.ist.psu.edu/paltrinieri94some.html")    (paper.year        paltrinieri94 1994)    (paper.rank        paltrinieri94 4)    (paper.description paltrinieri94 "
Paltrinieri gives a loose definition for an object-oriented constraint
satisfaction problem and goes on to show its utility for modelling
some CSPs.  His formulation of an OOCSP is no more expressive than
a standard CSP; solving an OOCSP then amounts to translating it into
a CSP.  To do this, find all the instances of objects needed to solve
the OOCSP and replicate the class constraints for each instance.
")    (paper.topic       paltrinieri94 objectorientedconstraintsatisfaction)    (paper.instance    paltrinieri95)    (paper.bibtex      paltrinieri95 article)    (paper.author      paltrinieri95 massimopaltrinieri)    (paper.title       paltrinieri95 "A Visual Environment for Constraint Programming")    (paper.publication paltrinieri95 ieeesymposiumonvisuallanguages)    (paper.startpage   paltrinieri95 118)    (paper.endpage     paltrinieri95 119)    (paper.url         paltrinieri95 "
http://citeseer.ist.psu.edu/paltrinieri95visual.html")    (paper.year        paltrinieri95 1995)    (paper.rank        paltrinieri95 4)    (paper.description paltrinieri95 "
Paltrinieri gives a 2-page description of a generalization of CSPs to
object-oriented CSPs.  He also describes a visual environment for 
dealing with OOCSPs.
")    (paper.topic       paltrinieri95 objectorientedconstraintsatisfaction)    (paper.instance    pastre78)    (paper.bibtex      pastre78 article)    (paper.author      pastre78 dpastre)    (paper.title       pastre78 "Automatic Theorem Proving in Set Theory")    (paper.publication pastre78 artificialintelligence)    (paper.volume      pastre78 10)    (paper.number      pastre78 1)    (paper.startpage   pastre78 1)    (paper.endpage     pastre78 27)    (paper.url         pastre78 "")    (paper.year        pastre78 1978)    (paper.rank        pastre78 2)    (paper.description pastre78 "
Pastre describes PROVER, a theorem prover for set theory that builds
diagrams from axioms in order to prune the search space of theorem proving.
Pastre admits the methods to be incomplete, but claims an incomplete
method may prove more theorems than a complete one in practice.
")    (paper.topic       pastre78 graphicalreasoningtechniques)    (paper.instance    peltier2000)    (paper.bibtex      peltier2000 inproceedings)    (paper.author      peltier2000 nicolaspeltier)    (paper.title       peltier2000 "Model Building with Ordered Resolution")    (paper.publication peltier2000 workshoponfirstordertheoremproving)    (paper.url         peltier2000 "http://citeseer.ist.psu.edu/peltier00model.html")    (paper.year        peltier2000 2000)    (paper.rank        peltier2000 4)    (paper.description peltier2000 "
Peltier describes two algorithms that can be used after an ordered
resolution proof has failed: (1) to extract from the resolution closure
a set of formulas that have a single Herbrand model where that model
satisfies the original clauseset and (2) to turn those formulas into
a set of clauses.  Peltier's Herbrand model is represented by a clauseset,
and since the clauseset is guaranteed to have exactly one Herbrand model,
proof by consistency can be used to check whether that model satisfies
a particular sentence; moreover, for ground literals, satisfaction is decidable
since either the literal or its negation must be consistent and the 
clauseset is satisfiable, exactly one is consistent, which ensures one
is inconsistent.  Any off-the- shelf first-order entailment algorithm will 
find an inconsistency.  The technique is based on predicate completion,
which only works when there is a strict ordering among the clauses. 
")    (paper.topic       peltier2000 modelbuilding)    (paper.instance    pereira80)    (paper.bibtex      pereira80 inproceedings)    (paper.author      pereira80 pereira)    (paper.author      pereira80 porto)    (paper.title       pereira80 "Selective Backtracking for Logic Programs")    (paper.publication pereira80 cade)    (paper.year        pereira80 1980)    (paper.description pereira80 "
One of the papers that uses the Logic Programming formulation of map coloring.
")    (paper.topic       pereira80 logicprogramming)    (paper.instance    peterson98)    (paper.bibtex      peterson98 inproceedings)    (paper.author      peterson98 brianpeterson)    (paper.author      peterson98 williamanderson)    (paper.author      peterson98 joshuaengel)    (paper.title       peterson98 "Knowledge Bus: Generating Application-focused Databases from Large Ontologies")    (paper.publication peterson98 knowledgerepresentationmeetsdatabases)    (paper.url         peterson98 "http://citeseer.ist.psu.edu/peterson98knowledge.html")    (paper.year        peterson98 1998)    (paper.description peterson98 "
The authors attempt to construct a logic program from Cyc for answering a
given set of queries.  Their transformation is lossy, and it is unclear
to what extent the logical consequences are preserved.
")    (paper.topic       peterson98 reformulation)    (paper.instance    petrie2004)    (paper.bibtex      petrie2004 article)    (paper.author      petrie2004 charlesjpetrie)    (paper.author      petrie2004 michaelrgenesereth)    (paper.author      petrie2004 hansbjornsson)    (paper.author      petrie2004 radachirkova)    (paper.author      petrie2004 martinekstrom)    (paper.author      petrie2004 hidehitogomi)    (paper.author      petrie2004 timothylhinrichs)    (paper.author      petrie2004 robhoskins)    (paper.author      petrie2004 michaelkassoff)    (paper.author      petrie2004 daishikato)    (paper.author      petrie2004 kyoheikawazoe)    (paper.author      petrie2004 jungungmin)    (paper.author      petrie2004 waqarmohsin)    (paper.title       petrie2004 "Adding AI to Web Services")    (paper.publication petrie2004 lnai)    (paper.volume      petrie2004 2926)    (paper.startpage   petrie2004 322)    (paper.endpage     petrie2004 338)    (paper.url         petrie2004 "papers/petrie2004adding.pdf")    (paper.year        petrie2004 2004)    (paper.description petrie2004 "
The FX-Agents project consisted of members of the Stanford Logic Group 
and industrial visitors from NEC and Intec Web and Genome working together 
to develop new technologies based upon the combination of Web services and 
techniques from artificial intelligence, using our experience in AI-based 
software agents. This two-year project ran from April 2001 until March 2002 
and explored the then emerging functionality of Web services. This paper is 
a result of our findings. In particular, this paper discusses the shortcomings 
of current Web service standards like WSDL and how logical AI techniques 
like declarative commands, agents, and planning can be used to address some 
of these shortcomings. The primary problems that we address are automated 
Web service discovery and composition of Web services. 
")    (paper.topic       petrie2004 references)    (paper.instance    pichler2000)    (paper.bibtex      pichler2000 article)    (paper.author      pichler2000 reinhardpichler)    (paper.title       pichler2000 "On the Complexity of Equational Problems in CNF over a Finite Domain")    (paper.url         pichler2000 "http://citeseer.ist.psu.edu/478741.html")    (paper.year        pichler2000 2000)    (paper.rank        pichler2000 2)    (paper.description pichler2000 "
Pichler shows that the complexity of satisfiability of a purely equational 
Herbrand logic sentence E*A*.M, where M is in CNF, is Sigma_2^p-complete.
")    (paper.topic       pichler2000 herbrandlogic)    (paper.instance    pinto94)    (paper.author      pinto94 javierpinto)    (paper.title       pinto94 "Temporal Reasoning in the Situation Calculus")    (paper.url         pinto94 "http://citeseer.ist.psu.edu/pinto94temporal.html")    (paper.year        pinto94 1994)    (paper.rank        pinto94 2)    (paper.description pinto94 "
Pinto's thesis extends situation calculus to cover temporal reasoning.  He includes ACTUAL PATHS (narratives), concurrent actions, and continuous time with natural events.  He goes on to compare his situation calculus with interval temporal logic, the calculus of events, and modal temporal logics.  He later reworked his approach to narratives in [pinto98], which does not call for circumscription.  Reiter published a paper on 'Natural Actions, Concurrency, and Continuous Time' [reiter96] after Pinto--should probably read that one instead.
")    (paper.topic       pinto94 behavioralgoals)    (paper.related     pinto94 reiter96)    (paper.related     pinto94 pinto98)    (paper.instance    pinto98)    (paper.author      pinto98 javierpinto)    (paper.title       pinto98 "Occurrences and Narratives as Constraints in the Branching Structure of the Situation Calculus")    (paper.publication pinto98 logcomp)    (paper.volume      pinto98 8)    (paper.number      pinto98 6)    (paper.startpage   pinto98 777)    (paper.endpage     pinto98 808)    (paper.url         pinto98 "http://citeseer.ist.psu.edu/pinto96occurrences.html")    (paper.year        pinto98 1998)    (paper.rank        pinto98 5)    (paper.description pinto98 "
Pinto tackles the problem of expressing occurrences in situation calculus.  Occurrences are sequences of events that really do happen in every hypothetical branch of the situation tree.  In deductive plan synthesis via the Green method, we want all plans returned to include all the occurrences given.  Pinto names two specific types of occurrences: narratives (a partial specification of a sequence of events known to happen) and triggers (as in the database sense).  His formulation assigns time values to situations, a second order induction axiom, along with an extension to the sitcalc ontology to define 'nonpreventable occurrences', 'conditional occurrences', and 'simple occurrences'.  He defines 'legal(s)' in terms of these 3 occurrence types to mean that a situation s includes all the mentioned occurrences and is a valid sitcalc situation.  Pinto goes on to define when one situation is preferred to another: s preferred-to s' iff s' has the same actions as s with extra actions appended to the end.  For planning, Pinto shows that instead of finding an s s.t. goal(s) is true, we can find an s s.t. goal(s) ^ legal(s) is true. 
")    (paper.topic       pinto98 behavioralgoals)    (paper.instance    pirri99)    (paper.author      pirri99 fiorapirri)    (paper.author      pirri99 rayreiter)    (paper.title       pirri99 "Some Contributions to the Metatheory of the Situation Calculus")    (paper.publication pirri99 jacm)    (paper.volume      pirri99 46)    (paper.number      pirri99 3)    (paper.startpage   pirri99 325)    (paper.endpage     pirri99 361)    (paper.url         pirri99 "http://citeseer.ist.psu.edu/pirri99some.html")    (paper.year        pirri99 1999)    (paper.rank        pirri99 4)    (paper.description pirri99 "
Pirri and Reiter formalize the theory of situation calculus and define basic
action theories as D = Sigma U D_ss U D_ap U D_una U D_s0.  Sigma are the
foundational axioms (induction, situation ordering, equality, unique names
for situations); D_ss are
successor state axioms; D_ap are action precondition axioms; D_una are unique
name axioms for actions; D_s0 are initial state axioms.  This definition
appears throughout later work on the situation calculus.  Well written.
They also define Regression (in a clearer way than reiter91--the
Frame problem...), which means rewriting a regressable formula so that the only
situations referenced are S0.  Entailment of a regressed formula requires
only knowledge
of D_s0 and D_una.  Pirri and Reiter also give conditions when induction is
not needed for entailment, as well as when other components of Sigma are
unnecessary.  They go on to show that Sigma is unnecessary for GOLOG programs.
")    (paper.topic       pirri99 fundamentals)    (paper.instance    plaisted81)    (paper.bibtex      plaisted81 article)    (paper.author      plaisted81 davidplaisted)    (paper.title       plaisted81 "Theorem Proving with Abstraction")    (paper.publication plaisted81 artificialintelligence)    (paper.volume      plaisted81 16)    (paper.number      plaisted81 1)    (paper.startpage   plaisted81 47)    (paper.endpage     plaisted81 107)    (paper.url         plaisted81 "")    (paper.year        plaisted81 1981)    (paper.description plaisted81 "
Plaisted defines the notion of an abstraction of a literal and a clause and
shows that under this definition, the union and composition of two
abstractions is another abstraction.  He also gives local conditions
under which a mapping is an abstraction, which can be practically used.
He goes on to discuss abstract resolution proofs and multi-clauses (which
admit simpler proof procedures than regular clauses).  He discusses
using more than one abstraction at a time.  Using these abstractions admits
a complete proof procedure.  Finally, he introduces a variant
of the multi-clause notion and considers a version of completeness for it.
")    (paper.topic       plaisted81 abstraction)    (paper.instance    plaisted94)    (paper.bibtex      plaisted94 inproceedings)    (paper.author      plaisted94 davidplaisted)    (paper.title       plaisted94 "The Search Efficiency of Theorem Proving Strategies: An Analytical Comparison")    (paper.publication plaisted94 cade)    (paper.startpage   plaisted94 1)    (paper.endpage     plaisted94 40)    (paper.url         plaisted94 "http://citeseer.ist.psu.edu/plaisted94search.html")    (paper.year        plaisted94 1994)    (paper.rank        plaisted94 3)    (paper.description plaisted94 "
Plaisted does a comparison of a slew of clausal, refutation 
theorem-proving strategies for
propositional Horn clauses.  He gives three measures for the search
spaces generated by each strategy: iterated duplication, case-analysis
duplication, and combination duplication, the produce of which bounds
the total size of the search space.  The first measures the longest path,
the second measures the number of paths, and the third measures the
maximum size of clauses generated in any state. 
")    (paper.topic       plaisted94 comparativeanalysis)    (paper.instance    plaisted97)    (paper.bibtex      plaisted97 inproceedings)    (paper.author      plaisted97 davidplaisted)    (paper.author      plaisted97 yunshanzhu)    (paper.title       plaisted97 "Ordered Semantic Hyper Linking")    (paper.publication plaisted97 aaai)    (paper.url         plaisted97 "http://citeseer.ist.psu.edu/218207.html")    (paper.year        plaisted97 1997)    (paper.rank        plaisted97 3)    (paper.description plaisted97 "
Ordered Semantic Hyper Linking is a proof procedure based on
model-building.  In includes a total ordering on
formulae to remove redundant interpretations.  OSHL allows the user
to give an initial interpretation to guide the search.
It propositionalizes first order theories to build its models.  
The paper claims soundness and completeness, but no proofs are
supplied (probably due to lack of space).
")    (paper.topic       plaisted97 resolutionvariants)    (paper.instance    plummer95)    (paper.bibtex      plummer95 inproceedings)    (paper.author      plummer95 davebarker-plummer)    (paper.author      plummer95 sidneybailin)    (paper.title       plummer95 "Proofs and Pictures: Proving the Diamond lemma with the GROVER Theorem Proving System")    (paper.publication plummer95 aaai-reasoningwithdiagrammaticrepresentations)    (paper.url         plummer95 "http://citeseer.ist.psu.edu/193199.html")    (paper.year        plummer95 1995)    (paper.rank        plummer95 1)    (paper.description plummer95 "
The authors describe a theorem proving system that takes a set of axioms, Delta,
a diagram, D, and a conjecture phi.  It proves Delta |= phi by 1) examining D and 
determining that D |= phi, and 2) proving Delta |= D.  The method seems to be 
ad hoc with no guarantees of soundness or completeness; however, given enough
hints, GROVER was able to prove the Diamond Lemma.
")    (paper.topic       plummer95 graphicalreasoningtechniques)    (paper.instance    prasad2005)    (paper.bibtex      prasad2005 article)    (paper.author      prasad2005 mukulprasad)    (paper.author      prasad2005 arminbiere)    (paper.author      prasad2005 aartigupta)    (paper.title       prasad2005 "A Survey of Recent Advances in {SAT}-Based Formal Verification")    (paper.publication prasad2005 softwaretoolsfortechnologytransfer)    (paper.volume      prasad2005 7)    (paper.number      prasad2005 2)    (paper.startpage   prasad2005 156)    (paper.endpage     prasad2005 173)    (paper.url         prasad2005 "http://www.cerc.utexas.edu/~jay/fv_surveys/")    (paper.year        prasad2005 2005)    (paper.description prasad2005 "
A survey paper discussing how boolean SAT solvers are being used
for formal verification.
")    (paper.topic       prasad2005 formalverification)    (paper.instance    puebla2004)    (paper.bibtex      puebla2004 inproceedings)    (paper.author      puebla2004 gpuebla)    (paper.author      puebla2004 ealbert)    (paper.author      puebla2004 mhermenegildo)    (paper.title       puebla2004 "Efficient Local Unfolding with Ancestor Stacks for Full {P}rolog")    (paper.publication puebla2004 lopstr)    (paper.startpage   puebla2004 1)    (paper.endpage     puebla2004 18)    (paper.url         puebla2004 "http://wotan.liu.edu/docis/dbl/lopstr/index.html")    (paper.year        puebla2004 2004)    (paper.description puebla2004 "
In the context of Horn prolog with built-ins, the authors address the
problem of efficiently unfolding of recursive relations.  That is,
one implementation of partial evaluation/partial deduction is to produce
a partial SLD tree and using the fringe as the body of a rule for proving
the goal.  The problem with this approach is that the recursive relations 
produce infinite SLD trees, unless the recursion is cut off.  To determine
when the recursion should be cut off, a common practice is to apply a
recursive rule only when the subgoal is smaller, according to some
ordering, e.g. well-founded, well-quasi, than all its ancestors.  To
implement that, all the ancestors of each goal have in the past 
been stored, which is expensive both in time to check and in space
to store.  This paper tackles this problem by expanding the tree in a 
variant of depth-first search so that only the current call stack need
be stored.  They also consider the case of built-in predicates.
")    (paper.topic       puebla2004 reformulation)    (paper.instance    ramachandran2005)    (paper.bibtex      ramachandran2005 inproceedings)    (paper.author      ramachandran2005 deepakramachandran)    (paper.author      ramachandran2005 eyalamir)    (paper.title       ramachandran2005 "Compact Propositional Encodings of First-Order Theories")    (paper.publication ramachandran2005 aaai)    (paper.url         ramachandran2005 "http://reason.cs.uiuc.edu/eyal/paper.html")    (paper.year        ramachandran2005 2005)    (paper.description ramachandran2005 "
The authors introduce polynomial-time algorithms for converting
first-order logic (sometimes with a DCA) into propositional logic,
where the goal is a small output size.  Relies on a certain
structure within the FOL theory.
")    (paper.topic       ramachandran2005 reformulation)    (paper.instance    rao2004)    (paper.bibtex      rao2004 article)    (paper.author      rao2004 mrkkrishnarao)    (paper.title       rao2004 "Input-Termination of Logic Programs")    (paper.publication rao2004 lopstr)    (paper.startpage   rao2004 215)    (paper.endpage     rao2004 230)    (paper.url         rao2004 "http://wotan.liu.edu/docis/dbl/lopstr/index.html")    (paper.year        rao2004 2004)    (paper.description rao2004 "
Rao defines a class of logic programs, linear bounded programs,
and show that such programs are input-terminating under Prolog's 
selection rule.  Rao also shows that all simply-moded linear bounded
programs are input-terminating.  Importantly, determining whether
a program is linearly bounded is decidable, unlike previous work
which gave necessary and sufficient conditions for a class of 
decidable programs, but checking those conditions is undecidable.  Input-
consuming derivations do not instantiate variables that only occur
in the input positions of the initial query, and input-termination is the
property that all input-consuming derivations are finite.
")    (paper.topic       rao2004 reformulation)    (paper.instance    reiter2000)    (paper.author      reiter2000 rayreiter)    (paper.title       reiter2000 "Narratives as Programs")    (paper.publication reiter2000 kr)    (paper.startpage   reiter2000 99)    (paper.endpage     reiter2000 108)    (paper.url         reiter2000 "http://citeseer.ist.psu.edu/reiter00narratives.html")    (paper.year        reiter2000 2000)    (paper.rank        reiter2000 1)    (paper.description reiter2000 "
Reiter argues that narratives (a sequence of events known to occur) are actually programs.  He uses GOLOG to represent narratives and shows that making a query Q(s) over a narrative is identical to proving a property about a program, as in program verification.  In GOLOG terms, we want to ask whether Q holds on a program v; we simply show that SitcalcAxioms |= As.(Do(v,S0,s)=>Q(s)).
")    (paper.topic       reiter2000 behavioralgoals)    (paper.instance    reiter73)    (paper.bibtex      reiter73 inproceedings)    (paper.author      reiter73 rayreiter)    (paper.title       reiter73 "A Semantically Guided Deductive System for Automatic Theorem-Proving")    (paper.publication reiter73 ijcai)    (paper.year        reiter73 1973)    (paper.rank        reiter73 2)    (paper.description reiter73 "
Reiter describes a system for natural deduction that intertwines model-
building and deduction, where each affects the other.  The system itself
is composed of 12 inference rules which manipulate both axioms and 
models.  This may have been the seminal work on using an explicit 
model to aid theorem-proving; previous work used heuristics, which
Reiter characterized as implicit semantics. 
")    (paper.topic       reiter73 model-guidedprooftechniques)    (paper.instance    reiter78)    (paper.bibtex      reiter78 inproceedings)    (paper.author      reiter78 rayreiter)    (paper.title       reiter78 "On Closed World Databases")    (paper.publication reiter78 sigmod)    (paper.year        reiter78 1978)    (paper.description reiter78 "
The closed world assumption (CWA).
")    (paper.topic       reiter78 logicalknowledgerepresentation)    (paper.instance    reiter80)    (paper.bibtex      reiter80 article)    (paper.author      reiter80 raymondreiter)    (paper.title       reiter80 "Equality and Domain Closure in First-Order Databases")    (paper.publication reiter80 jacm)    (paper.volume      reiter80 27)    (paper.number      reiter80 2)    (paper.startpage   reiter80 235)    (paper.endpage     reiter80 249)    (paper.url         reiter80 "http://portal.acm.org/citation.cfm?id=322189")    (paper.year        reiter80 1980)    (paper.rank        reiter80 2)    (paper.description reiter80 "
Reiter explores techniques for doing first-order reasoning with 
a Domain Closure Axiom
(x=a1 | x=a2 | ... | x=an).  He focuses on axiom sets for which there
are a finite number of object constants, no function constants, and when
written in prenex form include no existential quantifiers.
To do so he (1) shows that existential queries will never require
the DCA, for algorithms exploiting Herbrand's theorem, and 
(2) how to build on this fact 
to answer any kind of query by peeling away quantifiers to build an 
existential query.  The second step uses a generalization of the 
relational database division operator for universal quantifiers and a 
generalization of the projection operator for existential quantifiers. 
Next it is shown that Horn databases and positive existential queries never 
require computing disjunctive answers. 
Then conditions are given for the removal of all but the x=x equality axiom: 
E-saturation, i.e.
unique names over all the constants.  Lastly it is
shown that extending DCA to include infinitely many constants can result in
an infinite disjunction as an answer to a query.  Very thorough, as always.
")    (paper.topic       reiter80 logicalknowledgerepresentation)    (paper.instance    reiter84)    (paper.bibtex      reiter84 inbook)    (paper.author      reiter84 raymondreiter)    (paper.title       reiter84 "Towards a Logical Reconstruction of Relational Database Theory")    (paper.publisher   reiter84 springerverlag)    (paper.booktitle   reiter84 "On Conceptual Modeling")    (paper.startpage   reiter84 191)    (paper.endpage     reiter84 238)    (paper.url         reiter84 "")    (paper.year        reiter84 1984)    (paper.rank        reiter84 3)    (paper.description reiter84 "
Reiter formalizes Database theory from a logical perspective.  Databases in this view are first-order models, and integrity constraints are sentences that such a model satisfies.  A relational theory (the set of sentences entailed by a relational database) can be defined as the set of ground atoms in the DB, a completion axiom for each table ensuring that those ground atoms not in the table are false, unique-names axioms, a domain closure axiom, and equality/substitution axioms.   Proof is provided.  Next Reiter goes on to generalize this definition to handle positive disjunction, which requires altering the completion axioms.  Lastly he shows how to deal with null values by changing the DCA and the completion axioms. 
")    (paper.topic       reiter84 logicalknowledgerepresentation)    (paper.instance    reiter91)    (paper.author      reiter91 raymondreiter)    (paper.title       reiter91 "The Frame Problem in the Situation Calculus: A Simple Solution (Sometimes) and a Completeness Result for Goal Regression")    (paper.publication reiter91 artificialintelligenceandmathematicaltheoryofcomputationpapersinhonorofjohnmccarthy)    (paper.url         reiter91 "http://ftp.cs.toronto.edu/pub/cogrob/README.html")    (paper.year        reiter91 1991)    (paper.rank        reiter91 2)    (paper.description reiter91 "
Reiter describes his solution to the frame problem, namely successor state
axioms of the form
Poss(a,s)=>[R(do(a,s)) =def= r_pos(a,s) V R(s) ^ ~r_neg(a,s)].  Poss(a,s) is
the action precondition axiom; R(do(a,s)) is the fluent, r_pos(a,s) is the
positive effect axiom for R; r_neg(a,s) is the negative effect axiom for R.
This works when also given a single definition for Poss(A,s) for each action A,
unique naming axioms for actions and states.  This technique requires F+A
axioms instead of 2*A*F axioms to describe frame and effect axioms for a
domain, where F is the number of fluents and A the number of actions.
Reiter also discusses a regression operator, which does deductive plan synthesis by taking a normal situation calculus axiomitization (using successor state axioms) and rewrites it so that every fluent only mentions S0.  Under certain conditions, Reiter shows that the rewriting can be done iff Es.G(s).
")    (paper.topic       reiter91 fundamentals)    (paper.instance    reiter93)    (paper.author      reiter93 raymondreiter)    (paper.title       reiter93 "Proving Properties of States in the Situation Calculus")    (paper.publication reiter93 artificialintelligence)    (paper.volume      reiter93 64)    (paper.number      reiter93 2)    (paper.startpage   reiter93 337)    (paper.endpage     reiter93 351)    (paper.url         reiter93 "http://citeseer.ist.psu.edu/reiter93proving.html")    (paper.year        reiter93 1993)    (paper.rank        reiter93 4)    (paper.description reiter93 "
Reiter motivates the need to prove properties about states by citing the examples in the physical world (once broken, an object stays that way), planning (showing there is no plan to achieve a goal), and integrity constraints on a database.  He formulates an induction axiom sufficient for proving P(s) for all states s>=S0.  He relies on explanation closure axioms, proposed by Schubert and Haas, which are logically equivalent to frame axioms.
")    (paper.topic       reiter93 theoriesofaction)    (paper.instance    reiter95)    (paper.author      reiter95 rayreiter)    (paper.title       reiter95 "On Specifying Database Updates")    (paper.publication reiter95 jlp)    (paper.volume      reiter95 25)    (paper.number      reiter95 1)    (paper.startpage   reiter95 53)    (paper.endpage     reiter95 91)    (paper.url         reiter95 "http://citeseer.ist.psu.edu/reiter92specifying.html")    (paper.year        reiter95 1995)    (paper.rank        reiter95 1)    (paper.description reiter95 "
Reiter summarizes several previous pieces of work including proving properties of states in Situation Calculus and formalizing the querying of a database transaction.  He also compares this approach to other database query techniques.
")    (paper.topic       reiter95 hypotheticaltemporaldbqueries)    (paper.instance    reiter96)    (paper.author      reiter96 rayreiter)    (paper.title       reiter96 "Natural Actions, Concurrency and Continuous Time in the Situation Calculus")    (paper.publication reiter96 kr)    (paper.startpage   reiter96 2)    (paper.endpage     reiter96 13)    (paper.url         reiter96 "http://ftp.cs.toronto.edu/pub/cogrob/README.html")    (paper.year        reiter96 1996)    (paper.rank        reiter96 5)    (paper.description reiter96 "
Reiter gives an axiomitization for Concurrent, Temporal Situation Calculus.  He mentions any solution to the Precondition Interaction Problem (where two actions preconditions may both be satisfied yet the 2 actions are mutually exclusive) works within the given framework.  The axiomitization allows actions following the laws of physics to occur at the same time an agent is acting in the world.  Plans can consequently be produced that take these laws into account.
")    (paper.topic       reiter96 behavioralgoals)    (paper.instance    riazanov02)    (paper.bibtex      riazanov02 article)    (paper.author      riazanov02 alexandreriazanov)    (paper.author      riazanov02 andreivoronkov)    (paper.title       riazanov02 "The design and implementation of Vampire")    (paper.publication riazanov02 aicommunications)    (paper.volume      riazanov02 15)    (paper.startpage   riazanov02 91)    (paper.endpage     riazanov02 110)    (paper.url         riazanov02 "")    (paper.year        riazanov02 2002)    (paper.rank        riazanov02 -2)    (paper.description riazanov02 "
Riazanov and Voronkov describe Vampire v2.0.  They first give an overview
of the high-level functionality, then give a more detailed discussion
of the architecture based on DISCOUNT, talk about term-indexing, 
and delve into representational
issues (e.g. shared terms) along with memory management.  
")    (paper.topic       riazanov02 systemdesigns)    (paper.instance    riazanov2001)    (paper.author      riazanov2001 alexandreriazanov)    (paper.author      riazanov2001 andreivoronkov)    (paper.title       riazanov2001 "Splitting without Backtracking")    (paper.publication riazanov2001 ijcai)    (paper.startpage   riazanov2001 611)    (paper.endpage     riazanov2001 617)    (paper.url         riazanov2001 "http://rpc25.cs.man.ac.uk/voronkov/all_publications.html")    (paper.year        riazanov2001 2001)    (paper.description riazanov2001 "
The authors describe a technique for resolution that allows resolution
to break a clause apart when variables are not shared between pieces.
Suppose the clause C can be partitioned into 2 parts D and E, where each
part shares no variables with any other part.  Splitting replaces
C with the clauses D | p and E | -p.  This only makes sense when there
is an ordering imposed on the literals so that p and -p are not immediately
resolved together undoing the work of splitting.  The authors investigate
two orders: blocking and parallel.  In blocking, the -p literals 
are ranked highest; the non p literals are ranked next with negative
bigger than positive; the p atoms are ranked lowest.  In parallel,
the p literals (positive or negative) are ranked last.  Also, 
these p literals are considered names.  If there is another clause 
C' with partition D and F, then C' is split into F | -p.  Some
experimental results from TPTP show that splitting is a bad idea
with equality but that Parallel ordering with Naming is a good idea
without equaity. 
")    (paper.topic       riazanov2001 calculi)    (paper.instance    riazanov2003)    (paper.author      riazanov2003 alexandreriazanov)    (paper.author      riazanov2003 andreivoronkov)    (paper.title       riazanov2003 "Efficient Instance Retrieval with Standard and Relational Path Indexing
")    (paper.url         riazanov2003 "http://citeseer.ist.psu.edu/594779.html")    (paper.year        riazanov2003 2003)    (paper.description riazanov2003 "
Riazanov and Voronkov follow on their first indexing paper with this one.
They compare discrimination trees and path indexing for the case of instance
retrieval.  Given a term t, find all terms u and substitutions sigma such that 
t.sigma = u.  Discrimination trees represent terms as strings; path
indexing represents terms as trees.  The authors show that with the
standard implementation of path indexing is slower than DT.  Then
they augment PI with skip lists, early cleaning to more closely
approximate perfect filtering, and a couple of other improvements.  Then
they argue for relational path indexing, utilizing database theory
to conceptualize the integration of cleaning after imperfect filtering
into the imperfect filtering.  They show how this idea makes
commutative indexing and backward subsumption on multiliteral
clauses.
")    (paper.topic       riazanov2003 indexing)    (paper.instance    robinson)    (paper.bibtex      robinson book)    (paper.author      robinson alanrobinson)    (paper.author      robinson andreivoronkov)    (paper.title       robinson "Handbook of Automated Reasoning")    (paper.publisher   robinson mitpress)    (paper.publisher   robinson elsevierscience)    (paper.url         robinson "http://www.amazon.com/Handbook-Automated-Reasoning-Alan-Robinson/dp/0262182238")    (paper.year        robinson 2001)    (paper.rank        robinson 5)    (paper.description robinson "
Robinson and Voronkov edit this two volume handbook.  The first volume covers
a history of the field, methods for first-order logic, methods for equality and
other built-in theories, and induction.  The second volume covers higher-order
logics, nonclassical logics, decidable classes and model building, and implementational
details.
")    (paper.instance    robinson65machine)    (paper.bibtex      robinson65machine article)    (paper.author      robinson65machine jarobinson)    (paper.title       robinson65machine "A Machine-Oriented Logic Based on the Resolution Principle")    (paper.publication robinson65machine jacm)    (paper.volume      robinson65machine 12)    (paper.number      robinson65machine 1)    (paper.startpage   robinson65machine 23)    (paper.endpage     robinson65machine 41)    (paper.year        robinson65machine 1965)    (paper.rank        robinson65machine -2)    (paper.description robinson65machine "
The resolution paper.
")    (paper.topic       robinson65machine theoremproving)    (paper.instance    roy2000)    (paper.bibtex      roy2000 article)    (paper.author      roy2000 pierreroy)    (paper.author      roy2000 anneliret)    (paper.author      roy2000 francoispachet)    (paper.title       roy2000 "The Framework Approach for Constraint Satisfaction")    (paper.publication roy2000 acmcomputingsurveys)    (paper.volume      roy2000 32)    (paper.startpage   roy2000 13)    (paper.endpage     roy2000 16)    (paper.url         roy2000 "http://citeseer.ist.psu.edu/roy00framework.html")    (paper.year        roy2000 2000)    (paper.rank        roy2000 2)    (paper.description roy2000 "
The authors argue that a Framework is a better paradigm for
allowing a user to solve CSPs than either a Library of generic
constraints or a Language built for writing solvers of CSPs. 
The former approach is too coarsely-grained, and the latter is
too finely-grained.  The framework approach sits nicely in the
middle. 
")    (paper.topic       roy2000 oolanguageswithnativeconstraintsatisfaction)    (paper.instance    roy97)    (paper.author      roy97 pierreroy)    (paper.author      roy97 francoispachet)    (paper.title       roy97 "Reifying Constraint Satisfaction in Smalltalk")    (paper.publication roy97 joop)    (paper.volume      roy97 10)    (paper.number      roy97 4)    (paper.startpage   roy97 43)    (paper.endpage     roy97 51)    (paper.url         roy97 "http://citeseer.ist.psu.edu/roy97reifying.html")    (paper.year        roy97 1997)    (paper.rank        roy97 2)    (paper.description roy97 "
Roy describes Backtalk, a system that allows a library of
generic CSP algorithms to be written.
Doing so requires reifying
the notion of a constraint, a CSP problem, a solution, etc..
")    (paper.topic       roy97 oolanguageswithnativeconstraintsatisfaction)    (paper.instance    rueb2000deconstructing)    (paper.bibtex      rueb2000deconstructing inproceedings)    (paper.author      rueb2000deconstructing haraldrueb)    (paper.author      rueb2000deconstructing natarajanshankar)    (paper.title       rueb2000deconstructing "Deconstructing Shostak")    (paper.publication rueb2000deconstructing cade)    (paper.url         rueb2000deconstructing "http://citeseer.ist.psu.edu/290082.html")    (paper.year        rueb2000deconstructing 2000)    (paper.rank        rueb2000deconstructing 4)    (paper.description rueb2000deconstructing "
Rueb and Shankar show the crisply outlined Shostak procedure outlined
in cyrluk96shostaks and all its variants to date are incomplete.  They
go further and give a complete version of the Shostak procedure and
finally give soundness and completeness proofs.
")    (paper.topic       rueb2000deconstructing nelson-oppenandshostak)    (paper.related     rueb2000deconstructing cyrluk96shostaks)    (paper.related     rueb2000deconstructing shostak84)    (paper.instance    sabin96)    (paper.bibtex      sabin96 article)    (paper.author      sabin96 dsabin)    (paper.author      sabin96 efreuder)    (paper.title       sabin96 "Configuration as Composite Constraint Satisfaction")    (paper.startpage   sabin96 28)    (paper.endpage     sabin96 36)    (paper.url         sabin96 "http://citeseer.ist.psu.edu/sabin96configuration.html")    (paper.year        sabin96 1996)    (paper.rank        sabin96 4)    (paper.description sabin96 "
Sabin and Freuder define a new form of CSP which generalizes 
Meta CSPs, conditional CSPs, and hierarchical domain CSPs.
Composite CSP domain values are the set of solutions to an
entire subproblem.
")    (paper.topic       sabin96 variousformsofconstraintsatisfaction)    (paper.instance    sacerdoti74)    (paper.author      sacerdoti74 earldsacerdoti)    (paper.title       sacerdoti74 "Planning in a Hierarchy of Abstraction Spaces")    (paper.publication sacerdoti74 artificialintelligence)    (paper.volume      sacerdoti74 5)    (paper.startpage   sacerdoti74 115)    (paper.endpage     sacerdoti74 135)    (paper.year        sacerdoti74 1974)    (paper.description sacerdoti74 "
The ABSTRIPS (Abstraction-based STRIPS) paper.  In 1969, McCarthy and Hayes' asserted that knowledge representation should be epistemologically adequate and also define heuristic adequacy.  Sufficiently complex problems contain too many details to be epistemologically adequate and have adequeate heuristics.  To that end, Sacerdoti first plans through an abstract plan space and then refines a solution in that space to ensure the details support the abstraction.  To implement this idea, Sacerdoti extends STRIPS by assigning 'criticality' measures to each precondition of an action.  These measures define a hierarchy of abstraction spaces.  The planner finds a solution at the highest level of abstraction, and proceeds recursively to the next highest level.  Control of the search (i.e. the cost assigned to nodes in the search space) changes based on the level of abstraction.
")    (paper.topic       sacerdoti74 historical)    (paper.instance    sacerdoti75)    (paper.author      sacerdoti75 earldsacerdoti)    (paper.title       sacerdoti75 "The Nonlinear Nature of Plans")    (paper.volume      sacerdoti75 32)    (paper.startpage   sacerdoti75 333)    (paper.endpage     sacerdoti75 377)    (paper.year        sacerdoti75 1975)    (paper.description sacerdoti75 "
Sacerdoti describes NOAH (Nets Of Action Hierarchies), the first partial order
planner that relies heavily on the concept of a procedural net.  A 'procedural
net' is the data structure that maintains the
partially-ordered plan.  Much like his earlier work on
Hierarchical Planning, NOAH begins with an abstract
plan and continually refines it, alleviating conflicts through the use of
critics, until the plan consists of primitive actions.
")    (paper.topic       sacerdoti75 historical)    (paper.instance    sagonas94)    (paper.bibtex      sagonas94 inproceedings)    (paper.author      sagonas94 ksagonas)    (paper.author      sagonas94 tswift)    (paper.author      sagonas94 davidswarren)    (paper.title       sagonas94 "{XSB} as an Efficient Deductive Database Engine")    (paper.publication sagonas94 sigmod)    (paper.startpage   sagonas94 442)    (paper.endpage     sagonas94 453)    (paper.year        sagonas94 1994)    (paper.description sagonas94 "
XSB is Warren's current Prolog implementation, which includes tabling.
")    (paper.topic       sagonas94 logicprogramming)    (paper.instance    sais94)    (paper.bibtex      sais94 inproceedings)    (paper.author      sais94 lakhdarsais)    (paper.title       sais94 "Characterization of the Set of Models by Means of Symmetries")    (paper.publication sais94 constraints)    (paper.url         sais94 "http://citeseer.ist.psu.edu/162645.html")    (paper.year        sais94 1994)    (paper.rank        sais94 2)    (paper.description sais94 "
Sais gives an algorithm that seems to compute the characteristic models
of a given propositional, CNF theory.  There is no proof that the models
generated are exactly a set of characteristic models, but rather that
the models generated are non-symmetric.  [Maybe the equivalence is obvious,
but there is no theorem stating it.]
")    (paper.topic       sais94 characteristicmodels)    (paper.instance    sandford80)    (paper.bibtex      sandford80 article)    (paper.author      sandford80 davidsandford)    (paper.title       sandford80 "Using Sophisticated Models in Resolution Theorem Proving")    (paper.publisher   sandford80 springerverlag)    (paper.publication sandford80 lncs)    (paper.volume      sandford80 90)    (paper.url         sandford80 "")    (paper.year        sandford80 1980)    (paper.rank        sandford80 2)    (paper.description sandford80 "
Sandford describes a new refinement of semantic resolution, hereditary 
lock resolution, and a new approach for representing models as required 
in semantic resolution.  The pertinent part of the work is the model 
representation.  Semantic resolution puts clauses into two bins throughout 
the resolution process.  Part of the input to the procedure is a model, 
any model, and those clauses that are satisfied by the model are put into 
bin 1 while clauses not satisfied by the model are put into bin 2.  
This partitioning of clauses shrinks the search space since every resolution 
must use at least one clause from the set of unsatisfied clauses.  
Sandford describes a method for using a set of sentences to define that 
model (in possibly a totally different language) and using a satisfaction 
test to determine whether a clause belongs in bin 1 or 2.   Of course, 
the computational and complexity properties could be horrible, but so 
long as the satisfaction test is sound (only returns true when the sentences 
and clause are satisfiable), we retain completeness. 
")    (paper.topic       sandford80 model-guidedprooftechniques)    (paper.instance    schulz2001)    (paper.bibtex      schulz2001 inproceedings)    (paper.author      schulz2001 stephanschulz)    (paper.title       schulz2001 "A Comparison of Different Techniques for Grounding Near-Propositional {CNF} Formulae")    (paper.publication schulz2001 flairs)    (paper.startpage   schulz2001 72)    (paper.endpage     schulz2001 76)    (paper.url         schulz2001 "http://citeseer.ist.psu.edu/565512.html")    (paper.year        schulz2001 2002)    (paper.description schulz2001 "
Paper comparing various approaches for grounding a set of first-order, function-free clauses.  Won best-paper at FLAIR 2002.
")    (paper.topic       schulz2001 reformulation)    (paper.instance    schulz2002)    (paper.bibtex      schulz2002 inproceedings)    (paper.bibtex      schulz2002 article)    (paper.author      schulz2002 stephanschulz)    (paper.title       schulz2002 "A Comparison of Different Techniques for Grounding Near-Propositional CNF Formulae")    (paper.title       schulz2002 "E - A brainiac theorem prover")    (paper.publication schulz2002 flairs)    (paper.publication schulz2002 aicommunications)    (paper.volume      schulz2002 15)    (paper.startpage   schulz2002 72)    (paper.startpage   schulz2002 111)    (paper.endpage     schulz2002 76)    (paper.endpage     schulz2002 126)    (paper.url         schulz2002 "http://citeseer.ist.psu.edu/565512.html")    (paper.url         schulz2002 "http://citeseer.ist.psu.edu/560030.html")    (paper.year        schulz2002 2002)    (paper.rank        schulz2002 -2)    (paper.description schulz2002 "
Schulz compares three techniques for reducing the cost of generating 
the grounding of universal clause sets without function symbols.  The
first is hypersplitting, a generalization of which is (now) used in
the model builders that ground and use SAT solvers, structural constraints,
restricting instantiations to avoid the creation of pure literals, and 
post-processing the grounded sentences via unit subsumption, unit
propagation, and tautology deletion.  The combination of all three
outperformed any one of the techniques.
")    (paper.description schulz2002 "
Schulz describes E, a full first-order theorem prover with
equality.  It is a saturation-based prover from a purely 
equational view. It is based on the superposition calculus
with literal selection and was one of the first to use
the DISCOUNT algorithm.  The paper first describes the 
calculus, gives the proof search algorithm, discusses
search control by way of clause and literal selection,
term orderings, and auto configuration.  It delves into
implementation details: shared terms and indexing.
")    (paper.topic       schulz2002 herbrandlogic)    (paper.topic       schulz2002 systemdesigns)    (paper.instance    schutz96)    (paper.bibtex      schutz96 article)    (paper.author      schutz96 heribertschutz)    (paper.title       schutz96 "Comparison of Two Complementary Herbrand Model Generators")    (paper.url         schutz96 "http://citeseer.ist.psu.edu/122874.html")    (paper.year        schutz96 1996)    (paper.rank        schutz96 2)    (paper.description schutz96 "
Schutz describes and analyzes two different Herbrand model-building 
techniques built on hyperresolution.  He shows that some of the 
strengths of one can be used to help on cases where the other is weak
and vice versa.  
")    (paper.topic       schutz96 modelbuilding)    (paper.instance    selman91)    (paper.bibtex      selman91 inproceedings)    (paper.author      selman91 bartselman)    (paper.author      selman91 henrykautz)    (paper.title       selman91 "Knowledge Compilation Using Horn Approximations")    (paper.publication selman91 aaai)    (paper.url         selman91 "http://citeseer.ist.psu.edu/selman91knowledge.html")    (paper.year        selman91 1991)    (paper.rank        selman91 4)    (paper.description selman91 "
This seems to be the seminal work on Knowledge Compilation.  Selman and
Kautz investigate finding two Horn approximations for a propositional 
knowledge base: one that is too strong and one that is too weak.  The 
algorithms for computing those approximations are anytime algorithms. 
To determine whether a given sentence p is entailed by the original
knowledge base, return yes if the strong approximation entails it and
no if the weak one doesn't.  If neither of these two cases hold, resort
to the original knowledge base.  Since entailment for propositional Horn
requires linear time, the worst case wastes O(2n) computation time, but
the best case might save exponential time.
")    (paper.topic       selman91 knowledgebasecompilation)    (paper.instance    selman96)    (paper.bibtex      selman96 article)    (paper.author      selman96 bartselman)    (paper.author      selman96 henrykautz)    (paper.title       selman96 "Knowledge Compilation and Theory Approximation")    (paper.publication selman96 jacm)    (paper.volume      selman96 43)    (paper.number      selman96 2)    (paper.startpage   selman96 193)    (paper.endpage     selman96 224)    (paper.url         selman96 "http://citeseer.ist.psu.edu/41052.html")    (paper.year        selman96 1996)    (paper.rank        selman96 5)    (paper.description selman96 "
This paper essentially glues together the work of kautz91, selman91,
kautz92,  and kautz95.  Especially noteworthy is the thorough related
work section.  It also brought together the fact that the Greatest
Upper Bound approximation of a propositional theory is always linear
in the size of the theory, but the Least Upper Bound can be exponential
in the size of the theory.
")    (paper.topic       selman96 knowledgebasecompilation)    (paper.related     selman96 selman91)    (paper.related     selman96 kautz91)    (paper.related     selman96 kautz92)    (paper.related     selman96 kautz95)    (paper.instance    sherl93)    (paper.author      sherl93 rsherl)    (paper.author      sherl93 hectorjlevesque)    (paper.title       sherl93 "The frame problem and knowledge-producing actions")    (paper.url         sherl93 "http://citeseer.ist.psu.edu/scherl93frame.html")    (paper.year        sherl93 1993)    (paper.description sherl93 "None yet.
")    (paper.topic       sherl93 planningwithsensingactions)    (paper.instance    shostak84)    (paper.bibtex      shostak84 article)    (paper.author      shostak84 robertshostak)    (paper.title       shostak84 "Deciding Combinations of Theories")    (paper.publication shostak84 jacm)    (paper.volume      shostak84 31)    (paper.startpage   shostak84 1)    (paper.endpage     shostak84 12)    (paper.url         shostak84 "http://portal.acm.org/citation.cfm?id=322411&dl=ACM&coll=portal")    (paper.year        shostak84 1984)    (paper.rank        shostak84 4)    (paper.description shostak84 "
Shostak describes what is now commonly known as Shostak's decision procedure.
The decision procedure works on algebraically solvable and canonizable 
equational theories.  It functions by computing the congruence closure of 
the terms in the language representing each one by their canonical forms.  
The canonization takes into account both interpreted and unintepreted
functions.  Unlike Nelson Oppen, Shostak shows how to merge the decision
procedures for two theories by taking a solver and canonizer for each and
building a single solver and canonizer pair for the union of the theories.
")    (paper.topic       shostak84 nelson-oppenandshostak)    (paper.related     shostak84 nelson79)    (paper.instance    sikka96)    (paper.bibtex      sikka96 phdthesis)    (paper.author      sikka96 vishalsikka)    (paper.title       sikka96 "Integrating Specialized Procedures into Proof Systems")    (paper.publisher   sikka96 stanforduniversity)    (paper.url         sikka96 "http://library.stanford.edu/depts/mathcs/mathcscoll/techreports.html")    (paper.year        sikka96 1996)    (paper.rank        sikka96 5)    (paper.description sikka96 "
Compiled code can be used by a theorem prover to expedite a proof.  
Sikka describes a general method for integrating such specialized 
procedures into proof systems using function constants, data 
structure constants, and the 'apply' operator.  
")    (paper.topic       sikka96 theoremprovingwithattachments)    (paper.instance    sipser)    (paper.bibtex      sipser book)    (paper.author      sipser michaelsipser)    (paper.title       sipser "Introduction to the Theory of Computation")    (paper.publisher   sipser brookscole)    (paper.url         sipser "http://www.amazon.com/exec/obidos/tg/detail/-/053494728X/qid=1062605920/sr=1-1/ref=sr_1_1/102-6107129-2481765?v=glance&s=books")    (paper.year        sipser 1996)    (paper.rank        sipser 5)    (paper.description sipser "
One of the two definitive introductions to the theory of computation.  Sipser
covers automata and languages, computability theory, and complexity theory.
")    (paper.instance    slaney93)    (paper.bibtex      slaney93 inproceedings)    (paper.author      slaney93 johnslaney)    (paper.title       slaney93 "{SCOTT}: A Model-Guided Theorem Prover")    (paper.publication slaney93 ijcai)    (paper.url         slaney93 "http://citeseer.ist.psu.edu/slaney93scott.html")    (paper.year        slaney93 1993)    (paper.rank        slaney93 3)    (paper.description slaney93 "
Slaney describes a case study of SCOTT (Semantically Constrained
Otter).  SCOTT consists of OTTER augmented with a model-generator
FINDER.  It restricts the resolutions done by Otter to include one
parent clause not true in the model being generated.  A new model
is generated every time a new clause is generated that is false
in the current model (up to 100 clauses).  If no new model can 
be found, the old one is used.  SCOTT retains completeness
for binary resolution since every model generated is a model of the
usable list (those axioms assumed to be consistent).  
")    (paper.topic       slaney93 model-guidedprooftechniques)    (paper.instance    slaney94)    (paper.bibtex      slaney94 inproceedings)    (paper.author      slaney94 johnslaney)    (paper.title       slaney94 "Finder: Finite Domain Enumerator System Description")    (paper.publication slaney94 cade)    (paper.url         slaney94 "http://citeseer.ist.psu.edu/252758.html")    (paper.year        slaney94 1994)    (paper.description slaney94 "
Very short description of Finder, a model builder for FOL.  It grounds and
then uses a combination of tableaux and negative hyperresolution.  Used
in SCOTT to constrain the search space of Otter.
")    (paper.topic       slaney94 modelbuilding)    (paper.topic       slaney94 theoremproving)    (paper.instance    slaney94b)    (paper.bibtex      slaney94b inproceedings)    (paper.author      slaney94b johnslaney)    (paper.title       slaney94b "The Crisis in Finite Mathematics: Automated Reasoning as Cause and Cure")    (paper.publication slaney94b cade)    (paper.url         slaney94b "http://arp.anu.edu.au/~jks/constraints.html")    (paper.year        slaney94b 1994)    (paper.description slaney94b "
Slaney describes the problems associated with using machines to exhaustively
check a solution space as proof of the non-existence of a solution.  Is that
really a proof?  Afterall, no one will actually verify such a proof.
But, if a theorem prover outputs a trace, we can check the trace with an
independent proof checker.  This trace-checking may be much easier than
proving the correctness of a theorem prover.
")    (paper.instance    soutchanski2000)    (paper.author      soutchanski2000 mikhailsoutchanski)    (paper.title       soutchanski2000 "An On-line Decision-Theoretic Golog Interpreter")    (paper.publication soutchanski2000 aaai)    (paper.url         soutchanski2000 "http://www.cs.toronto.edu/~cebly/papers.html")    (paper.year        soutchanski2000 2000)    (paper.description soutchanski2000 "
Building on previous work, Southchanski couples Golog with a decision-theoretic planner based on Markov decision processes.  The original work found a optimal conditional policy, the probability that the policy could be executed, and the expected utility of the policy all offline.  This is really only possible in an environment without sensing actions with continuous return values.  Soutchanski also points out that only a single policy can be computed for an entire program, even if the program could be easily partitioned into two independent portions.  Soutchanski introduces optimize(p1);p2 to indicate that a single policy should be found for program p1 and another for program p2.  He also gives a new formulation of sensing actions of the form sense(act, value, s), meaning the result of executing the action act is value in situation s.  Since Golog is an online interpreter, sensing actions with continuous return values can be handled.
")    (paper.topic       soutchanski2000 logicprogramming)    (paper.instance    sqalli2001)    (paper.author      sqalli2001 mohammedsqalli)    (paper.author      sqalli2001 eugenefreuder)    (paper.title       sqalli2001 "Solving InterOperability Problems Using Object-Oriented CSP 
 Modeling")    (paper.url         sqalli2001 "http://citeseer.ist.psu.edu/487285.html")    (paper.year        sqalli2001 2001)    (paper.rank        sqalli2001 2)    (paper.description sqalli2001 "
Sqalli and Freuder describe a combination of Case-based reasoning
and constraint satisfaction.  They use Paltrinieri's OOCSP definition
except that they add methods to classes.  To solve an OOCSP, they
convert it to a standard CSP.  
")    (paper.topic       sqalli2001 objectorientedconstraintsatisfaction)    (paper.instance    stickel85)    (paper.bibtex      stickel85 article)    (paper.author      stickel85 markstickel)    (paper.title       stickel85 "Automated Deduction by Theory Resolution")    (paper.publication stickel85 jar)    (paper.volume      stickel85 1)    (paper.startpage   stickel85 333)    (paper.endpage     stickel85 356)    (paper.url         stickel85 "http://citeseer.ist.psu.edu/stickel85automated.html")    (paper.year        stickel85 1985)    (paper.rank        stickel85 3)    (paper.description stickel85 "
The theory resolution paper.
")    (paper.topic       stickel85 theoremprovingwithattachments)    (paper.instance    stickel87)    (paper.author      stickel87 markstickel)    (paper.title       stickel87 "A Prolog Technology Theorem Prover")    (paper.url         stickel87 "http://citeseer.ist.psu.edu/stickel87prolog.html")    (paper.year        stickel87 1987)    (paper.description stickel87 "
Prolog fails to qualify as a full general-purpose theorem-proving system.  It uses unsound unification (no occurs-check),
an incomplete inference system for full first-order logic, and an unbounded depth-first search strategy.  Stickel creates an implementation of Prolog
called PTTP that does the occurs check, uses the model elimination reduction rule, and searches using iterative-deepening.
")    (paper.topic       stickel87 calculi)    (paper.instance    stickel94)    (paper.bibtex      stickel94 article)    (paper.author      stickel94 markstickel)    (paper.author      stickel94 richardwaldinger)    (paper.author      stickel94 michaellowry)    (paper.author      stickel94 thomaspressburger)    (paper.author      stickel94 ianunderwood)    (paper.title       stickel94 "Deductive Composition of Astronomical Software from Subroutine Libraries")    (paper.publication stickel94 cade)    (paper.startpage   stickel94 341)    (paper.endpage     stickel94 355)    (paper.url         stickel94 "http://citeseer.ist.psu.edu/67907.html")    (paper.year        stickel94 1994)    (paper.rank        stickel94 1)    (paper.description stickel94 "
The authors describe a system that allows a user to graphically describe
a specification for a system relying on subroutine libraries and then uses
automated deduction techniques to produce a proof of the specification from
axioms describing the library.  That proof is then translated into a 
Fortran program.
")    (paper.topic       stickel94 miscellaneous)    (paper.instance    strzalkowski91)    (paper.bibtex      strzalkowski91 article)    (paper.author      strzalkowski91 tomekstrzalkowski)    (paper.title       strzalkowski91 "A General Computational Method for Grammar Inversion")    (paper.url         strzalkowski91 "http://acl.ldc.upenn.edu/W/W91/W91-0112.pdf")    (paper.year        strzalkowski91 1991)    (paper.rank        strzalkowski91 3)    (paper.description strzalkowski91 "
Strzalkowski describes a procedure for converting a unification grammar defined in Prolog, which was built for sentence parsing, into another set of Prolog rules for sentence generation.
")    (paper.topic       strzalkowski91 naturallanguageprocessing)    (paper.instance    suchenek93)    (paper.bibtex      suchenek93 article)    (paper.author      suchenek93 mareksuchenek)    (paper.title       suchenek93 "First-Order Syntactic Characterizations of Minimal Entailment, Domain-Minimal Entailment, and Herbrand Entailment")    (paper.url         suchenek93 "http://www.springerlink.com/index/L14483241892Q613.pdf")    (paper.year        suchenek93 1993)    (paper.rank        suchenek93 3)    (paper.description suchenek93 "
Suchenek treats formally three types of minimal-model theory: minimal
entailment (cwa), Herbrand entailment (only the Herbrand models exist),
and domain-minimal entailment (only elements in the domain are those
that must be in the domain).  Touches on domain closure, unique-names,
deductive databases, closed world, non-mon.
")    (paper.topic       suchenek93 herbrandlogic)    (paper.instance    sussman74)    (paper.author      sussman74 geraldjsussman)    (paper.title       sussman74 "The Virtuous Nature of Bugs")    (paper.year        sussman74 1974)    (paper.description sussman74 "
Sussman describes HACKER, a total-order planner that composes stored subroutines to achieve its goal.  If subgoals conflict, HACKER identifies a bug in the plan it has generated and debugs it.  To do so, it matches a model of the behavior of the misbehaving plan with prototypes of bugs.  Once a match is found, a 'critic' is compiled with what HACKER has learned from the debugging.  In future plans, critics are used to avoid pitfalls already seen.
")    (paper.topic       sussman74 historical)    (paper.instance    sutcliffe98)    (paper.bibtex      sutcliffe98 article)    (paper.author      sutcliffe98 geoffsutcliffe)    (paper.author      sutcliffe98 cbsuttner)    (paper.title       sutcliffe98 "The {TPTP} Problem Library: {CNF} Release v1.2.1")    (paper.publication sutcliffe98 jar)    (paper.volume      sutcliffe98 21)    (paper.number      sutcliffe98 2)    (paper.startpage   sutcliffe98 177)    (paper.endpage     sutcliffe98 203)    (paper.url         sutcliffe98 "http://citeseer.ist.psu.edu/30379.html")    (paper.year        sutcliffe98 1998)    (paper.rank        sutcliffe98 -2)    (paper.description sutcliffe98 "
Paper on the TPTP library.
")    (paper.topic       sutcliffe98 theoremproving)    (paper.instance    sutcliffe98cade)    (paper.bibtex      sutcliffe98cade article)    (paper.author      sutcliffe98cade christiansuttner)    (paper.author      sutcliffe98cade geoffsutcliffe)    (paper.title       sutcliffe98cade "The {CADE}-14 {ATP} System Competition")    (paper.publication sutcliffe98cade jar)    (paper.volume      sutcliffe98cade 21)    (paper.number      sutcliffe98cade 1)    (paper.startpage   sutcliffe98cade 99)    (paper.endpage     sutcliffe98cade 134)    (paper.url         sutcliffe98cade "http://citeseer.ist.psu.edu/87162.html")    (paper.year        sutcliffe98cade 1998)    (paper.rank        sutcliffe98cade -2)    (paper.description sutcliffe98cade "
Paper on the results of one of the CASC competitions: the yearly first-order theorem proving competition held at CADE.
")    (paper.topic       sutcliffe98cade theoremproving)    (paper.instance    swamy2000)    (paper.bibtex      swamy2000 phdthesis)    (paper.author      swamy2000 nikhilswamy)    (paper.title       swamy2000 "A Study in Automated Reasoning about Abstract Algebra")    (paper.url         swamy2000 "http://www.cs.umd.edu/~nswamy/thesis/ch2-IntroToATP.ps")    (paper.year        swamy2000 2000)    (paper.rank        swamy2000 -2)    (paper.description swamy2000 "
Swamy's second chapter (Advanced theorem proving techniques) gives a good
overview of resolution-style theorem-proving and definitions/proofs
of UR-Resolution, Hyperresolution, factoring, paramodulation,
subsumption, demodulation, set of support, and Knuth-Bendix completion.
Link goes to said chapter.
")    (paper.topic       swamy2000 theoremproving)    (paper.instance    tammet2001)    (paper.bibtex      tammet2001 misc)    (paper.author      tammet2001 taneltammet)    (paper.title       tammet2001 "Finite model building: improvements and comparisons")    (paper.url         tammet2001 "http://citeseer.ist.psu.edu/675660.html")    (paper.year        tammet2001 2001)    (paper.description tammet2001 "
Comparison of Mace 2.0 and Falcon-style finite model builders, along
with some enhancements to Falcon to produce Gandolf.  Mace 2.0 used flattening,
grounding, and boolean sat solvers.  Falcon used consequence finding during
incremental model generation, much like arc consistency in CSPs.
")    (paper.topic       tammet2001 modelbuilding)    (paper.instance    tammet2002)    (paper.bibtex      tammet2002 article)    (paper.author      tammet2002 taneltammet)    (paper.title       tammet2002 "Finite model building: improvements and comparisons")    (paper.url         tammet2002 "http://citeseer.ist.psu.edu/675660.html")    (paper.year        tammet2002 2002)    (paper.rank        tammet2002 -2)    (paper.description tammet2002 "
Tammet gives an overview of two different styles of finite model builders
after situating the topic in the context of automated reasoning: Mace and
Falcon.  Mace operates by reducing the problem to one of propositional 
satisfiability and employing a SAT solver.  Tammet describes an augmentation
of Mace (nonground splitting) to reduce the number of distinct variables
in a clause (suboptimally).  Falcon works almost as a naive model builder
but makes certain inferences to prune the search.  Both the Mace-style
and Falcon-style builder were implemented  in Gandalf, a theorem-prover/
model checker written in Scheme and compiled into C.  Various versions
of the two builders were run over the 2002 satisfiable CASC problems,
and some conclusions were drawn.
")    (paper.topic       tammet2002 modelbuilding)    (paper.instance    thiffault2004)    (paper.bibtex      thiffault2004 inproceedings)    (paper.author      thiffault2004 christianthiffault)    (paper.author      thiffault2004 fahiembacchus)    (paper.author      thiffault2004 tobywalsh)    (paper.title       thiffault2004 "Solving Non-clausal Formulas with {DPLL} Search")    (paper.publication thiffault2004 constraints)    (paper.startpage   thiffault2004 663)    (paper.endpage     thiffault2004 678)    (paper.url         thiffault2004 "http://www.satisfiability.org/SAT04/accepted/71.html")    (paper.year        thiffault2004 2004)    (paper.description thiffault2004 "
A paper that adopts DPLL to handle Non-CNF directly.
")    (paper.topic       thiffault2004 satsolving)    (paper.instance    tin94)    (paper.bibtex      tin94 article)    (paper.author      tin94 erkantin)    (paper.author      tin94 varolakman)    (paper.title       tin94 "Computatinal Situation Theory")    (paper.publication tin94 sigartbulletin)    (paper.volume      tin94 5)    (paper.number      tin94 4)    (paper.startpage   tin94 4)    (paper.endpage     tin94 17)    (paper.url         tin94 "http://portal.acm.org/citation.cfm?id=191604.191608")    (paper.year        tin94 1994)    (paper.rank        tin94 1)    (paper.description tin94 "
Tin and Akman give an overview of Situation Theory, which allows
one to describe states of the world relative to spatio and temporal
positions.  This theory is used to give semantics to natural language
utterances.  The authors then overview several systems that deal
with situation theory.
")    (paper.topic       tin94 miscellaneous)    (paper.instance    tinelli2000)    (paper.bibtex      tinelli2000 inproceedings)    (paper.author      tinelli2000 cesaretinelli)    (paper.title       tinelli2000 "Cooperation of Background Reasoners in Theory Reasoning by
Residue Sharing")    (paper.publication tinelli2000 workshoponfirstordertheoremproving)    (paper.url         tinelli2000 "http://citeseer.ist.psu.edu/572497.html")    (paper.year        tinelli2000 2000)    (paper.rank        tinelli2000 4)    (paper.description tinelli2000 "
Tinelli shows how to use theory reasoning to combine specialized reasoners in
a sound and complete way in the context of semantic tableaus.  The theories
those reasoners embody must be universal, a requirement for theory reasoning.
Tinelli's results hinge on an interpolation lemma that
requires all the background theory signatures to include all the
same functions.   This lemma shows that determining unsatisfiability of
wrt a set of theories requires only passing disjunctions of literals in
the common signature among the theories.  One can thus alter the tableau
procedure by allowing a new type of derivation: hand off a subset of the
literals on a particular branch which are of the appropriate signature
to the corresponding background reasoner.  If the reasoner returns
'unsatisfiable', close the branch; otherwise, add the residue to the
end of the branch.
")    (paper.topic       tinelli2000 theoremprovingwithattachments)    (paper.instance    torlak2006)    (paper.bibtex      torlak2006 techreport)    (paper.author      torlak2006 eminatorlak)    (paper.author      torlak2006 danieljackson)    (paper.title       torlak2006 "The Design of a Relational Engine")    (paper.publisher   torlak2006 mit-csail)    (paper.url         torlak2006 "http://web.mit.edu/emina/www/kodkod.html")    (paper.year        torlak2006 2006)    (paper.description torlak2006 "
The authors describe a model-builder for a relational logic with transitive
closure and a finite domain.  The system does symmetry detection, compresses
expressions using compact boolean circuits, and
translates to propositional logic to answer queries using a SAT solver.
")    (paper.topic       torlak2006 modelbuilding)    (paper.instance    ullman)    (paper.bibtex      ullman book)    (paper.author      ullman jhopcroft)    (paper.author      ullman jeffreyullman)    (paper.title       ullman "Introduction to Automata Theory, Languages, and Computation")    (paper.publisher   ullman addisonwesley)    (paper.url         ullman "http://www-db.stanford.edu/~ullman/ialc.html")    (paper.year        ullman 1979)    (paper.rank        ullman 5)    (paper.description ullman "
One of the two definitive introductions to the theory of computation. Hopcroft
and Ullman--the classic.
")    (paper.instance    ullman96)    (paper.bibtex      ullman96 article)    (paper.author      ullman96 jeffreyullman)    (paper.title       ullman96 "The Database Approach to Knowledge Representation")    (paper.publication ullman96 aaai)    (paper.url         ullman96 "http://citeseer.ist.psu.edu/ullman96database.html")    (paper.year        ullman96 1996)    (paper.rank        ullman96 4)    (paper.description ullman96 "
Ullman explains to the AI community the database perspective on
knowledge representation: start at low expressiveness and efficient computation
and work your way up.  Datalog (prolog w/o negation or functions)
is given the fixed-point semantics.  When extended with negation,
the least-fixed-point semantics are troublesome; stratified negation
and well-founded semantics have been developed to handle this.
Query containment of conjunctive queries is NP complete in general,
but is linear if no predicate appears more than twice in any
query.  Whether a conjunctive query is contained in a Datalog
program is exponential, and the reverse is decidable.  Rewriting
a query in terms of views has been done when the views are 
conjunctive queries as well as when the views are described
by Datalog programs.  
")    (paper.topic       ullman96 logicalknowledgerepresentation)    (paper.instance    ullmandb)    (paper.bibtex      ullmandb book)    (paper.author      ullmandb jeffreyullman)    (paper.title       ullmandb "Principles of Database and Knowledge-Base Systems")    (paper.publisher   ullmandb computersciencepress)    (paper.url         ullmandb "http://www.amazon.com/exec/obidos/tg/detail/-/0716781581/qid=1110684085/sr=8-3/ref=sr_8_xs_ap_i3_xgl14/104-0791189-4759116?v=glance&s=books&n=507846")    (paper.year        ullmandb 1989)    (paper.rank        ullmandb 5)    (paper.description ullmandb "
This two-volume set describes how database principles can be applied to 
produce knowledge-based systems.
")    (paper.instance    uribe2000)    (paper.bibtex      uribe2000 inproceedings)    (paper.author      uribe2000 tomasuribe)    (paper.title       uribe2000 "Combinations of Model Checking and Theorem Proving")    (paper.publication uribe2000 frocos)    (paper.startpage   uribe2000 151)    (paper.endpage     uribe2000 170)    (paper.url         uribe2000 "http://citeseer.ist.psu.edu/uribe00combinations.html")    (paper.year        uribe2000 2000)    (paper.rank        uribe2000 4)    (paper.description uribe2000 "
Uribe surveys combinations of model checkers and theorem provers in the
context of formal verification.  The paper is pretty much self-contained,
explaining transition systems, fair transition systems,
finite-state model checking, deductive verification, abstraction, and
invariant generation.   Then Uribe discusses loosely coupled systems,
which treat the model checker/theorem prover as a black box. Modularity
and abstraction, general deductive environments (debugging, incremental
verification, and formal decomposition), and abstraction generation using
theorem proving have all been investigated in this loosely-coupled way.  
Lastly he considers tightly coupled systems.  Diagram-based
formalisms provide abstractions.  Model checking infinite-state systems
can also be attacked with abstraction.  A handful of tightly integrated
systems are also mentioned.  This survey feels like it is made up of a
hodge-podge of attempts--whether that is characteristic of the field
or the paper is unclear.
")    (paper.topic       uribe2000 modelchecking)    (paper.instance    vangelder91)    (paper.bibtex      vangelder91 article)    (paper.author      vangelder91 allenvangelder)    (paper.author      vangelder91 kennethross)    (paper.author      vangelder91 johnschlipf)    (paper.title       vangelder91 "The Well-Founded Semantics for General Logic Programs")    (paper.publication vangelder91 jacm)    (paper.volume      vangelder91 38)    (paper.number      vangelder91 3)    (paper.startpage   vangelder91 620)    (paper.endpage     vangelder91 650)    (paper.url         vangelder91 "http://citeseer.ist.psu.edu/gelder91wellfounded.html")    (paper.year        vangelder91 1991)    (paper.description vangelder91 "
Well-founded semantics for logic programming.
")    (paper.topic       vangelder91 logicprogramming)    (paper.instance    vanhoof2004)    (paper.bibtex      vanhoof2004 article)    (paper.author      vanhoof2004 wimvanhoof)    (paper.title       vanhoof2004 "Searching Semantically Equivalent Code Fragments in Logic Programs")    (paper.publication vanhoof2004 lopstr)    (paper.startpage   vanhoof2004 1)    (paper.endpage     vanhoof2004 18)    (paper.url         vanhoof2004 "http://wotan.liu.edu/docis/dbl/lopstr/index.html")    (paper.year        vanhoof2004 2004)    (paper.description vanhoof2004 "
In the context of logic programming over Horn rules, 
Vanhoof considers three problems: (1) determining when some portion
of a rule body is equivalent to a portion of another rule body, (2) 
determining when two relations are identical up to argument permutation,
and (3) whether two portions of rule bodies share enough functionality
to be generalized as a higher-order rule, e.g. mapcar.  The nice
part about this topic of semantic equivalence in LP is that two
relations/conjunctions are equivalent iff they have the same extensions.
Vanhoof gives approximation algorithms, i.e. algorithms that are 
sufficient, for determining various kinds of semantic equivalences.
")    (paper.topic       vanhoof2004 reformulation)    (paper.instance    vardi82)    (paper.bibtex      vardi82 inproceedings)    (paper.author      vardi82 moshevardi)    (paper.title       vardi82 "The complexity of relational query languages")    (paper.publication vardi82 stoc)    (paper.startpage   vardi82 137)    (paper.endpage     vardi82 146)    (paper.url         vardi82 "http://portal.acm.org/citation.cfm?id=802186&dl=ACM&coll=GUIDE")    (paper.year        vardi82 1982)    (paper.description vardi82 "
Data and expression complexity results for various database query languages.
")    (paper.topic       vardi82 databases)    (paper.instance    vorobyov98)    (paper.bibtex      vorobyov98 inproceedings)    (paper.author      vorobyov98 sergeivorobyov)    (paper.author      vorobyov98 andreivoronkov)    (paper.title       vorobyov98 "Complexity of Nonrecursive Logic Programs with Complex Values")    (paper.publication vorobyov98 sigmod)    (paper.startpage   vorobyov98 244)    (paper.endpage     vorobyov98 253)    (paper.url         vorobyov98 "http://citeseer.ist.psu.edu/258671.html")    (paper.year        vorobyov98 1998)    (paper.description vorobyov98 "
Breaks down the complexity of nonrecursive logic programs based on the 
signature/vocabulary of the program.
")    (paper.topic       vorobyov98 logicprogramming)    (paper.instance    waal93)    (paper.bibtex      waal93 article)    (paper.author      waal93 dadewaal)    (paper.author      waal93 jgallagher)    (paper.title       waal93 "The Applicability of Logic Program Analysis and Transformation to Theorem Proving")    (paper.publication waal93 cade)    (paper.url         waal93 "http://citeseer.ist.psu.edu/dewaal93applicability.html")    (paper.year        waal93 1993)    (paper.rank        waal93 4)    (paper.description waal93 "
de Waal and Gallagher show how to employ the results of (1) approximation
of logic programs and (2) partial evaluation to produce strategies
for pruning the search space of theorem proving procedures.  They model
a theorem proving algorithm as a logic program, add in the theory and query
in question, and run approximation techniques after partially evaluating
the constructed logic program.  Regular unary clauses (r(f(x1,...,xn) <= 
t1(x1) ^ ... ^ tn(xn))are used to
do the approximations, but the technique can be applied to different
approximations as well.  The authors demonstrate this technique on
a model-elimination procedure and a Naive nH-Prolog proof system.
")    (paper.topic       waal93 metalevelreasoning)    (paper.instance    waldinger75)    (paper.bibtex      waldinger75 inbook)    (paper.author      waldinger75 richardwaldinger)    (paper.title       waldinger75 "Achieving several goals simultaneously")    (paper.booktitle   waldinger75 "Machine Intelligence 8")    (paper.startpage   waldinger75 94)    (paper.endpage     waldinger75 138)    (paper.year        waldinger75 1975)    (paper.description waldinger75 "
Waldinger examines planning where sugoals interfere with one another.  He introduces regression  planning, where totally ordered plan steps are reordered.  A solution is constructed incrementally for each subgoal, but when a later subgoal interferes, the position of that subgoal is moved earlier in the plan.  He also touches on the ramification problem (but doesn't call it that) in an effort to show the STRIPS assumption as an unsatisfactory solution to the frame problem.
")    (paper.topic       waldinger75 historical)    (paper.instance    wallach1998)    (paper.bibtex      wallach1998 inproceedings)    (paper.author      wallach1998 dan.s.wallach)    (paper.author      wallach1998 edward.w.felton)    (paper.title       wallach1998 "Understanding Java Stack Inspection")    (paper.publication wallach1998 ieeesap)    (paper.startpage   wallach1998 52)    (paper.endpage     wallach1998 63)    (paper.url         wallach1998 "http://citeseer.ist.psu.edu/245387.html")    (paper.year        wallach1998 1998)    (paper.rank        wallach1998 3)    (paper.description wallach1998 "Wallach and Felton employ a fragment of Abadi et. al.'s logic to model the java stack inspection approach to security.  They use it to reflect the inheritance of permissions that occur when one function calls another.  They show how a push-down automaton can be used to represent these permissions, and how, going a step further, one can represent the push-down automaton by, at compile-time, augmenting every function with an extra argument that contains its permissions.  They also demonstrate that these ideas can also be used for dealing with remote procedure calls in a natural way.")    (paper.topic       wallach1998 authorizationlogic)    (paper.related     wallach1998 abadi93)    (paper.instance    walsh2000)    (paper.bibtex      walsh2000 article)    (paper.author      walsh2000 tobywalsh)    (paper.title       walsh2000 "Reformulating Propositional Satisfiability as Constraint Satisfaction")    (paper.publication walsh2000 sara)    (paper.startpage   walsh2000 233)    (paper.endpage     walsh2000 246)    (paper.url         walsh2000 "http://citeseer.ifi.unizh.ch/walsh00reformulating.html")    (paper.year        walsh2000 2000)    (paper.description walsh2000 "
Walsh gives an overview of various approaches to encoding propositional
satisfiability as CSPs.  Then he goes on to discuss how various
algorithms operate on those CSPs.
")    (paper.topic       walsh2000 reformulation)    (paper.instance    wam)    (paper.bibtex      wam book)    (paper.author      wam hassanait-kaci)    (paper.title       wam "Warren's Abstract Machine: A Tutorial Reconstruction")    (paper.publisher   wam mitpress)    (paper.url         wam "http://mitpress.mit.edu/catalog/item/default.asp?ttype=2&tid=7292")    (paper.year        wam 1991)    (paper.rank        wam 5)    (paper.description wam "
Description of the original Prolog compiler.
")    (paper.instance    wang85)    (paper.bibtex      wang85 inproceedings)    (paper.author      wang85 tiechengwang)    (paper.title       wang85 "Designing Examples for Semantically Guided Hierarchical Deduction")    (paper.publication wang85 ijcai)    (paper.year        wang85 1985)    (paper.rank        wang85 1)    (paper.description wang85 "
This paper describes a hierarchical theorem prover guided by a model
and gives guidelines for humans to pick a good model.
")    (paper.topic       wang85 model-guidedprooftechniques)    (paper.instance    warren74)    (paper.author      warren74 davidhdwarren)    (paper.title       warren74 "Extract from APIC Studies in Data Processing")    (paper.year        warren74 1974)    (paper.description warren74 "
Quick synopsis of the Prolog implementation of Warren's WARPLAN.  WARPLAN was the first planner implemented in Prolog.  It was not optimal, sometimes finding longer plans than needed.
")    (paper.topic       warren74 historical)    (paper.instance    weyhrauch80)    (paper.bibtex      weyhrauch80 article)    (paper.author      weyhrauch80 richardweyhrauch)    (paper.title       weyhrauch80 "Prolegomena to a theory of mechanized formal reasoning")    (paper.publication weyhrauch80 artificialintelligence)    (paper.volume      weyhrauch80 13)    (paper.startpage   weyhrauch80 133)    (paper.endpage     weyhrauch80 170)    (paper.year        weyhrauch80 1980)    (paper.rank        weyhrauch80 3)    (paper.description weyhrauch80 "
Weyhrauch describes the FOL system.  FOL allows rules to be written that
produce semantic attachments, i.e. attaching Lisp addition to the function
symbol '+'.  It also allows rules that rewrite expressions.  FOL includes
an evaluator for first order logic that combines the rewrite rules with
the semantic attachments to do proofs.  FOL is a system that operates on
'LS pairs': a set of logical sentences, a set of attachments, and a set
of facts.  Because this is done uniformly, FOL allows multiple LS pairs
to be defined at the same time.  A special LS pair, Meta, is a theory
of LS pairs; reflection is achieved in FOL by allowing Meta to
operate on another LS pair.   Metametalevel reasoning
can be accomplished in the same way.  Self-reflection is another special
case of this mechanism--give Meta the LS pair Meta to operate on.
")    (paper.topic       weyhrauch80 theoremprovingwithattachments)    (paper.instance    yamatomoto2000)    (paper.author      yamatomoto2000 akihiroyamatomoto)    (paper.author      yamatomoto2000 bertramfronhofer)    (paper.title       yamatomoto2000 "Hypothesis Finding via Residue Hypotheses with the Resolution Principle")    (paper.url         yamatomoto2000 "http://link.springer.de/link/service/series/0558/bibs/1968/19680156.htm")    (paper.year        yamatomoto2000 2000)    (paper.description yamatomoto2000 "
Given a set of background sentences B that do not entail a positive example E, we want to find a hypothesis H such that
B and H entail E.  The authors argue for the use of anti-subsumption over anti-instantiation as a method for
finding residue hypotheses.
")    (paper.topic       yamatomoto2000 theoremprovingapplications)    (paper.instance    zhang90)    (paper.bibtex      zhang90 article)    (paper.author      zhang90 weiningzhang)    (paper.author      zhang90 clementyu)    (paper.author      zhang90 danieltroy)    (paper.title       zhang90 "Necessary and Sufficient Conditions to Linearize Doubly Recursive Programs in Logic Databases")    (paper.publication zhang90 tods)    (paper.volume      zhang90 15)    (paper.number      zhang90 3)    (paper.startpage   zhang90 459)    (paper.endpage     zhang90 482)    (paper.url         zhang90 "http://portal.acm.org/citation.cfm?coll=GUIDE&dl=GUIDE&id=89237")    (paper.year        zhang90 1990)    (paper.description zhang90 "
The authors examine conditions under which a doubly recursive program, i.e. a program of the form r(xbar) if s(xbar) and r(xbar) if r(ybar) ^ q(ybar') ^ r(ybar''), can be expressed as a linear recursive program, i.e. where the first recursive r definition is resolved with s(xbar).  The only assumption is that 
all the variables in the head appear somewhere in the body.  This result
strengthens previous results.  All rules are horn, and the semantics are LP. 
The necessary and sufficient conditions are nasty, as you might expect.
")    (paper.topic       zhang90 reformulation)    (paper.instance    zhang95)    (paper.bibtex      zhang95 inproceedings)    (paper.author      zhang95 jzhang)    (paper.author      zhang95 hzhang)    (paper.title       zhang95 "{SEM}: A System for Enumerating Models")    (paper.publication zhang95 ijcai)    (paper.url         zhang95 "http://citeseer.ist.psu.edu/context/34167/0")    (paper.year        zhang95 1995)    (paper.description zhang95 "
Model builder based on searching for a model directly and using the Least Number Heuristic, a method for reducing symmetry in the search space.
")    (paper.topic       zhang95 modelbuilding)    (paper.instance    zhang96)    (paper.bibtex      zhang96 article)    (paper.author      zhang96 jzhang)    (paper.title       zhang96 "Constructing Finite Algebras with {FALCON}")    (paper.publication zhang96 jar)    (paper.volume      zhang96 17)    (paper.number      zhang96 1)    (paper.startpage   zhang96 1)    (paper.endpage     zhang96 22)    (paper.url         zhang96 "http://citeseer.ist.psu.edu/context/254103/0")    (paper.year        zhang96 1996)    (paper.description zhang96 "
Model builder based on searching for a model directly, the so-called
Falcon-style approach.
")    (paper.topic       zhang96 modelbuilding)    (paper.instance    zhang97)    (paper.bibtex      zhang97 article)    (paper.author      zhang97 yanzhang)    (paper.author      zhang97 normanfoo)    (paper.title       zhang97 "Deriving Invariants and Constraints from Action Theories")    (paper.publication zhang97 fundamentainformaticae)    (paper.volume      zhang97 30)    (paper.number      zhang97 1)    (paper.startpage   zhang97 109)    (paper.endpage     zhang97 123)    (paper.url         zhang97 "http://citeseer.ist.psu.edu/zhang96deriving.html")    (paper.year        zhang97 1997)    (paper.rank        zhang97 5)    (paper.description zhang97 "
Zhang and Foo describe an approach to the construction of action invariants
(statements that hold in the predecessor and successor states when
executing a particular action) and state constraints (statements
true in all states reachable from an initial state).   It is based
on a state-based persistence formalism (Zhang's work), and assumes
a domain-closure axiom.  It considers actions with disjunctive effects
and preconditions, but does not provide complete results for those
cases.  It relies on the use of induction to prove a candidate
state constraint is actually a state constraint, but the generation
of these candidates is done algorithmically.
")    (paper.topic       zhang97 theoriesofaction)    (paper.instance    zhu98)    (paper.bibtex      zhu98 phdthesis)    (paper.author      zhu98 yunshanzhu)    (paper.title       zhu98 "Efficient First-Order Semantic Deduction Techniques")    (paper.url         zhu98 "http://citeseer.ist.psu.edu/zhu98efficient.html")    (paper.year        zhu98 1998)    (paper.rank        zhu98 1)    (paper.description zhu98 "
This is Zhu's thesis on Ordered Semantic Hyperlinking, complexity
measures of theorem proving, and OSHL applied to planning.
Contains some good citations to semantically driven proof techniques
in section 2.1.
")    (paper.topic       zhu98 resolutionvariants)    (paper.related     zhu98 plaisted97);;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;