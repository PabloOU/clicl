;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; University tests;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; Loader;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;(resetsystem)*(load "gullible:infomaster:examples:university:load.mcl")*;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; Data Tests;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;(checkclass 'person standard)0(checkclass 'faculty standard)0(checkclass 'staff standard)0(checkclass 'student standard)0(checkclass 'location standard)0(checkclass 'building standard)0(checkclass 'classroom standard)0(checkclass 'office standard)0(checkclass 'activity standard)0(checkclass 'course standard)0(checkclass 'lecture standard)0(checkclass 'seminar standard)0(checkclass 'thing standard)0(checkclass 'appliance standard)0(checkclass 'book standard)0(checkclass 'organization standard)0(checkclass 'school standard)0(checkclass 'department standard)0(checkclass 'gradesheet standard)0(checkclass 'schedule standard)0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; Demonstration;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;(testeval '(ask-all ?x (person.instance ?x)))(ALAN.ARROGANT BILL.BORING CATHY.CAREFUL DONNA.DARING FRANK.FRANK GARY.GRUMP HELEN.HEAVENLY IVAN.ILLEGIBLE OREN.OVERBEARING POLLY.SYLLABIC PAUL.POMPOUS TANYA.TERRIBLE AMY.AVOCADO CAROL.CARROT ELLIE.EGGPLANT HARRY.JICAMA MARY.MANGO PETER.POTATO GILBERT.GRAPE RICK.RADISH SKIP.SQUASH LARRY.LEMON MARK.MELON OLIVER.ORANGE AARON.AARDVARK BELINDA.BAT CALVIN.CARP GEORGE.GIRAFFE KITTY.KAT MINNIE.MOUSE PATTY.PANDA RORY.RHINO SALLY.SQUIRREL TONY.TUNA WANDA.WOLF ZACK.ZEBRA)(testeval '(ask-all ?x (faculty.instance ?x)))(ALAN.ARROGANT BILL.BORING CATHY.CAREFUL DONNA.DARING FRANK.FRANK GARY.GRUMP HELEN.HEAVENLY IVAN.ILLEGIBLE OREN.OVERBEARING POLLY.SYLLABIC PAUL.POMPOUS TANYA.TERRIBLE)(testeval '(ask-all ?x (staff.instance ?x)))(AMY.AVOCADO CAROL.CARROT ELLIE.EGGPLANT HARRY.JICAMA MARY.MANGO PETER.POTATO GILBERT.GRAPE RICK.RADISH SKIP.SQUASH LARRY.LEMON MARK.MELON OLIVER.ORANGE)(testeval '(ask-all ?x (student.instance ?x)))(AARON.AARDVARK BELINDA.BAT CALVIN.CARP GEORGE.GIRAFFE KITTY.KAT MINNIE.MOUSE PATTY.PANDA RORY.RHINO SALLY.SQUIRREL TONY.TUNA WANDA.WOLF ZACK.ZEBRA)(testeval '(ask-all ?x (location.instance ?x)))(BAUHAUS FROST HAWKING BAUHAUS.100 BAUHAUS.200 FROST.100 FROST.200 HAWKING.100 HAWKING.200 BAUHAUS.110 BAUHAUS.120 BAUHAUS.130 BAUHAUS.140 BAUHAUS.150 BAUHAUS.210 BAUHAUS.220 BAUHAUS.230 BAUHAUS.240 BAUHAUS.250 FROST.110 FROST.120 FROST.130 FROST.140 FROST.150 FROST.210 FROST.220 FROST.230 FROST.240 FROST.250 HAWKING.110 HAWKING.120 HAWKING.130 HAWKING.140 HAWKING.150 HAWKING.210 HAWKING.220 HAWKING.230 HAWKING.240 HAWKING.250)(testeval '(ask-all ?x (building.instance ?x)))(BAUHAUS FROST HAWKING)(testeval '(ask-all ?x (classroom.instance ?x)))(BAUHAUS.100 BAUHAUS.200 FROST.100 FROST.200 HAWKING.100 HAWKING.200)(testeval '(ask-all ?x (office.instance ?x)))(BAUHAUS.110 BAUHAUS.120 BAUHAUS.130 BAUHAUS.140 BAUHAUS.150 BAUHAUS.210 BAUHAUS.220 BAUHAUS.230 BAUHAUS.240 BAUHAUS.250 FROST.110 FROST.120 FROST.130 FROST.140 FROST.150 FROST.210 FROST.220 FROST.230 FROST.240 FROST.250 HAWKING.110 HAWKING.120 HAWKING.130 HAWKING.140 HAWKING.150  HAWKING.210 HAWKING.220 HAWKING.230 HAWKING.240 HAWKING.250)(testeval '(ask-all ?x (activity.instance ?x)))(ARCH121 COMP101 COMP225 COMP235 COMP257 COMP310 COMP101.01 COMP101.02 COMP101.03 SEMINAR.123456 SEMINAR.234561 SEMINAR.345612 SEMINAR.456123 SEMINAR.561234 SEMINAR.612345)(testeval '(ask-all ?x (course.instance ?x)))(ARCH121 COMP101 COMP225 COMP235 COMP257 COMP310)(testeval '(ask-all ?x (lecture.instance ?x)))(COMP101.01 COMP101.02 COMP101.03)(testeval '(ask-all ?x (seminar.instance ?x)))(SEMINAR.123456 SEMINAR.234561 SEMINAR.345612 SEMINAR.456123 SEMINAR.561234 SEMINAR.612345)(testeval '(ask-all ?x (meeting.instance ?x)))NIL(testeval '(ask-all ?x (thing.instance ?x)))(COMPUTER.PROJECTOR OVERHEAD.PROJECTOR SLIDE.PROJECTOR TV VCR BOOK.1 BOOK.2 BOOK.3 BOOK.4 BOOK.5 BOOK.6 BOOK.7 BOOK.8 BOOK.9 BOOK.10 BOOK.11 BOOK.12 ADAMS CLINTON EISENHOWER HARDING MADISON POLK)(testeval '(ask-all ?x (appliance.instance ?x)))(COMPUTER.PROJECTOR OVERHEAD.PROJECTOR SLIDE.PROJECTOR TV VCR)(testeval '(ask-all ?x (book.instance ?x)))(BOOK.1 BOOK.2 BOOK.3 BOOK.4 BOOK.5 BOOK.6 BOOK.7 BOOK.8 BOOK.9 BOOK.10 BOOK.11 BOOK.12)(testeval '(ask-all ?x (computer.instance ?x)))(ADAMS CLINTON EISENHOWER HARDING MADISON POLK)(testeval '(ask-all ?x (organization.instance ?x)))(ARCHITECTURE COMPUTERS ENGLISH HISTORY MATHEMATICS PHYSICS ENGINEERING HUMANITIES SCIENCE)(testeval '(ask-all ?x (school.instance ?x)))(ENGINEERING HUMANITIES SCIENCE)(testeval '(ask-all ?x (department.instance ?x)))(ARCHITECTURE COMPUTERS ENGLISH HISTORY MATHEMATICS PHYSICS)(testeval '(ask-all ?x (schedule.instance ?x)))(BAUHAUS-100-11/23/1998-08-17-30-DAY BAUHAUS-200-11/23/1998-08-17-30-DAY FROST-100-11/23/1998-08-17-30-DAY FROST-200-11/23/1998-08-17-30-DAY HAWKING-100-11/23/1998-08-17-30-DAY HAWKING-200-11/23/1998-08-17-30-DAY ALL-0-11/23/1998-08-17-30-DAY ALL-0-11/24/1998-08-17-30-DAY ALL-0-11/25/1998-08-17-30-DAY ALL-0-11/26/1998-08-17-30-DAY ALL-0-11/27/1998-08-17-30-DAY);;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; Search and Browse Demo;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;(testeval '(ask-all ?x (course.instance ?x)))(ARCH121 COMP101 COMP225 COMP235 COMP257 COMP310)(testeval '(ask-all ?y (and (course.instance ?x) (course.room ?x ?y))))(BAUHAUS.100 HAWKING.200 HAWKING.100 FROST.100)(testeval '(ask-all ?y (and (course.instance ?x) (course.hour ?x ?y))))(10-00 11-00)(testeval '(ask-all ?y (and (course.instance ?x) (course.prerequisite ?x ?y))))(COMP101)(sorteval '(ask-all ?y (and (course.instance ?x) (course.teacher ?x ?y))))(BILL.BORING CATHY.CAREFUL DONNA.DARING GARY.GRUMP HELEN.HEAVENLY OREN.OVERBEARING)(testeval '(ask-all ?0 (and (course.department ?0 computers) (course.instance ?0))))(COMP101 COMP225 COMP235 COMP257 COMP310)(testeval '(ask-all ?0 (and (course.department ?0 computers)                           (course.satisfies ?0 technology)                           (course.instance ?0))))(COMP225 COMP235 COMP257)(proclassify 'comp225)COURSE(testeval '(ask-all (?y ?z) (grades comp225 ?y ?z)))((CALVIN.CARP A) (GEORGE.GIRAFFE A) (PATTY.PANDA B) (RORY.RHINO C) (SALLY.SQUIRREL A) (TONY.TUNA D) (WANDA.WOLF B))(proclassify 'hawking.100)CLASSROOM(testeval '(ASK-ALL (CLASSROOM.SCHEDULE ?X) (CLASSROOM.SCHEDULE HAWKING.100 ?X)))((CLASSROOM.SCHEDULE HAWKING-100-11/23/1998-08-17-30-DAY))(proclassify 'HAWKING-100-11/23/1998-08-17-30-DAY)SCHEDULE(testeval '(ASK-ALL (SCHEDULE.ROOM ?X) (SCHEDULE.ROOM HAWKING-100-11/23/1998-08-17-30-DAY ?X)))((SCHEDULE.ROOM HAWKING.100))(testeval '(ASK-ALL (SCHEDULE.DATE ?X) (SCHEDULE.DATE HAWKING-100-11/23/1998-08-17-30-DAY ?X)))((SCHEDULE.DATE 11/23/1998))(testeval '(ASK-ALL (?RESERVEID ?ST ?ET ?DATE)           (AND (EVENT.ROOM ?RESERVEID HAWKING.100)                (EVENT.DATE ?RESERVEID ?DATE)                (EVENT.START ?RESERVEID ?ST)                (EVENT.END ?RESERVEID ?ET))))((COMP101.01 10-00 11-00 11/23/1998) (COMP101.02 10-00 11-00 11/25/1998) (COMP101.03 10-00 11-00 11/27/1998) (SEMINAR.123456 15-00 16-00 11/24/1998) (SEMINAR.234561 16-00 17-00 11/24/1998) (SEMINAR.345612 15-00 16-00 11/25/1998) (SEMINAR.456123 16-00 17-00 11/25/1998) (SEMINAR.561234 15-00 16-00 11/26/1998) (SEMINAR.612345 16-00 17-00 11/26/1998))(proclassify 'SEMINAR.456123)SEMINAR(proclassify 'helen.heavenly)FACULTY(testeval '(ASK-ALL (FACULTY.IMAGE ?X) (FACULTY.IMAGE HELEN.HEAVENLY ?X)))((FACULTY.IMAGE "<A HREF=\"/examples/university/images/helen.jpeg\" TARGET=fullsize><IMG SRC=\"/examples/university/images/helen.jpeg\" HEIGHT=90></A>"))(proclassify 'computers)DEPARTMENT(proclassify 'engineering)SCHOOL(proclassify 'architecture)DEPARTMENT(proclassify 'winter)QUARTER(proclassify 'monday)WEEKDAY(proclassify '11-00)HOUR(proclassify 'cathy.careful)FACULTY(testeval '(ask-all (faculty.lastname ?x) (faculty.lastname cathy.careful ?x)))((FACULTY.LASTNAME "Careful"))(proclassify 'gary.grump)FACULTY(proclassify 'book.3)BOOK(proclassify 'book.4)BOOK(proclassify 'oren.overbearing)FACULTY(proclassify 'book.9)BOOK(proclassify 'book.10)BOOK(testeval '(ASK-ALL ?7 (AND (COURSE.DEPARTMENT ?7 COMPUTERS)                           (COURSE.SATISFIES ?7 TECHNOLOGY)                           (COURSE.TEACHER ?7 ?8)                           (FACULTY.RANK ?8 FULL.PROFESSOR)                           (FACULTY.INSTANCE ?8)                           (COURSE.INSTANCE ?7))))(COMP235 COMP257)(testeval '(ASK-ALL ?7 (AND (COURSE.DEPARTMENT ?7 COMPUTERS)                           (COURSE.SATISFIES ?7 TECHNOLOGY)                           (COURSE.TEACHER ?7 ?8)                           (FACULTY.RANK ?8 FULL.PROFESSOR)                           (FACULTY.PUBLICATION ?8 ?9)                           (AND (BOOK.YEAR ?9 ?_C) (=< 1996 ?_C))                           (BOOK.INSTANCE ?9)                           (FACULTY.INSTANCE ?8)                           (COURSE.INSTANCE ?7))))(COMP235);;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; Metalevel tests;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; Metadata Tests;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;(checkclass 'class *manager*)0(checkclass 'predicaterelation *manager*)0(checkclass 'attributerelation *manager*)0(checkclass 'interface *manager*)0(checkclass 'viewserver *manager*)0(checkclass 'ruleserver *manager*)0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; Agent tests;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;(length (asks '?x '(isa ?x factserver) nil *manager*))1(length (asks '?x '(isa ?x viewserver) nil *manager*))2(length (asks '?x '(isa ?x fullserver) nil *manager*))1(length (asks '?x '(isa ?x dataserver) nil *manager*))2(length (asks '?x '(isa ?x diffserver) nil *manager*))1(length (asks '?x '(isa ?x ruleserver) nil *manager*))2(length (asks '?x '(isa ?x fastserver) nil *manager*))2(length (asks '?x '(isa ?x translator) nil *manager*))1(length (asks '?x '(isa ?x transformer) nil *manager*))1(length (asks '?x '(isa ?x integrator) nil *manager*))1(length (asks '?x '(isa ?x facilitator) nil *manager*))2(length (asks '?x '(isa ?x interface) nil *manager*))3(length (asks '?x '(isa ?x agent) nil *manager*))19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; Class tests;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;(request '(ask-if (isa faculty class)) nil *manager*)T(request '(ask-if (superclass faculty person)) nil *manager*)T;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; Relation tests;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;(request '(ask-one ?y (domain faculty.rank ?y)) nil *manager*)faculty(request '(ask-one ?y (range faculty.rank ?y)) nil *manager*)rank(request '(ask-one ?y (unique faculty.rank ?y)) nil *manager*)yes(request '(ask-one ?y (total faculty.rank ?y)) nil *manager*)yes(request '(ask-one ?y (changestyle faculty.rank ?y)) nil *manager*)dropdownlist(request '(ask-one ?y (searchstyle faculty.rank ?y)) nil *manager*)dropdownlist;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;