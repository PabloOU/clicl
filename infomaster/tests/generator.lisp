(defun ntdt (m n f)  (with-open-file (s f :direction :output :if-exists :supersede)    (do ((i 1 (1+ i)))        ((> i m))        (format s "~A.~A" i 1)        (do ((j 2 (1+ j)))            ((> j n))            (write-char #\tab s)            (format s "~A.~A" i j))        (terpri s))))(defun ten (f)  (with-open-file (s f :direction :output :if-exists :supersede)    (do ((i 0 (1+ i)))        ((> i 9))      (format s "    (isa a~A ten)" i) (terpri s)      (format s "    (alpha.1 a~A b~A)" i i) (terpri s) (terpri s))))(defun hundred (f)  (with-open-file (s f :direction :output :if-exists :supersede)    (do ((i 0 (1+ i)))        ((> i 9))      (do ((j 0 (1+ j)))          ((> j 9))        (format s "    (isa a~A~A hundred)" i j) (terpri s)        (format s "    (alpha.1 a~A~A b~A)" i j i) (terpri s)        (format s "    (alpha.2 a~A~A b~A)" i j j) (terpri s) (terpri s)))))(defun thousand (f)  (with-open-file (s f :direction :output :if-exists :supersede)    (do ((i 0 (1+ i)))        ((> i 9))      (do ((j 0 (1+ j)))          ((> j 9))        (do ((k 0 (1+ k)))            ((> k 9))          (format s "    (isa a~A~A~A thousand)" i j k) (terpri s)          (format s "    (alpha.1 a~A~A~A b~A)" i j k i) (terpri s)          (format s "    (alpha.2 a~A~A~A b~A)" i j k j) (terpri s)          (format s "    (alpha.3 a~A~A~A b~A)" i j k k) (terpri s) (terpri s))))))(defun tenthousand (f)  (with-open-file (s f :direction :output :if-exists :supersede)    (do ((i 0 (1+ i)))        ((> i 9))      (do ((j 0 (1+ j)))          ((> j 9))        (do ((k 0 (1+ k)))            ((> k 9))          (do ((l 0 (1+ l)))              ((> l 9))            (format s "    (isa a~A~A~A~A tenthousand)" i j k l) (terpri s)            (format s "    (alpha.1 a~A~A~A~A b~A)" i j k l i) (terpri s)            (format s "    (alpha.2 a~A~A~A~A b~A)" i j k l j) (terpri s)            (format s "    (alpha.3 a~A~A~A~A b~A)" i j k l k) (terpri s)            (format s "    (alpha.4 a~A~A~A~A b~A)" i j k l l) (terpri s) (terpri s)))))))(defun hundredthousand (f)  (with-open-file (s f :direction :output :if-exists :supersede)    (do ((i 0 (1+ i)))        ((> i 9))      (do ((j 0 (1+ j)))          ((> j 9))        (do ((k 0 (1+ k)))            ((> k 9))          (do ((l 0 (1+ l)))              ((> l 9))            (do ((m 0 (1+ m)))                ((> m 9))              (format s "    (isa a~A~A~A~A~A hundredthousand)" i j k l m) (terpri s)              (format s "    (alpha.1 a~A~A~A~A~A b~A)" i j k l m i) (terpri s)              (format s "    (alpha.2 a~A~A~A~A~A b~A)" i j k l m j) (terpri s)              (format s "    (alpha.3 a~A~A~A~A~A b~A)" i j k l m k) (terpri s)              (format s "    (alpha.4 a~A~A~A~A~A b~A)" i j k l m l) (terpri s)              (format s "    (alpha.5 a~A~A~A~A~A b~A)" i j k l m m) (terpri s) (terpri s))))))))(defun million (f)  (with-open-file (s f :direction :output :if-exists :supersede)    (do ((i 0 (1+ i)))        ((> i 9))      (do ((j 0 (1+ j)))          ((> j 9))        (do ((k 0 (1+ k)))            ((> k 9))          (do ((l 0 (1+ l)))              ((> l 9))            (do ((m 0 (1+ m)))                ((> m 9))              (do ((n 0 (1+ n)))                  ((> n 9))              (format s "    (isa a~A~A~A~A~A million)" i j k l m n) (terpri s)              (format s "    (alpha.1 a~A~A~A~A~A b~A)" i j k l m n i) (terpri s)              (format s "    (alpha.2 a~A~A~A~A~A b~A)" i j k l m n j) (terpri s)              (format s "    (alpha.3 a~A~A~A~A~A b~A)" i j k l m n k) (terpri s)              (format s "    (alpha.4 a~A~A~A~A~A b~A)" i j k l m n l) (terpri s)              (format s "    (alpha.5 a~A~A~A~A~A b~A)" i j k l m n m) (terpri s)              (format s "    (alpha.6 a~A~A~A~A~A b~A)" i j k l m n n) (terpri s) (terpri s)))))))))