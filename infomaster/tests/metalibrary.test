;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; Metalibrary Tests;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; General tests;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;(restartsystem)*(kind *metalibrary*)ruleserver(meta *metalibrary*)nil(checkrules *metalibrary*)*;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; metarules tests;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;(defparameter *metalibraries*   '((=> (specialty ?x ?y) (specialist ?y ?x))    (=> (not (specialty ?x ?y)) (not (specialist ?y ?x)))    (=> (specialist ?x ?y) (specialty ?y ?x))    (=> (not (specialist ?x ?y)) (not (specialty ?y ?x)))        (=> (expertise ?x ?y) (expert ?y ?x))    (=> (not (expertise ?x ?y)) (not (expert ?y ?x)))    (=> (expert ?x ?y) (expertise ?y ?x))    (=> (not (expert ?x ?y)) (not (expertise ?y ?x)))        (=> (isa ?x agent) (isa ?x thing))    (=> (not (isa ?x agent))        (not (isa ?x thing)))    (=> (isa ?x relation) (isa ?x thing))    (=> (not (isa ?x relation)) (not (isa ?x thing)))    (=> (isa ?x class) (isa ?x thing))    (=> (not (isa ?x class)) (not (isa ?x thing)))    (=> (isa ?x chore) (isa ?x thing))    (=> (not (isa ?x chore)) (not (isa ?x thing)))    (=> (isa ?x StartupChore)        (and (isa ?x chore)             (isa ?x thing)))    (=> (not (isa ?x StartupChore))         (and (not (isa ?x chore))             (not (isa ?x thing))))    (=> (isa ?x action) (isa ?x thing))    (=> (not (isa ?x action)) (not (isa ?x thing)))    (=> (isa ?x ActionInvocation) (and (isa ?x OtherObject) (isa ?x thing)))    (=> (not (isa ?x ActionInvocation))         (and (not (isa ?x OtherObject))             (not (isa ?x thing))))    (=> (isa ?x infoserver) (and (isa ?x agent) (isa ?x thing)))    (=> (not (isa ?x infoserver))         (and (not (isa ?x agent))             (not (isa ?x thing))))    (=> (isa ?x fileserver) (and (isa ?x agent) (isa ?x thing)))    (=> (not (isa ?x fileserver))        (and (not (isa ?x agent))             (not (isa ?x thing))))    (=> (isa ?x tableserver) (and (isa ?x agent) (isa ?x thing)))    (=> (not (isa ?x tableserver))        (and (not (isa ?x agent))             (not (isa ?x thing))))    (=> (isa ?x interface) (and (isa ?x agent) (isa ?x thing)))    (=> (not (isa ?x interface))        (and (not (isa ?x agent))             (not (isa ?x thing))))    (=> (isa ?x basket) (and (isa ?x agent) (isa ?x thing)))    (=> (not (isa ?x basket))        (and (not (isa ?x agent))             (not (isa ?x thing))))    (=> (isa ?x ACLserver) (and (isa ?x agent) (isa ?x thing)))    (=> (not (isa ?x ACLserver))        (and (not (isa ?x agent))             (not (isa ?x thing))))    (=> (isa ?x transformer) (and (isa ?x agent) (isa ?x thing)))    (=> (not (isa ?x transformer))        (and (not (isa ?x agent)) (not (isa ?x thing))))    (=> (isa ?x translator) (and (isa ?x agent) (isa ?x thing)))    (=> (not (isa ?x translator))        (and (not (isa ?x agent)) (not (isa ?x thing))))    (=> (isa ?x facilitator) (and (isa ?x agent) (isa ?x thing)))    (=> (not (isa ?x facilitator))        (and (not (isa ?x agent)) (not (isa ?x thing))))    (=> (isa ?x authorizer) (and (isa ?x agent) (isa ?x thing)))    (=> (not (isa ?x authorizer))        (and (not (isa ?x agent)) (not (isa ?x thing))))    (=> (isa ?x manager) (and (isa ?x agent) (isa ?x thing)))    (=> (not (isa ?x manager))        (and (not (isa ?x agent)) (not (isa ?x thing))))        (=> (isa ?x remote) (and (isa ?x agent) (isa ?x thing))) ;; What is this?)    (=> (not (isa ?x remote))        (and (not (isa ?x agent)) (not (isa ?x thing))))        (=> (isa ?x NAryRelation) (and (isa ?x relation) (isa ?x thing)))    (=> (not (isa ?x NAryRelation))        (and (not (isa ?x relation)) (not (isa ?x thing))))        (=> (isa ?x ArgumentRelation)         (and (isa ?x relation) (arity ?x 2) (isa ?x thing)))    (=> (not (isa ?x ArgumentRelation))        (and (not (isa ?x relation)) 	     (not (arity ?x 2))	     (not (isa ?x thing))))        (=> (isa ?x AttributeRelation)        (and (isa ?x relation) (arity ?x 2) (isa ?x thing)))    (=> (not (isa ?x AttributeRelation))        (and (not (isa ?x relation))	     (not (arity ?x 2))	     (not (isa ?x thing))))        (=> (isa ?x EvaluableRelation)        (and (isa ?x relation) (arity ?x 2) (isa ?x thing)))    (=> (not (isa ?x EvaluableRelation))        (and (not (isa ?x relation))	     (not (arity ?x 2))	     (not (isa ?x thing))))        (=> (isa ?x EvaluableFunction)        (and (isa ?x EvaluableRelation) (isa ?x relation)	     (arity ?x 2) (isa ?x thing)))    (=> (not (isa ?x EvaluableFunction))        (and (not (isa ?x EvaluableRelation))	     (not (isa ?x relation))	     (not (arity ?x 2))	     (not (isa ?x thing))))))*(testdata '*metalibraries* *metalibrary*)0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;