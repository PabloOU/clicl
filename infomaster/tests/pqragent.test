;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;(restartsystem)*(defparameter *foo* (make-instance 'agent :name 'foo))*(define-theory *foo* ""  '((p a a)    (p a b)    (p a c)))*(defparameter *bar* (make-instance 'agent :name 'bar))*(define-theory *bar* ""  '((q a a)    (q b b)    (q c c)))*(defparameter *baz* (make-instance 'agent :name 'baz))*(define-theory *baz* ""  '((r a a)    (r b b)    (r c c)))*(mapc #'(lambda (x) (insert x *directory*))  '((specialty foo p)    (specialty bar q)    (specialty baz r)))*(request '(ask-all ?z (and (p a ?y) (q ?y ?z) (r ?x ?z))) *terminal* *facilitator*)(a b c)(define-theory *directory* "" *directory-sentences*)*;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;